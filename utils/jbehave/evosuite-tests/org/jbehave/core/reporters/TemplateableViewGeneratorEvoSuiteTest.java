/*
 * This file was automatically generated by EvoSuite
 */

package org.jbehave.core.reporters;

import java.io.File;
import java.io.PrintStream;
import java.nio.CharBuffer;
import java.util.HashMap;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;
import java.util.Properties;
import java.util.SortedMap;

import org.jbehave.core.io.StoryNameResolver;
import org.jbehave.core.io.UnderscoredToCapitalized;
import org.jbehave.core.model.StoryMaps;
import org.junit.Test;


public class TemplateableViewGeneratorEvoSuiteTest {


  //Test case number: 0
  /*
   * 11 covered goals:
   * 1 org.jbehave.core.reporters.TemplateableViewGenerator.newDataModel()Ljava/util/Map;: root-Branch
   * 2 org.jbehave.core.reporters.TemplateableViewGenerator.<init>(Lorg/jbehave/core/io/StoryNameResolver;Lorg/jbehave/core/reporters/TemplateProcessor;)V: root-Branch
   * 3 org.jbehave.core.reporters.TemplateableViewGenerator.templateResource(Ljava/lang/String;)Ljava/lang/String;: root-Branch
   * 4 org.jbehave.core.reporters.TemplateableViewGenerator.defaultViewProperties()Ljava/util/Properties;: root-Branch
   * 5 org.jbehave.core.reporters.TemplateableViewGenerator.write(Ljava/io/File;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)Ljava/io/File;: root-Branch
   * 6 org.jbehave.core.reporters.TemplateableViewGenerator.mergeWithDefault(Ljava/util/Properties;)Ljava/util/Properties;: root-Branch
   * 7 org.jbehave.core.reporters.TemplateableViewGenerator.generateMapsView(Ljava/io/File;Lorg/jbehave/core/model/StoryMaps;Ljava/util/Properties;)V: root-Branch
   * 8 org.jbehave.core.reporters.TemplateableViewGenerator$ViewGenerationFailedForTemplate.<init>(Ljava/lang/String;Ljava/lang/Exception;)V: root-Branch
   * 9 org.jbehave.core.reporters.TemplateableViewGenerator.getReportsCount()Lorg/jbehave/core/reporters/ReportsCount;: root-Branch
   * 10 org.jbehave.core.reporters.TemplateableViewGenerator.count(Ljava/lang/String;Ljava/util/Collection;)I: I41 Branch 16 IFNE L119 - false
   * 11 org.jbehave.core.reporters.TemplateableViewGenerator.countStoriesWithScenarios()I: I42 Branch 14 IFNE L106 - false
   */
  @Test
  public void test0()  throws Throwable  {
      UnderscoredToCapitalized underscoredToCapitalized0 = new UnderscoredToCapitalized();
      Class<?> class0 = TemplateableViewGenerator.class;
      FreemarkerProcessor freemarkerProcessor0 = new FreemarkerProcessor(class0);
      TemplateableViewGenerator templateableViewGenerator0 = new TemplateableViewGenerator(underscoredToCapitalized0, freemarkerProcessor0);
      ReportsCount reportsCount0 = templateableViewGenerator0.getReportsCount();
      UnderscoredToCapitalized underscoredToCapitalized1 = new UnderscoredToCapitalized("<NOPARSE>");
      FreemarkerProcessor freemarkerProcessor1 = new FreemarkerProcessor();
      TemplateableViewGenerator templateableViewGenerator1 = new TemplateableViewGenerator(underscoredToCapitalized1, freemarkerProcessor1);
      HashMap<String, List<File>> hashMap0 = new HashMap<String, List<File>>();
      UnderscoredToCapitalized underscoredToCapitalized2 = new UnderscoredToCapitalized();
      String string0 = underscoredToCapitalized1.resolveName("<NOPARSE>");
      Exception exception0 = new Exception();
      TemplateableViewGenerator.ViewGenerationFailedForTemplate templateableViewGenerator_ViewGenerationFailedForTemplate0 = new TemplateableViewGenerator.ViewGenerationFailedForTemplate("6|s?By{o2K", exception0);
      String string1 = templateableViewGenerator_ViewGenerationFailedForTemplate0.getLocalizedMessage();
      TemplateableViewGenerator templateableViewGenerator2 = new TemplateableViewGenerator(underscoredToCapitalized2, (TemplateProcessor) null);
      File file0 = new File("6|s?By{o2K");
      String string2 = underscoredToCapitalized1.resolveName("6|s?By{o2K");
      Properties properties0 = templateableViewGenerator1.defaultViewProperties();
      // Undeclared exception!
      try {
        templateableViewGenerator1.generateMapsView(file0, (StoryMaps) null, properties0);
      }catch(TemplateableViewGenerator.ViewGenerationFailedForTemplate e) {
        /*
         * no message in exception (getMessage() returned null)
         */
        /*
      %%%<ex><className val="ViewGenerationFailedForTemplate"/><stackDepth val="19"/><causeDepth val="1"/><source val="org.evosuite.sandbox.MSecurityManager.checkPermission(MSecurityManager.java:307)"/></ex>%%%
         */
      }
  }

  //Test case number: 2
  /*
   * 13 covered goals:
   * 1 org.jbehave.core.reporters.TemplateableViewGenerator$Report.getFilesByFormat()Ljava/util/Map;: root-Branch
   * 2 org.jbehave.core.reporters.TemplateableViewGenerator$Report.<init>(Ljava/lang/String;Ljava/util/Map;)V: root-Branch
   * 3 org.jbehave.core.reporters.TemplateableViewGenerator$Report.<init>(Ljava/lang/String;Ljava/util/Map;Ljava/util/Map;)V: root-Branch
   * 4 org.jbehave.core.reporters.TemplateableViewGenerator.<init>(Lorg/jbehave/core/io/StoryNameResolver;Lorg/jbehave/core/reporters/TemplateProcessor;)V: root-Branch
   * 5 org.jbehave.core.reporters.TemplateableViewGenerator$TimeFormatter.<init>()V: root-Branch
   * 6 org.jbehave.core.reporters.TemplateableViewGenerator$TimeFormatter.formatMillis(J)Ljava/lang/String;: root-Branch
   * 7 org.jbehave.core.reporters.TemplateableViewGenerator$ReportsTable.addTotalsReport()V: root-Branch
   * 8 org.jbehave.core.reporters.TemplateableViewGenerator$Report.getPath()Ljava/lang/String;: root-Branch
   * 9 org.jbehave.core.reporters.TemplateableViewGenerator$ReportsTable.<init>(Ljava/util/List;Lorg/jbehave/core/io/StoryNameResolver;)V: root-Branch
   * 10 org.jbehave.core.reporters.TemplateableViewGenerator$Report.nameAs(Ljava/lang/String;)V: root-Branch
   * 11 org.jbehave.core.reporters.TemplateableViewGenerator$Report.getName()Ljava/lang/String;: I4 Branch 5 IFNULL L323 - false
   * 12 org.jbehave.core.reporters.TemplateableViewGenerator$ReportsTable.index(Ljava/util/List;)V: I33 Branch 8 IFNE L253 - false
   * 13 org.jbehave.core.reporters.TemplateableViewGenerator$ReportsTable.totals(Ljava/util/Collection;)Lorg/jbehave/core/reporters/TemplateableViewGenerator$Report;: I78 Branch 11 IFNE L267 - false
   */
  @Test
  public void test2()  throws Throwable  {
      UnderscoredToCapitalized underscoredToCapitalized0 = new UnderscoredToCapitalized("7mlinuz");
      TemplateableViewGenerator.TimeFormatter templateableViewGenerator_TimeFormatter0 = new TemplateableViewGenerator.TimeFormatter();
      LinkedList<TemplateableViewGenerator.Report> linkedList0 = new LinkedList<TemplateableViewGenerator.Report>();
      TemplateableViewGenerator.ReportsTable templateableViewGenerator_ReportsTable0 = new TemplateableViewGenerator.ReportsTable(linkedList0, underscoredToCapitalized0);
      String string0 = templateableViewGenerator_TimeFormatter0.formatMillis(0L);
      Class<?> class0 = CharBuffer.class;
      FreemarkerProcessor freemarkerProcessor0 = new FreemarkerProcessor(class0);
      String string1 = underscoredToCapitalized0.resolveName("s");
      String string2 = "(D7$cc~<";
      // Undeclared exception!
      try {
        freemarkerProcessor0.configuration();
      }catch(NoClassDefFoundError e) {
        /*
         * Could not initialize class freemarker.template.Configuration
         */
        /*
      %%%<ex><className val="NoClassDefFoundError"/><stackDepth val="14"/><causeDepth val="0"/><source val="org.jbehave.core.reporters.FreemarkerProcessor.configuration(FreemarkerProcessor.java:25)"/></ex>%%%
         */
      }
  }

  //Test case number: 3
  /*
   * 16 covered goals:
   * 1 org.jbehave.core.reporters.TemplateableViewGenerator$Report.getFilesByFormat()Ljava/util/Map;: root-Branch
   * 2 org.jbehave.core.reporters.TemplateableViewGenerator$Report.<init>(Ljava/lang/String;Ljava/util/Map;)V: root-Branch
   * 3 org.jbehave.core.reporters.TemplateableViewGenerator$Report.<init>(Ljava/lang/String;Ljava/util/Map;Ljava/util/Map;)V: root-Branch
   * 4 org.jbehave.core.reporters.TemplateableViewGenerator.<init>(Lorg/jbehave/core/io/StoryNameResolver;Lorg/jbehave/core/reporters/TemplateProcessor;)V: root-Branch
   * 5 org.jbehave.core.reporters.TemplateableViewGenerator$TimeFormatter.<init>()V: root-Branch
   * 6 org.jbehave.core.reporters.TemplateableViewGenerator$TimeFormatter.formatMillis(J)Ljava/lang/String;: root-Branch
   * 7 org.jbehave.core.reporters.TemplateableViewGenerator$ReportsTable.addTotalsReport()V: root-Branch
   * 8 org.jbehave.core.reporters.TemplateableViewGenerator$Report.getPath()Ljava/lang/String;: root-Branch
   * 9 org.jbehave.core.reporters.TemplateableViewGenerator$ReportsTable.<init>(Ljava/util/List;Lorg/jbehave/core/io/StoryNameResolver;)V: root-Branch
   * 10 org.jbehave.core.reporters.TemplateableViewGenerator$Report.nameAs(Ljava/lang/String;)V: root-Branch
   * 11 org.jbehave.core.reporters.TemplateableViewGenerator$Report.getName()Ljava/lang/String;: I4 Branch 5 IFNULL L323 - false
   * 12 org.jbehave.core.reporters.TemplateableViewGenerator$ReportsTable.index(Ljava/util/List;)V: I33 Branch 8 IFNE L253 - false
   * 13 org.jbehave.core.reporters.TemplateableViewGenerator$ReportsTable.totals(Ljava/util/Collection;)Lorg/jbehave/core/reporters/TemplateableViewGenerator$Report;: I78 Branch 11 IFNE L267 - false
   * 14 org.jbehave.core.reporters.TemplateableViewGenerator.getReportsCount()Lorg/jbehave/core/reporters/ReportsCount;: root-Branch
   * 15 org.jbehave.core.reporters.TemplateableViewGenerator.count(Ljava/lang/String;Ljava/util/Collection;)I: I41 Branch 16 IFNE L119 - false
   * 16 org.jbehave.core.reporters.TemplateableViewGenerator.countStoriesWithScenarios()I: I42 Branch 14 IFNE L106 - false
   */
  @Test
  public void test3()  throws Throwable  {
      UnderscoredToCapitalized underscoredToCapitalized0 = new UnderscoredToCapitalized("-Ulinuz");
      LinkedList<TemplateableViewGenerator.Report> linkedList0 = new LinkedList<TemplateableViewGenerator.Report>();
      TemplateableViewGenerator.ReportsTable templateableViewGenerator_ReportsTable0 = new TemplateableViewGenerator.ReportsTable(linkedList0, underscoredToCapitalized0);
      Class<?> class0 = TemplateableViewGenerator.class;
      FreemarkerProcessor freemarkerProcessor0 = new FreemarkerProcessor(class0);
      String string0 = underscoredToCapitalized0.resolveName("v_@)xGmcAv~OOYY|");
      TemplateableViewGenerator.Report templateableViewGenerator_Report0 = new TemplateableViewGenerator.Report("v_@)xGmcAv~OOYY|", (Map<String, File>) null);
      TemplateableViewGenerator templateableViewGenerator0 = new TemplateableViewGenerator(underscoredToCapitalized0, freemarkerProcessor0);
      ReportsCount reportsCount0 = templateableViewGenerator0.getReportsCount();
      Map<String, File> map0 = templateableViewGenerator_Report0.getFilesByFormat();
      String string1 = "(D7$cc~<";
      // Undeclared exception!
      try {
        freemarkerProcessor0.configuration();
      }catch(NoClassDefFoundError e) {
        /*
         * Could not initialize class freemarker.template.Configuration
         */
        /*
      %%%<ex><className val="NoClassDefFoundError"/><stackDepth val="14"/><causeDepth val="0"/><source val="org.jbehave.core.reporters.FreemarkerProcessor.configuration(FreemarkerProcessor.java:25)"/></ex>%%%
         */
      }
  }

  //Test case number: 4
  /*
   * 10 covered goals:
   * 1 org.jbehave.core.reporters.TemplateableViewGenerator.<init>(Lorg/jbehave/core/io/StoryNameResolver;Lorg/jbehave/core/reporters/TemplateProcessor;)V: root-Branch
   * 2 org.jbehave.core.reporters.TemplateableViewGenerator$1.<init>(Lorg/jbehave/core/reporters/TemplateableViewGenerator;Ljava/lang/String;Ljava/util/List;)V: root-Branch
   * 3 org.jbehave.core.reporters.TemplateableViewGenerator$ViewGenerationFailedForTemplate.<init>(Ljava/lang/String;Ljava/lang/Exception;)V: root-Branch
   * 4 org.jbehave.core.reporters.TemplateableViewGenerator$ReportCreationFailed.<init>(Ljava/util/Map;Ljava/lang/Exception;)V: root-Branch
   * 5 org.jbehave.core.reporters.TemplateableViewGenerator$1.accept(Ljava/io/File;Ljava/lang/String;)Z: I12 Branch 2 IFEQ L179 - true
   * 6 org.jbehave.core.reporters.TemplateableViewGenerator.readReportFiles(Ljava/io/File;Ljava/lang/String;Ljava/util/List;)Ljava/util/SortedMap;: I12 Branch 22 IFNE L174 - true
   * 7 org.jbehave.core.reporters.TemplateableViewGenerator$1.accept(Ljava/io/File;Ljava/lang/String;)Z: I6 Branch 1 IFGT L179 - false
   * 8 org.jbehave.core.reporters.TemplateableViewGenerator$1.hasFormats(Ljava/lang/String;Ljava/util/List;)Z: I25 Branch 4 IFNE L183 - false
   * 9 org.jbehave.core.reporters.TemplateableViewGenerator.readReportFiles(Ljava/io/File;Ljava/lang/String;Ljava/util/List;)Ljava/util/SortedMap;: I9 Branch 21 IFNULL L174 - false
   * 10 org.jbehave.core.reporters.TemplateableViewGenerator.readReportFiles(Ljava/io/File;Ljava/lang/String;Ljava/util/List;)Ljava/util/SortedMap;: I88 Branch 24 IF_ICMPLT L192 - false
   */
  @Test
  public void test4()  throws Throwable  {
      Class<?> class0 = TemplateableViewGenerator.class;
      FreemarkerProcessor freemarkerProcessor0 = new FreemarkerProcessor(class0);
      TemplateableViewGenerator templateableViewGenerator0 = new TemplateableViewGenerator((StoryNameResolver) null, freemarkerProcessor0);
      File file0 = new File("E?rdE&+HHd4O|");
      File file1 = file0.getAbsoluteFile();
      File file2 = file1.getParentFile();
      File file3 = file2.getCanonicalFile();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      SortedMap<String, List<File>> sortedMap0 = templateableViewGenerator0.readReportFiles(file3, "E?rdE&+HHd4O|", linkedList0);
      Exception exception0 = new Exception("E?rdE&+HHd4O|");
      Exception exception1 = new Exception(exception0);
      TemplateableViewGenerator.ReportCreationFailed templateableViewGenerator_ReportCreationFailed0 = new TemplateableViewGenerator.ReportCreationFailed(sortedMap0, exception1);
      String string0 = templateableViewGenerator_ReportCreationFailed0.getMessage();
      TemplateableViewGenerator.ViewGenerationFailedForTemplate templateableViewGenerator_ViewGenerationFailedForTemplate0 = new TemplateableViewGenerator.ViewGenerationFailedForTemplate("Report creation failed from file {}", exception1);
      PrintStream printStream0 = null;
      try {
        printStream0 = new PrintStream(file0);
      }catch(SecurityException e) {
        /*
         * Security manager blocks (java.io.FilePermission E?rdE&+HHd4O| write)
         * java.lang.Thread.getStackTrace(Thread.java:1495)
         * org.evosuite.sandbox.MSecurityManager.checkPermission(MSecurityManager.java:303)
         * java.lang.SecurityManager.checkWrite(SecurityManager.java:979)
         * java.io.FileOutputStream.<init>(FileOutputStream.java:198)
         * java.io.FileOutputStream.<init>(FileOutputStream.java:160)
         * java.io.PrintStream.<init>(PrintStream.java:245)
         * sun.reflect.GeneratedConstructorAccessor32.newInstance(Unknown Source)
         * sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
         * java.lang.reflect.Constructor.newInstance(Constructor.java:532)
         * org.evosuite.testcase.ConstructorStatement$1.execute(ConstructorStatement.java:226)
         * org.evosuite.testcase.AbstractStatement.exceptionHandler(AbstractStatement.java:142)
         * org.evosuite.testcase.ConstructorStatement.execute(ConstructorStatement.java:188)
         * org.evosuite.testcase.TestRunnable.call(TestRunnable.java:291)
         * org.evosuite.testcase.TestRunnable.call(TestRunnable.java:1)
         * java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:334)
         * java.util.concurrent.FutureTask.run(FutureTask.java:166)
         * java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1146)
         * java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
         * java.lang.Thread.run(Thread.java:679)
         */
        /*
      %%%<ex><className val="SecurityException"/><stackDepth val="18"/><causeDepth val="0"/><source val="org.evosuite.sandbox.MSecurityManager.checkPermission(MSecurityManager.java:307)"/></ex>%%%
         */
      }
  }
}
