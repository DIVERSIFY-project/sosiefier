/*
 * This file was automatically generated by EvoSuite
 */

package org.jbehave.core.io;

import org.junit.Test;
import org.junit.runner.RunWith;
import static org.junit.Assert.*;
import java.io.CharArrayReader;
import java.io.FileDescriptor;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.io.PipedReader;
import java.io.PushbackInputStream;
import java.io.Reader;
import java.io.SequenceInputStream;
import java.io.SyncFailedException;
import org.jbehave.core.io.IOUtils;


public class IOUtilsEvoSuiteTest {


  //Test case number: 0
  /*
   * 1 covered goal:
   * 1 org.jbehave.core.io.IOUtils.toString(Ljava/io/Reader;Z)Ljava/lang/String;: I23 Branch 4 IFEQ L41 - true
   */
  @Test
  public void test0()  throws Throwable  {
      PipedReader pipedReader0 = new PipedReader();
      try {
        IOUtils.toString((Reader) pipedReader0, false);
      }catch(IOException e) {
        /*
         * Pipe not connected
         */
        /*
      %%%<ex><className val="IOException"/><stackDepth val="20"/><causeDepth val="0"/><source val="java.io.PipedReader.read(PipedReader.java:293)"/></ex>%%%
         */
      }
  }

  //Test case number: 1
  /*
   * 2 covered goals:
   * 1 org.jbehave.core.io.IOUtils.<init>()V: root-Branch
   * 2 org.jbehave.core.io.IOUtils.toString(Ljava/io/InputStream;Z)Ljava/lang/String;: I23 Branch 2 IFEQ L22 - true
   */
  @Test
  public void test1()  throws Throwable  {
      IOUtils iOUtils0 = new IOUtils();
      // Undeclared exception!
      try {
        IOUtils.toString((InputStream) null, false);
      }catch(NullPointerException e) {
        /*
         * no message in exception (getMessage() returned null)
         */
        /*
      %%%<ex><className val="NullPointerException"/><stackDepth val="19"/><causeDepth val="0"/><source val="java.io.Reader.&lt;init&gt;(Reader.java:78)"/></ex>%%%
         */
      }
  }

  //Test case number: 2
  /*
   * 4 covered goals:
   * 1 org.jbehave.core.io.IOUtils.<init>()V: root-Branch
   * 2 org.jbehave.core.io.IOUtils.toString(Ljava/io/Reader;Z)Ljava/lang/String;: I8 Branch 3 IFEQ L41 - true
   * 3 org.jbehave.core.io.IOUtils.toString(Ljava/io/Reader;Z)Ljava/lang/String;: I23 Branch 4 IFEQ L41 - true
   * 4 org.jbehave.core.io.IOUtils.toString(Ljava/io/Reader;Z)Ljava/lang/String;: I8 Branch 3 IFEQ L41 - false
   */
  @Test
  public void test2()  throws Throwable  {
      char[] charArray0 = new char[1];
      charArray0[0] = 'X';
      IOUtils iOUtils0 = new IOUtils();
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      boolean boolean0 = false;
      String string0 = IOUtils.toString((Reader) charArrayReader0, false);
      FileDescriptor fileDescriptor0 = FileDescriptor.out;
      String string1 = IOUtils.toString((Reader) charArrayReader0, true);
      FileInputStream fileInputStream0 = new FileInputStream(fileDescriptor0);
      IOUtils iOUtils1 = new IOUtils();
      try {
        IOUtils.toString((Reader) charArrayReader0, false);
      }catch(IOException e) {
        /*
         * Stream closed
         */
        /*
      %%%<ex><className val="IOException"/><stackDepth val="21"/><causeDepth val="0"/><source val="java.io.CharArrayReader.ensureOpen(CharArrayReader.java:92)"/></ex>%%%
         */
      }
  }

  //Test case number: 3  @Test
  public void test3()  throws Throwable  {
      FileDescriptor fileDescriptor0 = FileDescriptor.out;
      FileInputStream fileInputStream0 = new FileInputStream(fileDescriptor0);
      try {
        fileDescriptor0.sync();
      }catch(SyncFailedException e) {
        /*
         * sync failed
         */
        /*
      %%%<ex><className val="SyncFailedException"/><stackDepth val="15"/><causeDepth val="0"/><source val="java.io.FileDescriptor.sync(Native Method)"/></ex>%%%
         */
      }
  }
}
