/*
 * This file was automatically generated by EvoSuite
 */

package org.jbehave.core.io;

import org.junit.Test;
import org.junit.runner.RunWith;
import static org.junit.Assert.*;
import java.net.URL;
import java.util.Comparator;
import java.util.LinkedList;
import java.util.List;
import org.jbehave.core.io.StoryFinder;


public class StoryFinderEvoSuiteTest {


  //Test case number: 1
  /*
   * 19 covered goals:
   * 1 org.jbehave.core.io.StoryFinder.sort(Ljava/util/List;)Ljava/util/List;: root-Branch
   * 2 org.jbehave.core.io.StoryFinder$1.<init>(Lorg/jbehave/core/io/StoryFinder;)V: root-Branch
   * 3 org.jbehave.core.io.StoryFinder.scanJar(Ljava/lang/String;Ljava/util/List;Ljava/util/List;)Ljava/util/List;: root-Branch
   * 4 org.jbehave.core.io.StoryFinder.classNames(Ljava/util/List;)Ljava/util/List;: root-Branch
   * 5 org.jbehave.core.io.StoryFinder.normalise(Ljava/util/List;)Ljava/util/List;: root-Branch
   * 6 org.jbehave.core.io.StoryFinder$3.<init>(Lorg/jbehave/core/io/StoryFinder;)V: root-Branch
   * 7 org.jbehave.core.io.StoryFinder.<init>(Ljava/lang/String;)V: root-Branch
   * 8 org.jbehave.core.io.StoryFinder.findPaths(Ljava/lang/String;Ljava/util/List;Ljava/util/List;Ljava/lang/String;)Ljava/util/List;: root-Branch
   * 9 org.jbehave.core.io.StoryFinder$2.<init>(Lorg/jbehave/core/io/StoryFinder;Ljava/lang/String;)V: root-Branch
   * 10 org.jbehave.core.io.StoryFinder.findClassNames(Ljava/lang/String;Ljava/util/List;Ljava/util/List;)Ljava/util/List;: root-Branch
   * 11 org.jbehave.core.io.StoryFinder.sortingComparator()Ljava/util/Comparator;: root-Branch
   * 12 org.jbehave.core.io.StoryFinder.prefix(Ljava/lang/String;Ljava/util/List;)Ljava/util/List;: I4 Branch 2 IFEQ L144 - true
   * 13 org.jbehave.core.io.StoryFinder.scan(Ljava/lang/String;Ljava/util/List;Ljava/util/List;)Ljava/util/List;: I5 Branch 3 IFLE L194 - true
   * 14 org.jbehave.core.io.StoryFinder.scan(Ljava/lang/String;Ljava/util/List;Ljava/util/List;)Ljava/util/List;: I5 Branch 3 IFLE L194 - false
   * 15 org.jbehave.core.io.StoryFinder.scanDirectory(Ljava/lang/String;Ljava/util/List;Ljava/util/List;)Ljava/util/List;: I13 Branch 4 IFNE L202 - false
   * 16 org.jbehave.core.io.StoryFinder.<init>(Ljava/util/Comparator;)V: root-Branch
   * 17 org.jbehave.core.io.StoryFinder.scanDirectory(Ljava/lang/String;Ljava/util/List;Ljava/util/List;)Ljava/util/List;: I13 Branch 4 IFNE L202 - true
   * 18 org.jbehave.core.io.StoryFinder.scanDirectory(Ljava/lang/String;Ljava/util/List;Ljava/util/List;)Ljava/util/List;: I28 Branch 5 IFNULL L206 - false
   * 19 org.jbehave.core.io.StoryFinder.scanDirectory(Ljava/lang/String;Ljava/util/List;Ljava/util/List;)Ljava/util/List;: I42 Branch 6 IFNULL L209 - false
   */
  @Test
  public void test1()  throws Throwable  {
      String string0 = "/";
      StoryFinder storyFinder0 = new StoryFinder((Comparator<? super String>) null);
      LinkedList<String> linkedList0 = new LinkedList<String>();
      List<String> list0 = storyFinder0.findClassNames("/", (List<String>) linkedList0, (List<String>) linkedList0);
      List<String> list1 = storyFinder0.findPaths("/", (List<String>) linkedList0, list0, "/");
      // Undeclared exception!
      try {
        storyFinder0.findClassNames(".jar", (List<String>) linkedList0, list0);
      }catch(IllegalStateException e) {
        /*
         * java.util.zip.ZipException: error in opening zip file
         */
        /*
      %%%<ex><className val="IllegalStateException"/><stackDepth val="21"/><causeDepth val="1"/><source val="java.util.zip.ZipFile.open(Native Method)"/></ex>%%%
         */
      }
  }

  //Test case number: 2
  /*
   * 12 covered goals:
   * 1 org.jbehave.core.io.StoryFinder.sort(Ljava/util/List;)Ljava/util/List;: root-Branch
   * 2 org.jbehave.core.io.StoryFinder$1.<init>(Lorg/jbehave/core/io/StoryFinder;)V: root-Branch
   * 3 org.jbehave.core.io.StoryFinder.<init>()V: root-Branch
   * 4 org.jbehave.core.io.StoryFinder.normalise(Ljava/util/List;)Ljava/util/List;: root-Branch
   * 5 org.jbehave.core.io.StoryFinder.findPaths(Ljava/net/URL;Ljava/lang/String;Ljava/lang/String;)Ljava/util/List;: root-Branch
   * 6 org.jbehave.core.io.StoryFinder.<init>(Ljava/lang/String;)V: root-Branch
   * 7 org.jbehave.core.io.StoryFinder.findPaths(Ljava/lang/String;Ljava/util/List;Ljava/util/List;Ljava/lang/String;)Ljava/util/List;: root-Branch
   * 8 org.jbehave.core.io.StoryFinder$2.<init>(Lorg/jbehave/core/io/StoryFinder;Ljava/lang/String;)V: root-Branch
   * 9 org.jbehave.core.io.StoryFinder.sortingComparator()Ljava/util/Comparator;: root-Branch
   * 10 org.jbehave.core.io.StoryFinder.prefix(Ljava/lang/String;Ljava/util/List;)Ljava/util/List;: I4 Branch 2 IFEQ L144 - true
   * 11 org.jbehave.core.io.StoryFinder.scan(Ljava/lang/String;Ljava/util/List;Ljava/util/List;)Ljava/util/List;: I5 Branch 3 IFLE L194 - true
   * 12 org.jbehave.core.io.StoryFinder.scanDirectory(Ljava/lang/String;Ljava/util/List;Ljava/util/List;)Ljava/util/List;: I13 Branch 4 IFNE L202 - false
   */
  @Test
  public void test2()  throws Throwable  {
      StoryFinder storyFinder0 = new StoryFinder();
      // Undeclared exception!
      try {
        storyFinder0.findPaths((URL) null, "N.gT", "N.gT");
      }catch(NullPointerException e) {
        /*
         * no message in exception (getMessage() returned null)
         */
        /*
      %%%<ex><className val="NullPointerException"/><stackDepth val="15"/><causeDepth val="0"/><source val="org.jbehave.core.io.CodeLocations.getPathFromURL(CodeLocations.java:77)"/></ex>%%%
         */
      }
  }

  //Test case number: 3
  /*
   * 3 covered goals:
   * 1 org.jbehave.core.io.StoryFinder.<init>(Ljava/lang/String;)V: root-Branch
   * 2 org.jbehave.core.io.StoryFinder.findPaths(Ljava/net/URL;Ljava/util/List;Ljava/util/List;)Ljava/util/List;: root-Branch
   * 3 org.jbehave.core.io.StoryFinder.<init>()V: root-Branch
   */
  @Test
  public void test3()  throws Throwable  {
      StoryFinder storyFinder0 = new StoryFinder();
      // Undeclared exception!
      try {
        storyFinder0.findPaths((URL) null, (List<String>) null, (List<String>) null);
      }catch(NullPointerException e) {
        /*
         * no message in exception (getMessage() returned null)
         */
        /*
      %%%<ex><className val="NullPointerException"/><stackDepth val="15"/><causeDepth val="0"/><source val="org.jbehave.core.io.CodeLocations.getPathFromURL(CodeLocations.java:77)"/></ex>%%%
         */
      }
  }
}
