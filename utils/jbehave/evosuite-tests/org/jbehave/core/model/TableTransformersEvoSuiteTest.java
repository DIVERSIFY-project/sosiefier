/*
 * This file was automatically generated by EvoSuite
 */

package org.jbehave.core.model;

import org.junit.Test;
import org.junit.runner.RunWith;
import static org.junit.Assert.*;
import java.net.URI;
import java.net.URISyntaxException;
import java.util.Collection;
import java.util.Enumeration;
import java.util.Locale;
import java.util.MissingResourceException;
import java.util.Properties;
import java.util.Set;
import org.jbehave.core.model.TableTransformers;


public class TableTransformersEvoSuiteTest {


  //Test case number: 4
  /*
   * 11 covered goals:
   * 1 org.jbehave.core.model.TableTransformers.useTransformer(Ljava/lang/String;Lorg/jbehave/core/model/TableTransformers$TableTransformer;)V: root-Branch
   * 2 org.jbehave.core.model.TableTransformers.<init>()V: root-Branch
   * 3 org.jbehave.core.model.TableTransformers$FromLandscape.<init>()V: root-Branch
   * 4 org.jbehave.core.model.TableTransformers$FromLandscape.transform(Ljava/lang/String;Ljava/util/Properties;)Ljava/lang/String;: I107 Branch 3 IF_ICMPLT L52 - true
   * 5 org.jbehave.core.model.TableTransformers$FromLandscape.transform(Ljava/lang/String;Ljava/util/Properties;)Ljava/lang/String;: I215 Branch 6 IF_ICMPLT L72 - true
   * 6 org.jbehave.core.model.TableTransformers$FromLandscape.transform(Ljava/lang/String;Ljava/util/Properties;)Ljava/lang/String;: I59 Branch 1 IFGT L54 - false
   * 7 org.jbehave.core.model.TableTransformers$FromLandscape.transform(Ljava/lang/String;Ljava/util/Properties;)Ljava/lang/String;: I62 Branch 2 IFNE L54 - false
   * 8 org.jbehave.core.model.TableTransformers$FromLandscape.transform(Ljava/lang/String;Ljava/util/Properties;)Ljava/lang/String;: I107 Branch 3 IF_ICMPLT L52 - false
   * 9 org.jbehave.core.model.TableTransformers$FromLandscape.transform(Ljava/lang/String;Ljava/util/Properties;)Ljava/lang/String;: I156 Branch 4 IFNE L67 - false
   * 10 org.jbehave.core.model.TableTransformers$FromLandscape.transform(Ljava/lang/String;Ljava/util/Properties;)Ljava/lang/String;: I202 Branch 5 IFNE L74 - false
   * 11 org.jbehave.core.model.TableTransformers$FromLandscape.transform(Ljava/lang/String;Ljava/util/Properties;)Ljava/lang/String;: I215 Branch 6 IF_ICMPLT L72 - false
   */
  @Test
  public void test4()  throws Throwable  {
      TableTransformers tableTransformers0 = new TableTransformers();
      TableTransformers.FromLandscape tableTransformers_FromLandscape0 = new TableTransformers.FromLandscape();
      tableTransformers0.useTransformer("oSQ:jCpo,(g", (TableTransformers.TableTransformer) tableTransformers_FromLandscape0);
      TableTransformers.FromLandscape tableTransformers_FromLandscape1 = new TableTransformers.FromLandscape();
      TableTransformers.FromLandscape tableTransformers_FromLandscape2 = new TableTransformers.FromLandscape();
      String string0 = "";
      TableTransformers tableTransformers1 = new TableTransformers();
      Properties properties0 = new Properties();
      Properties properties1 = new Properties();
      String string1 = tableTransformers_FromLandscape1.transform("", properties1);
      String string2 = tableTransformers_FromLandscape2.transform("", properties0);
      String string3 = tableTransformers_FromLandscape2.transform("", properties0);
      String string4 = tableTransformers_FromLandscape2.transform("", properties0);
      Properties properties2 = new Properties();
      TableTransformers.FromLandscape tableTransformers_FromLandscape3 = new TableTransformers.FromLandscape();
      String string5 = tableTransformers_FromLandscape2.transform("", properties2);
      Locale locale0 = new Locale("", "|\n|\n");
      String string6 = locale0.toString();
      URI uRI0 = null;
      try {
        uRI0 = new URI("_|\n|\n", "|\n|\n", "");
      }catch(URISyntaxException e) {
        /*
         * Illegal character in scheme name at index 0: _|
         * |
         * :%7C%0A%7C%0A#
         */
        /*
      %%%<ex><className val="URISyntaxException"/><stackDepth val="19"/><causeDepth val="0"/><source val="java.net.URI$Parser.fail(URI.java:2825)"/></ex>%%%
         */
      }
  }

  //Test case number: 5
  /*
   * 11 covered goals:
   * 1 org.jbehave.core.model.TableTransformers.useTransformer(Ljava/lang/String;Lorg/jbehave/core/model/TableTransformers$TableTransformer;)V: root-Branch
   * 2 org.jbehave.core.model.TableTransformers.<init>()V: root-Branch
   * 3 org.jbehave.core.model.TableTransformers$FromLandscape.<init>()V: root-Branch
   * 4 org.jbehave.core.model.TableTransformers$FromLandscape.transform(Ljava/lang/String;Ljava/util/Properties;)Ljava/lang/String;: I62 Branch 2 IFNE L54 - true
   * 5 org.jbehave.core.model.TableTransformers$FromLandscape.transform(Ljava/lang/String;Ljava/util/Properties;)Ljava/lang/String;: I107 Branch 3 IF_ICMPLT L52 - true
   * 6 org.jbehave.core.model.TableTransformers$FromLandscape.transform(Ljava/lang/String;Ljava/util/Properties;)Ljava/lang/String;: I156 Branch 4 IFNE L67 - true
   * 7 org.jbehave.core.model.TableTransformers.transform(Ljava/lang/String;Ljava/lang/String;Ljava/util/Properties;)Ljava/lang/String;: I11 Branch 7 IFNULL L28 - true
   * 8 org.jbehave.core.model.TableTransformers$FromLandscape.transform(Ljava/lang/String;Ljava/util/Properties;)Ljava/lang/String;: I59 Branch 1 IFGT L54 - false
   * 9 org.jbehave.core.model.TableTransformers$FromLandscape.transform(Ljava/lang/String;Ljava/util/Properties;)Ljava/lang/String;: I107 Branch 3 IF_ICMPLT L52 - false
   * 10 org.jbehave.core.model.TableTransformers$FromLandscape.transform(Ljava/lang/String;Ljava/util/Properties;)Ljava/lang/String;: I156 Branch 4 IFNE L67 - false
   * 11 org.jbehave.core.model.TableTransformers$FromLandscape.transform(Ljava/lang/String;Ljava/util/Properties;)Ljava/lang/String;: I215 Branch 6 IF_ICMPLT L72 - false
   */
  @Test
  public void test5()  throws Throwable  {
      TableTransformers tableTransformers0 = new TableTransformers();
      String string0 = "GfNl>";
      Properties properties0 = new Properties();
      String string1 = tableTransformers0.transform("GfNl>", "msr`N##w", properties0);
      TableTransformers.FromLandscape tableTransformers_FromLandscape0 = new TableTransformers.FromLandscape();
      Properties properties1 = new Properties();
      String string2 = tableTransformers0.transform("iIObQK/ m=-^*", "iIObQK/ m=-^*", properties1);
      tableTransformers0.useTransformer("GfNl>", (TableTransformers.TableTransformer) tableTransformers_FromLandscape0);
      TableTransformers.FromLandscape tableTransformers_FromLandscape1 = new TableTransformers.FromLandscape();
      Properties properties2 = new Properties();
      String string3 = tableTransformers0.transform("|", "|", properties2);
      Properties properties3 = new Properties();
      TableTransformers.FromLandscape tableTransformers_FromLandscape2 = new TableTransformers.FromLandscape();
      String string4 = tableTransformers_FromLandscape1.transform("3ZJ6rJln,s|", properties3);
      String string5 = tableTransformers0.transform("|3ZJ6rJln,s|\n", "3ZJ6rJln,s|", properties3);
      tableTransformers0.useTransformer("iIObQK/ m=-^*", (TableTransformers.TableTransformer) tableTransformers_FromLandscape1);
      tableTransformers0.useTransformer("3ZJ6rJln,s|", (TableTransformers.TableTransformer) null);
      Set<String> set0 = properties1.stringPropertyNames();
      String string6 = "FROM_LANDSCAPE";
      TableTransformers.FromLandscape tableTransformers_FromLandscape3 = new TableTransformers.FromLandscape();
      Locale locale0 = Locale.ROOT;
      Locale locale1 = Locale.getDefault();
      String string7 = locale0.getDisplayName(locale1);
      URI uRI0 = null;
      try {
        uRI0 = new URI("msr`N##w");
      }catch(URISyntaxException e) {
        /*
         * Illegal character in path at index 3: msr`N##w
         */
        /*
      %%%<ex><className val="URISyntaxException"/><stackDepth val="19"/><causeDepth val="0"/><source val="java.net.URI$Parser.fail(URI.java:2825)"/></ex>%%%
         */
      }
  }

  //Test case number: 6
  /*
   * 15 covered goals:
   * 1 org.jbehave.core.model.TableTransformers.useTransformer(Ljava/lang/String;Lorg/jbehave/core/model/TableTransformers$TableTransformer;)V: root-Branch
   * 2 org.jbehave.core.model.TableTransformers.<init>()V: root-Branch
   * 3 org.jbehave.core.model.TableTransformers$FromLandscape.<init>()V: root-Branch
   * 4 org.jbehave.core.model.TableTransformers$FromLandscape.transform(Ljava/lang/String;Ljava/util/Properties;)Ljava/lang/String;: I62 Branch 2 IFNE L54 - true
   * 5 org.jbehave.core.model.TableTransformers$FromLandscape.transform(Ljava/lang/String;Ljava/util/Properties;)Ljava/lang/String;: I107 Branch 3 IF_ICMPLT L52 - true
   * 6 org.jbehave.core.model.TableTransformers$FromLandscape.transform(Ljava/lang/String;Ljava/util/Properties;)Ljava/lang/String;: I156 Branch 4 IFNE L67 - true
   * 7 org.jbehave.core.model.TableTransformers$FromLandscape.transform(Ljava/lang/String;Ljava/util/Properties;)Ljava/lang/String;: I202 Branch 5 IFNE L74 - true
   * 8 org.jbehave.core.model.TableTransformers$FromLandscape.transform(Ljava/lang/String;Ljava/util/Properties;)Ljava/lang/String;: I215 Branch 6 IF_ICMPLT L72 - true
   * 9 org.jbehave.core.model.TableTransformers.transform(Ljava/lang/String;Ljava/lang/String;Ljava/util/Properties;)Ljava/lang/String;: I11 Branch 7 IFNULL L28 - true
   * 10 org.jbehave.core.model.TableTransformers$FromLandscape.transform(Ljava/lang/String;Ljava/util/Properties;)Ljava/lang/String;: I59 Branch 1 IFGT L54 - false
   * 11 org.jbehave.core.model.TableTransformers$FromLandscape.transform(Ljava/lang/String;Ljava/util/Properties;)Ljava/lang/String;: I107 Branch 3 IF_ICMPLT L52 - false
   * 12 org.jbehave.core.model.TableTransformers$FromLandscape.transform(Ljava/lang/String;Ljava/util/Properties;)Ljava/lang/String;: I156 Branch 4 IFNE L67 - false
   * 13 org.jbehave.core.model.TableTransformers$FromLandscape.transform(Ljava/lang/String;Ljava/util/Properties;)Ljava/lang/String;: I202 Branch 5 IFNE L74 - false
   * 14 org.jbehave.core.model.TableTransformers$FromLandscape.transform(Ljava/lang/String;Ljava/util/Properties;)Ljava/lang/String;: I215 Branch 6 IF_ICMPLT L72 - false
   * 15 org.jbehave.core.model.TableTransformers.transform(Ljava/lang/String;Ljava/lang/String;Ljava/util/Properties;)Ljava/lang/String;: I11 Branch 7 IFNULL L28 - false
   */
  @Test
  public void test6()  throws Throwable  {
      TableTransformers tableTransformers0 = new TableTransformers();
      String string0 = null;
      TableTransformers.FromLandscape tableTransformers_FromLandscape0 = new TableTransformers.FromLandscape();
      tableTransformers0.useTransformer((String) null, (TableTransformers.TableTransformer) tableTransformers_FromLandscape0);
      String string1 = "IHhc5dkzc<|hPk";
      Properties properties0 = new Properties();
      String string2 = tableTransformers0.transform("IHhc5dkzc<|hPk", "IHhc5dkzc<|hPk", properties0);
      TableTransformers tableTransformers1 = new TableTransformers();
      TableTransformers.FromLandscape tableTransformers_FromLandscape1 = new TableTransformers.FromLandscape();
      String string3 = "9iwHpLJ5)f";
      Properties properties1 = new Properties();
      String string4 = tableTransformers0.transform((String) null, "IHhc5dkzc<|hPk", properties1);
      Locale locale0 = Locale.FRANCE;
      String string5 = locale0.getISO3Country();
      // Undeclared exception!
      try {
        properties0.put((Object) null, (Object) "FRA");
      }catch(NullPointerException e) {
        /*
         * no message in exception (getMessage() returned null)
         */
        /*
      %%%<ex><className val="NullPointerException"/><stackDepth val="14"/><causeDepth val="0"/><source val="java.util.Hashtable.put(Hashtable.java:416)"/></ex>%%%
         */
      }
  }

  //Test case number: 7
  /*
   * 14 covered goals:
   * 1 org.jbehave.core.model.TableTransformers.useTransformer(Ljava/lang/String;Lorg/jbehave/core/model/TableTransformers$TableTransformer;)V: root-Branch
   * 2 org.jbehave.core.model.TableTransformers.<init>()V: root-Branch
   * 3 org.jbehave.core.model.TableTransformers$FromLandscape.<init>()V: root-Branch
   * 4 org.jbehave.core.model.TableTransformers$FromLandscape.transform(Ljava/lang/String;Ljava/util/Properties;)Ljava/lang/String;: I62 Branch 2 IFNE L54 - true
   * 5 org.jbehave.core.model.TableTransformers$FromLandscape.transform(Ljava/lang/String;Ljava/util/Properties;)Ljava/lang/String;: I107 Branch 3 IF_ICMPLT L52 - true
   * 6 org.jbehave.core.model.TableTransformers$FromLandscape.transform(Ljava/lang/String;Ljava/util/Properties;)Ljava/lang/String;: I156 Branch 4 IFNE L67 - true
   * 7 org.jbehave.core.model.TableTransformers$FromLandscape.transform(Ljava/lang/String;Ljava/util/Properties;)Ljava/lang/String;: I215 Branch 6 IF_ICMPLT L72 - true
   * 8 org.jbehave.core.model.TableTransformers.transform(Ljava/lang/String;Ljava/lang/String;Ljava/util/Properties;)Ljava/lang/String;: I11 Branch 7 IFNULL L28 - true
   * 9 org.jbehave.core.model.TableTransformers$FromLandscape.transform(Ljava/lang/String;Ljava/util/Properties;)Ljava/lang/String;: I59 Branch 1 IFGT L54 - false
   * 10 org.jbehave.core.model.TableTransformers$FromLandscape.transform(Ljava/lang/String;Ljava/util/Properties;)Ljava/lang/String;: I62 Branch 2 IFNE L54 - false
   * 11 org.jbehave.core.model.TableTransformers$FromLandscape.transform(Ljava/lang/String;Ljava/util/Properties;)Ljava/lang/String;: I107 Branch 3 IF_ICMPLT L52 - false
   * 12 org.jbehave.core.model.TableTransformers$FromLandscape.transform(Ljava/lang/String;Ljava/util/Properties;)Ljava/lang/String;: I156 Branch 4 IFNE L67 - false
   * 13 org.jbehave.core.model.TableTransformers$FromLandscape.transform(Ljava/lang/String;Ljava/util/Properties;)Ljava/lang/String;: I202 Branch 5 IFNE L74 - false
   * 14 org.jbehave.core.model.TableTransformers$FromLandscape.transform(Ljava/lang/String;Ljava/util/Properties;)Ljava/lang/String;: I215 Branch 6 IF_ICMPLT L72 - false
   */
  @Test
  public void test7()  throws Throwable  {
      TableTransformers.FromLandscape tableTransformers_FromLandscape0 = new TableTransformers.FromLandscape();
      TableTransformers tableTransformers0 = new TableTransformers();
      Properties properties0 = new Properties();
      String string0 = tableTransformers_FromLandscape0.transform("n7BRy", properties0);
      Properties properties1 = new Properties();
      String string1 = tableTransformers_FromLandscape0.transform("n7BRy", properties1);
      String string2 = tableTransformers_FromLandscape0.transform("n7BRy", properties0);
      Properties properties2 = new Properties();
      String string3 = tableTransformers_FromLandscape0.transform("|n7BRy|\n", properties0);
      String string4 = tableTransformers0.transform("", "|n7BRy|\n", properties0);
      TableTransformers tableTransformers1 = new TableTransformers();
      TableTransformers.FromLandscape tableTransformers_FromLandscape1 = new TableTransformers.FromLandscape();
      tableTransformers1.useTransformer("", (TableTransformers.TableTransformer) tableTransformers_FromLandscape1);
      String string5 = tableTransformers_FromLandscape0.transform("", properties2);
      String string6 = tableTransformers1.transform("|n7BRy|\n", "|n7BRy|\n", properties0);
      TableTransformers tableTransformers2 = new TableTransformers();
      Properties properties3 = new Properties();
      String string7 = tableTransformers2.transform("QTqhSB&OP8AOHH", "QTqhSB&OP8AOHH", properties3);
      Properties properties4 = new Properties();
      String string8 = tableTransformers2.transform("", "", properties4);
      TableTransformers.FromLandscape tableTransformers_FromLandscape2 = new TableTransformers.FromLandscape();
      String string9 = tableTransformers_FromLandscape2.transform("", properties4);
      Enumeration<?> enumeration0 = properties0.propertyNames();
      TableTransformers.FromLandscape tableTransformers_FromLandscape3 = new TableTransformers.FromLandscape();
      tableTransformers2.useTransformer("", (TableTransformers.TableTransformer) tableTransformers_FromLandscape3);
      Locale locale0 = Locale.GERMANY;
      String string10 = locale0.getDisplayVariant();
      Collection<Object> collection0 = properties1.values();
      TableTransformers tableTransformers3 = new TableTransformers();
      // Undeclared exception!
      try {
        properties2.put((Object) "", (Object) null);
      }catch(NullPointerException e) {
        /*
         * no message in exception (getMessage() returned null)
         */
        /*
      %%%<ex><className val="NullPointerException"/><stackDepth val="14"/><causeDepth val="0"/><source val="java.util.Hashtable.put(Hashtable.java:411)"/></ex>%%%
         */
      }
  }
}
