/*
 * This file was automatically generated by EvoSuite
 */

package org.jbehave.core.steps;

import org.junit.Test;
import org.junit.runner.RunWith;
import static org.junit.Assert.*;
import java.lang.reflect.Method;
import java.util.Properties;
import org.jbehave.core.configuration.Keywords;
import org.jbehave.core.configuration.ParanamerConfiguration;
import org.jbehave.core.configuration.PropertyBasedConfiguration;
import org.jbehave.core.failures.PendingStepFound;
import org.jbehave.core.failures.UUIDExceptionWrapper;
import org.jbehave.core.i18n.LocalizedKeywords;
import org.jbehave.core.reporters.ANSIConsoleOutput;
import org.jbehave.core.reporters.ConcurrentStoryReporter;
import org.jbehave.core.reporters.IdeOnlyConsoleOutput;
import org.jbehave.core.reporters.StoryReporter;
import org.jbehave.core.steps.AbstractStepResult;
import org.jbehave.core.steps.StepResult;


public class AbstractStepResultEvoSuiteTest {


  //Test case number: 1
  /*
   * 20 covered goals:
   * 1 org.jbehave.core.steps.AbstractStepResult$Failed.<init>(Ljava/lang/String;Lorg/jbehave/core/failures/UUIDExceptionWrapper;)V: root-Branch
   * 2 org.jbehave.core.steps.AbstractStepResult.getFailure()Lorg/jbehave/core/failures/UUIDExceptionWrapper;: root-Branch
   * 3 org.jbehave.core.steps.AbstractStepResult$Ignorable.<init>(Ljava/lang/String;)V: root-Branch
   * 4 org.jbehave.core.steps.AbstractStepResult.skipped()Lorg/jbehave/core/steps/StepResult;: root-Branch
   * 5 org.jbehave.core.steps.AbstractStepResult.<init>(Ljava/lang/String;)V: root-Branch
   * 6 org.jbehave.core.steps.AbstractStepResult.failed(Ljava/lang/String;Lorg/jbehave/core/failures/UUIDExceptionWrapper;)Lorg/jbehave/core/steps/StepResult;: root-Branch
   * 7 org.jbehave.core.steps.AbstractStepResult$Successful.<init>(Ljava/lang/String;)V: root-Branch
   * 8 org.jbehave.core.steps.AbstractStepResult$NotPerformed.<init>(Ljava/lang/String;)V: root-Branch
   * 9 org.jbehave.core.steps.AbstractStepResult$Skipped.<init>()V: root-Branch
   * 10 org.jbehave.core.steps.AbstractStepResult.<init>(Ljava/lang/String;Lorg/jbehave/core/failures/UUIDExceptionWrapper;)V: root-Branch
   * 11 org.jbehave.core.steps.AbstractStepResult.pending(Ljava/lang/String;)Lorg/jbehave/core/steps/StepResult;: root-Branch
   * 12 org.jbehave.core.steps.AbstractStepResult.notPerformed(Ljava/lang/String;)Lorg/jbehave/core/steps/StepResult;: root-Branch
   * 13 org.jbehave.core.steps.AbstractStepResult.toString()Ljava/lang/String;: root-Branch
   * 14 org.jbehave.core.steps.AbstractStepResult$Pending.<init>(Ljava/lang/String;Lorg/jbehave/core/failures/PendingStepFound;)V: root-Branch
   * 15 org.jbehave.core.steps.AbstractStepResult.withParameterValues(Ljava/lang/String;)Lorg/jbehave/core/steps/StepResult;: root-Branch
   * 16 org.jbehave.core.steps.AbstractStepResult$Ignorable.describeTo(Lorg/jbehave/core/reporters/StoryReporter;)V: root-Branch
   * 17 org.jbehave.core.steps.AbstractStepResult$Pending.<init>(Ljava/lang/String;)V: root-Branch
   * 18 org.jbehave.core.steps.AbstractStepResult.pending(Ljava/lang/String;Lorg/jbehave/core/failures/PendingStepFound;)Lorg/jbehave/core/steps/StepResult;: root-Branch
   * 19 org.jbehave.core.steps.AbstractStepResult.parametrisedStep()Ljava/lang/String;: I4 Branch 1 IFNULL L125 - true
   * 20 org.jbehave.core.steps.AbstractStepResult$Failed.describeTo(Lorg/jbehave/core/reporters/StoryReporter;)V: I6 Branch 5 IFEQ L42 - true
   */
  @Test
  public void test1()  throws Throwable  {
      UUIDExceptionWrapper uUIDExceptionWrapper0 = new UUIDExceptionWrapper("");
      AbstractStepResult.Skipped abstractStepResult_Skipped0 = (AbstractStepResult.Skipped)AbstractStepResult.skipped();
      AbstractStepResult.NotPerformed abstractStepResult_NotPerformed0 = (AbstractStepResult.NotPerformed)AbstractStepResult.notPerformed("1=6-pLA?il6,%}2h:N\"");
      AbstractStepResult.Skipped abstractStepResult_Skipped1 = new AbstractStepResult.Skipped();
      AbstractStepResult.Skipped abstractStepResult_Skipped2 = (AbstractStepResult.Skipped)abstractStepResult_Skipped1.withParameterValues("1=6-pLA?il6,%}2h:N\"");
      AbstractStepResult.Ignorable abstractStepResult_Ignorable0 = new AbstractStepResult.Ignorable("1=6-pLA?il6,%}2h:N\"");
      PendingStepFound pendingStepFound0 = new PendingStepFound("1=6-pLA?il6,%}2h:N\"");
      AbstractStepResult.Pending abstractStepResult_Pending0 = new AbstractStepResult.Pending("1=6-pLA?il6,%}2h:N\"", pendingStepFound0);
      PendingStepFound pendingStepFound1 = (PendingStepFound)abstractStepResult_Pending0.getFailure();
      AbstractStepResult.Failed abstractStepResult_Failed0 = new AbstractStepResult.Failed("1=6-pLA?il6,%}2h:N\"", (UUIDExceptionWrapper) pendingStepFound1);
      Properties properties0 = new Properties();
      ParanamerConfiguration paranamerConfiguration0 = new ParanamerConfiguration();
      LocalizedKeywords localizedKeywords0 = (LocalizedKeywords)paranamerConfiguration0.keywords();
      ANSIConsoleOutput aNSIConsoleOutput0 = new ANSIConsoleOutput(properties0, (Keywords) localizedKeywords0, false);
      ANSIConsoleOutput aNSIConsoleOutput1 = (ANSIConsoleOutput)aNSIConsoleOutput0.doCompressFailureTrace(false);
      abstractStepResult_Ignorable0.describeTo((StoryReporter) aNSIConsoleOutput1);
      String string0 = "whitespace_strTpping";
      // Undeclared exception!
      try {
        abstractStepResult_Failed0.describeTo((StoryReporter) null);
      }catch(NullPointerException e) {
        /*
         * no message in exception (getMessage() returned null)
         */
        /*
      %%%<ex><className val="NullPointerException"/><stackDepth val="14"/><causeDepth val="0"/><source val="org.jbehave.core.steps.AbstractStepResult$Failed.describeTo(AbstractStepResult.java:45)"/></ex>%%%
         */
      }
  }

  //Test case number: 3
  /*
   * 22 covered goals:
   * 1 org.jbehave.core.steps.AbstractStepResult$Failed.<init>(Ljava/lang/String;Lorg/jbehave/core/failures/UUIDExceptionWrapper;)V: root-Branch
   * 2 org.jbehave.core.steps.AbstractStepResult$Successful.describeTo(Lorg/jbehave/core/reporters/StoryReporter;)V: root-Branch
   * 3 org.jbehave.core.steps.AbstractStepResult$Ignorable.<init>(Ljava/lang/String;)V: root-Branch
   * 4 org.jbehave.core.steps.AbstractStepResult.getFailure()Lorg/jbehave/core/failures/UUIDExceptionWrapper;: root-Branch
   * 5 org.jbehave.core.steps.AbstractStepResult.skipped()Lorg/jbehave/core/steps/StepResult;: root-Branch
   * 6 org.jbehave.core.steps.AbstractStepResult.failed(Ljava/lang/reflect/Method;Lorg/jbehave/core/failures/UUIDExceptionWrapper;)Lorg/jbehave/core/steps/StepResult;: root-Branch
   * 7 org.jbehave.core.steps.AbstractStepResult.<init>(Ljava/lang/String;)V: root-Branch
   * 8 org.jbehave.core.steps.AbstractStepResult$Skipped.describeTo(Lorg/jbehave/core/reporters/StoryReporter;)V: root-Branch
   * 9 org.jbehave.core.steps.AbstractStepResult.failed(Ljava/lang/String;Lorg/jbehave/core/failures/UUIDExceptionWrapper;)Lorg/jbehave/core/steps/StepResult;: root-Branch
   * 10 org.jbehave.core.steps.AbstractStepResult$Successful.<init>(Ljava/lang/String;)V: root-Branch
   * 11 org.jbehave.core.steps.AbstractStepResult$Failed.<init>(Ljava/lang/reflect/Method;Lorg/jbehave/core/failures/UUIDExceptionWrapper;)V: root-Branch
   * 12 org.jbehave.core.steps.AbstractStepResult$NotPerformed.<init>(Ljava/lang/String;)V: root-Branch
   * 13 org.jbehave.core.steps.AbstractStepResult$Skipped.<init>()V: root-Branch
   * 14 org.jbehave.core.steps.AbstractStepResult.<init>(Ljava/lang/String;Lorg/jbehave/core/failures/UUIDExceptionWrapper;)V: root-Branch
   * 15 org.jbehave.core.steps.AbstractStepResult.pending(Ljava/lang/String;)Lorg/jbehave/core/steps/StepResult;: root-Branch
   * 16 org.jbehave.core.steps.AbstractStepResult.notPerformed(Ljava/lang/String;)Lorg/jbehave/core/steps/StepResult;: root-Branch
   * 17 org.jbehave.core.steps.AbstractStepResult$Pending.<init>(Ljava/lang/String;Lorg/jbehave/core/failures/PendingStepFound;)V: root-Branch
   * 18 org.jbehave.core.steps.AbstractStepResult.toString()Ljava/lang/String;: root-Branch
   * 19 org.jbehave.core.steps.AbstractStepResult.pending(Ljava/lang/String;Lorg/jbehave/core/failures/PendingStepFound;)Lorg/jbehave/core/steps/StepResult;: root-Branch
   * 20 org.jbehave.core.steps.AbstractStepResult$Pending.<init>(Ljava/lang/String;)V: root-Branch
   * 21 org.jbehave.core.steps.AbstractStepResult.parametrisedStep()Ljava/lang/String;: I4 Branch 1 IFNULL L125 - true
   * 22 org.jbehave.core.steps.AbstractStepResult$Failed.asString(Ljava/lang/reflect/Method;)Ljava/lang/String;: I3 Branch 2 IFNONNULL L26 - false
   */
  @Test
  public void test3()  throws Throwable  {
      AbstractStepResult.Skipped abstractStepResult_Skipped0 = new AbstractStepResult.Skipped();
      abstractStepResult_Skipped0.describeTo((StoryReporter) null);
      AbstractStepResult.Pending abstractStepResult_Pending0 = (AbstractStepResult.Pending)AbstractStepResult.pending("ON_BLUE");
      AbstractStepResult.Successful abstractStepResult_Successful0 = new AbstractStepResult.Successful("");
      UUIDExceptionWrapper uUIDExceptionWrapper0 = abstractStepResult_Successful0.getFailure();
      AbstractStepResult.Failed abstractStepResult_Failed0 = new AbstractStepResult.Failed((Method) null, (UUIDExceptionWrapper) null);
      PendingStepFound pendingStepFound0 = new PendingStepFound("");
      AbstractStepResult.Pending abstractStepResult_Pending1 = (AbstractStepResult.Pending)AbstractStepResult.pending("", pendingStepFound0);
      AbstractStepResult.Pending abstractStepResult_Pending2 = (AbstractStepResult.Pending)AbstractStepResult.pending("");
      AbstractStepResult.Failed abstractStepResult_Failed1 = (AbstractStepResult.Failed)AbstractStepResult.failed((Method) null, (UUIDExceptionWrapper) null);
      AbstractStepResult.NotPerformed abstractStepResult_NotPerformed0 = (AbstractStepResult.NotPerformed)AbstractStepResult.notPerformed("");
      AbstractStepResult.Ignorable abstractStepResult_Ignorable0 = new AbstractStepResult.Ignorable("");
      UUIDExceptionWrapper uUIDExceptionWrapper1 = abstractStepResult_Ignorable0.getFailure();
      UUIDExceptionWrapper uUIDExceptionWrapper2 = abstractStepResult_Ignorable0.getFailure();
      AbstractStepResult.Skipped abstractStepResult_Skipped1 = (AbstractStepResult.Skipped)AbstractStepResult.skipped();
      AbstractStepResult.Failed abstractStepResult_Failed2 = (AbstractStepResult.Failed)AbstractStepResult.failed("", (UUIDExceptionWrapper) null);
      String string0 = abstractStepResult_Skipped0.toString();
      // Undeclared exception!
      try {
        abstractStepResult_Successful0.describeTo((StoryReporter) null);
      }catch(NullPointerException e) {
        /*
         * no message in exception (getMessage() returned null)
         */
        /*
      %%%<ex><className val="NullPointerException"/><stackDepth val="14"/><causeDepth val="0"/><source val="org.jbehave.core.steps.AbstractStepResult$Successful.describeTo(AbstractStepResult.java:83)"/></ex>%%%
         */
      }
  }
}
