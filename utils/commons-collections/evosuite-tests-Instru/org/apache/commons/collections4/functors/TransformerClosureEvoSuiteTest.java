/*
 * This file was automatically generated by EvoSuite
 */

package org.apache.commons.collections4.functors;

import org.junit.Test;
import static org.junit.Assert.*;
import java.lang.reflect.Array;
import org.apache.commons.collections4.Closure;
import org.apache.commons.collections4.Factory;
import org.apache.commons.collections4.Transformer;
import org.apache.commons.collections4.functors.FactoryTransformer;
import org.apache.commons.collections4.functors.InstantiateFactory;
import org.apache.commons.collections4.functors.TransformerClosure;
import org.junit.BeforeClass;

public class TransformerClosureEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.setLoggingForJUnit(); 
  } 


  //Test case number: 0
  /*
   * 2 covered goals:
   * 1 org.apache.commons.collections4.functors.TransformerClosure.getTransformer()Lorg/apache/commons/collections4/Transformer;: root-Branch
   * 2 org.apache.commons.collections4.functors.TransformerClosure.<init>(Lorg/apache/commons/collections4/Transformer;)V: root-Branch
   */

  @Test
  public void test0()  throws Throwable  {
		fr.inria.diversify.sosie.logger.LogWriter.writeTestStart(833,"org.apache.commons.collections4.functors.TransformerClosureEvoSuiteTest.test0");
      Class<String> class0 = String.class;
      Class<String>[] classArray0 = (Class<String>[]) Array.newInstance(Class.class, 1);
      classArray0[0] = class0;
      Class<Integer> class1 = Integer.class;
      InstantiateFactory<Integer> instantiateFactory0 = new InstantiateFactory<Integer>(class1, (Class<?>[]) classArray0, (Object[]) classArray0);
      FactoryTransformer<Object, Integer> factoryTransformer0 = new FactoryTransformer<Object, Integer>((Factory<? extends Integer>) instantiateFactory0);
      TransformerClosure<Object> transformerClosure0 = new TransformerClosure<Object>((Transformer<? super Object, ?>) factoryTransformer0);
      Transformer<? super Object, ?> transformer0 = transformerClosure0.getTransformer();
      assertNotNull(transformer0);
  }

  //Test case number: 1
  /*
   * 1 covered goal:
   * 1 org.apache.commons.collections4.functors.TransformerClosure.execute(Ljava/lang/Object;)V: root-Branch
   */

  @Test
  public void test1()  throws Throwable  {
		fr.inria.diversify.sosie.logger.LogWriter.writeTestStart(834,"org.apache.commons.collections4.functors.TransformerClosureEvoSuiteTest.test1");
      Class<String> class0 = String.class;
      Class<String>[] classArray0 = (Class<String>[]) Array.newInstance(Class.class, 1);
      classArray0[0] = class0;
      Class<Integer> class1 = Integer.class;
      InstantiateFactory<Integer> instantiateFactory0 = new InstantiateFactory<Integer>(class1, (Class<?>[]) classArray0, (Object[]) classArray0);
      FactoryTransformer<Object, Integer> factoryTransformer0 = new FactoryTransformer<Object, Integer>((Factory<? extends Integer>) instantiateFactory0);
      TransformerClosure<Object> transformerClosure0 = new TransformerClosure<Object>((Transformer<? super Object, ?>) factoryTransformer0);
      // Undeclared exception!
      try {
        transformerClosure0.execute((Object) ":+TyR*G~FW]K6jbE");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // java.lang.ClassCastException@5e00aa02
         //
      }
  }

  //Test case number: 2
  /*
   * 2 covered goals:
   * 1 org.apache.commons.collections4.functors.TransformerClosure.transformerClosure(Lorg/apache/commons/collections4/Transformer;)Lorg/apache/commons/collections4/Closure;: I3 Branch 1 IFNONNULL L49 - true
   * 2 org.apache.commons.collections4.functors.TransformerClosure.<init>(Lorg/apache/commons/collections4/Transformer;)V: root-Branch
   */

  @Test
  public void test2()  throws Throwable  {
		fr.inria.diversify.sosie.logger.LogWriter.writeTestStart(835,"org.apache.commons.collections4.functors.TransformerClosureEvoSuiteTest.test2");
      Class<String> class0 = String.class;
      Class<String>[] classArray0 = (Class<String>[]) Array.newInstance(Class.class, 1);
      classArray0[0] = class0;
      Class<Integer> class1 = Integer.class;
      InstantiateFactory<Integer> instantiateFactory0 = new InstantiateFactory<Integer>(class1, (Class<?>[]) classArray0, (Object[]) classArray0);
      FactoryTransformer<Object, Integer> factoryTransformer0 = new FactoryTransformer<Object, Integer>((Factory<? extends Integer>) instantiateFactory0);
      Closure<Integer> closure0 = TransformerClosure.transformerClosure((Transformer<? super Integer, ?>) factoryTransformer0);
      assertNotNull(closure0);
  }

  //Test case number: 3
  /*
   * 1 covered goal:
   * 1 org.apache.commons.collections4.functors.TransformerClosure.transformerClosure(Lorg/apache/commons/collections4/Transformer;)Lorg/apache/commons/collections4/Closure;: I3 Branch 1 IFNONNULL L49 - false
   */

  @Test
  public void test3()  throws Throwable  {
		fr.inria.diversify.sosie.logger.LogWriter.writeTestStart(836,"org.apache.commons.collections4.functors.TransformerClosureEvoSuiteTest.test3");
      Closure<Object> closure0 = TransformerClosure.transformerClosure((Transformer<? super Object, ?>) null);
      assertNotNull(closure0);
  }
}
