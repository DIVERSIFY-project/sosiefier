/*
 * This file was automatically generated by EvoSuite
 */

package org.apache.commons.collections4.functors;

import org.junit.Test;
import static org.junit.Assert.*;
import java.lang.reflect.Array;
import org.apache.commons.collections4.Closure;
import org.apache.commons.collections4.FunctorException;
import org.apache.commons.collections4.Predicate;
import org.apache.commons.collections4.functors.AllPredicate;
import org.apache.commons.collections4.functors.ExceptionClosure;
import org.apache.commons.collections4.functors.ExceptionPredicate;
import org.apache.commons.collections4.functors.FalsePredicate;
import org.apache.commons.collections4.functors.IdentityPredicate;
import org.apache.commons.collections4.functors.InstanceofPredicate;
import org.apache.commons.collections4.functors.NOPClosure;
import org.apache.commons.collections4.functors.OrPredicate;
import org.apache.commons.collections4.functors.WhileClosure;
import org.junit.BeforeClass;

public class WhileClosureEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.setLoggingForJUnit(); 
  } 


  //Test case number: 0
  /*
   * 2 covered goals:
   * 1 org.apache.commons.collections4.functors.WhileClosure.isDoLoop()Z: root-Branch
   * 2 org.apache.commons.collections4.functors.WhileClosure.<init>(Lorg/apache/commons/collections4/Predicate;Lorg/apache/commons/collections4/Closure;Z)V: root-Branch
   */

  @Test
  public void test0()  throws Throwable  {
		fr.inria.diversify.sosie.logger.LogWriter.writeTestStart(844,"org.apache.commons.collections4.functors.WhileClosureEvoSuiteTest.test0");
      Predicate<Object>[] predicateArray0 = (Predicate<Object>[]) Array.newInstance(Predicate.class, 7);
      Class<String> class0 = String.class;
      InstanceofPredicate instanceofPredicate0 = new InstanceofPredicate(class0);
      predicateArray0[0] = (Predicate<Object>) instanceofPredicate0;
      OrPredicate<Object> orPredicate0 = new OrPredicate<Object>((Predicate<? super Object>) predicateArray0[0], (Predicate<? super Object>) instanceofPredicate0);
      orPredicate0.evaluate((Object) "oXR1<\"lr");
      Closure<Object> closure0 = ExceptionClosure.INSTANCE;
      WhileClosure<Object> whileClosure0 = new WhileClosure<Object>((Predicate<? super Object>) null, (Closure<? super Object>) closure0, true);
      WhileClosure<Integer> whileClosure1 = new WhileClosure<Integer>((Predicate<? super Integer>) instanceofPredicate0, (Closure<? super Integer>) whileClosure0, true);
      boolean boolean0 = whileClosure1.isDoLoop();
      assertEquals(true, boolean0);
  }

  //Test case number: 1
  /*
   * 1 covered goal:
   * 1 org.apache.commons.collections4.functors.WhileClosure.getClosure()Lorg/apache/commons/collections4/Closure;: root-Branch
   */

  @Test
  public void test1()  throws Throwable  {
		fr.inria.diversify.sosie.logger.LogWriter.writeTestStart(845,"org.apache.commons.collections4.functors.WhileClosureEvoSuiteTest.test1");
      Object object0 = new Object();
      IdentityPredicate<Object> identityPredicate0 = new IdentityPredicate<Object>(object0);
      WhileClosure<Object> whileClosure0 = new WhileClosure<Object>((Predicate<? super Object>) identityPredicate0, (Closure<? super Object>) null, true);
      whileClosure0.getClosure();
      assertEquals(true, whileClosure0.isDoLoop());
  }

  //Test case number: 2
  /*
   * 1 covered goal:
   * 1 org.apache.commons.collections4.functors.WhileClosure.getPredicate()Lorg/apache/commons/collections4/Predicate;: root-Branch
   */

  @Test
  public void test2()  throws Throwable  {
		fr.inria.diversify.sosie.logger.LogWriter.writeTestStart(846,"org.apache.commons.collections4.functors.WhileClosureEvoSuiteTest.test2");
      Object object0 = new Object();
      IdentityPredicate<Object> identityPredicate0 = new IdentityPredicate<Object>(object0);
      WhileClosure<Object> whileClosure0 = new WhileClosure<Object>((Predicate<? super Object>) identityPredicate0, (Closure<? super Object>) null, true);
      Predicate<? super Object> predicate0 = whileClosure0.getPredicate();
      assertNotNull(predicate0);
      assertEquals(true, whileClosure0.isDoLoop());
  }

  //Test case number: 3
  /*
   * 2 covered goals:
   * 1 org.apache.commons.collections4.functors.WhileClosure.whileClosure(Lorg/apache/commons/collections4/Predicate;Lorg/apache/commons/collections4/Closure;Z)Lorg/apache/commons/collections4/Closure;: I3 Branch 1 IFNONNULL L55 - true
   * 2 org.apache.commons.collections4.functors.WhileClosure.whileClosure(Lorg/apache/commons/collections4/Predicate;Lorg/apache/commons/collections4/Closure;Z)Lorg/apache/commons/collections4/Closure;: I14 Branch 2 IFNONNULL L58 - false
   */

  @Test
  public void test3()  throws Throwable  {
		fr.inria.diversify.sosie.logger.LogWriter.writeTestStart(847,"org.apache.commons.collections4.functors.WhileClosureEvoSuiteTest.test3");
      Predicate<Object> predicate0 = ExceptionPredicate.INSTANCE;
      // Undeclared exception!
      try {
        WhileClosure.whileClosure((Predicate<? super Integer>) predicate0, (Closure<? super Integer>) null, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Closure must not be null
         //
      }
  }

  //Test case number: 4
  /*
   * 1 covered goal:
   * 1 org.apache.commons.collections4.functors.WhileClosure.whileClosure(Lorg/apache/commons/collections4/Predicate;Lorg/apache/commons/collections4/Closure;Z)Lorg/apache/commons/collections4/Closure;: I3 Branch 1 IFNONNULL L55 - false
   */

  @Test
  public void test4()  throws Throwable  {
      // Undeclared exception!
		fr.inria.diversify.sosie.logger.LogWriter.writeTestStart(848,"org.apache.commons.collections4.functors.WhileClosureEvoSuiteTest.test4");
      try {
        WhileClosure.whileClosure((Predicate<? super Integer>) null, (Closure<? super Integer>) null, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Predicate must not be null
         //
      }
  }

  //Test case number: 5
  /*
   * 2 covered goals:
   * 1 org.apache.commons.collections4.functors.WhileClosure.whileClosure(Lorg/apache/commons/collections4/Predicate;Lorg/apache/commons/collections4/Closure;Z)Lorg/apache/commons/collections4/Closure;: I14 Branch 2 IFNONNULL L58 - true
   * 2 org.apache.commons.collections4.functors.WhileClosure.whileClosure(Lorg/apache/commons/collections4/Predicate;Lorg/apache/commons/collections4/Closure;Z)Lorg/apache/commons/collections4/Closure;: I3 Branch 1 IFNONNULL L55 - true
   */

  @Test
  public void test5()  throws Throwable  {
		fr.inria.diversify.sosie.logger.LogWriter.writeTestStart(849,"org.apache.commons.collections4.functors.WhileClosureEvoSuiteTest.test5");
      Predicate<Object>[] predicateArray0 = (Predicate<Object>[]) Array.newInstance(Predicate.class, 7);
      Class<String> class0 = String.class;
      InstanceofPredicate instanceofPredicate0 = new InstanceofPredicate(class0);
      predicateArray0[0] = (Predicate<Object>) instanceofPredicate0;
      OrPredicate<Object> orPredicate0 = new OrPredicate<Object>((Predicate<? super Object>) predicateArray0[0], (Predicate<? super Object>) instanceofPredicate0);
      orPredicate0.evaluate((Object) "oXR1<\"lr");
      AllPredicate<Object> allPredicate0 = new AllPredicate<Object>(predicateArray0);
      predicateArray0[4] = (Predicate<Object>) allPredicate0;
      Closure<Object> closure0 = ExceptionClosure.INSTANCE;
      Closure<Object> closure1 = WhileClosure.whileClosure((Predicate<? super Object>) predicateArray0[4], (Closure<? super Object>) closure0, true);
      assertNotSame(closure1, closure0);
  }

  //Test case number: 6
  /*
   * 2 covered goals:
   * 1 org.apache.commons.collections4.functors.WhileClosure.execute(Ljava/lang/Object;)V: I4 Branch 3 IFEQ L85 - true
   * 2 org.apache.commons.collections4.functors.WhileClosure.execute(Ljava/lang/Object;)V: I17 Branch 4 IFEQ L88 - false
   */

  @Test
  public void test6()  throws Throwable  {
		fr.inria.diversify.sosie.logger.LogWriter.writeTestStart(850,"org.apache.commons.collections4.functors.WhileClosureEvoSuiteTest.test6");
      Closure<Object> closure0 = ExceptionClosure.INSTANCE;
      Class<String> class0 = String.class;
      Predicate<Object> predicate0 = InstanceofPredicate.instanceOfPredicate(class0);
      WhileClosure<Object> whileClosure0 = new WhileClosure<Object>((Predicate<? super Object>) predicate0, (Closure<? super Object>) closure0, false);
      // Undeclared exception!
      try {
        whileClosure0.execute((Object) "3}Y%");
        fail("Expecting exception: FunctorException");
      
      } catch(FunctorException e) {
         //
         // ExceptionClosure invoked
         //
      }
  }

  //Test case number: 7
  /*
   * 3 covered goals:
   * 1 org.apache.commons.collections4.functors.WhileClosure.execute(Ljava/lang/Object;)V: I17 Branch 4 IFEQ L88 - true
   * 2 org.apache.commons.collections4.functors.WhileClosure.<init>(Lorg/apache/commons/collections4/Predicate;Lorg/apache/commons/collections4/Closure;Z)V: root-Branch
   * 3 org.apache.commons.collections4.functors.WhileClosure.execute(Ljava/lang/Object;)V: I4 Branch 3 IFEQ L85 - false
   */

  @Test
  public void test7()  throws Throwable  {
		fr.inria.diversify.sosie.logger.LogWriter.writeTestStart(851,"org.apache.commons.collections4.functors.WhileClosureEvoSuiteTest.test7");
      Predicate<Object>[] predicateArray0 = (Predicate<Object>[]) Array.newInstance(Predicate.class, 7);
      Class<String> class0 = String.class;
      InstanceofPredicate instanceofPredicate0 = new InstanceofPredicate(class0);
      predicateArray0[0] = (Predicate<Object>) instanceofPredicate0;
      OrPredicate<Object> orPredicate0 = new OrPredicate<Object>((Predicate<? super Object>) predicateArray0[0], (Predicate<? super Object>) instanceofPredicate0);
      orPredicate0.evaluate((Object) "oXR1<\"lr");
      predicateArray0[1] = (Predicate<Object>) orPredicate0;
      predicateArray0[2] = (Predicate<Object>) orPredicate0;
      Predicate<Object> predicate0 = FalsePredicate.INSTANCE;
      predicateArray0[3] = predicate0;
      AllPredicate<Object> allPredicate0 = new AllPredicate<Object>(predicateArray0);
      predicateArray0[4] = (Predicate<Object>) allPredicate0;
      Closure<Object> closure0 = NOPClosure.INSTANCE;
      WhileClosure<Object> whileClosure0 = new WhileClosure<Object>((Predicate<? super Object>) predicateArray0[4], (Closure<? super Object>) closure0, true);
      whileClosure0.execute((Object) "oXR1<\"lr");
      assertEquals(true, whileClosure0.isDoLoop());
  }
}
