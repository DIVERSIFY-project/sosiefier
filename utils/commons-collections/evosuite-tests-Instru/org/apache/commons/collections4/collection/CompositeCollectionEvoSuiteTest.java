/*
 * This file was automatically generated by EvoSuite
 */

package org.apache.commons.collections4.collection;

import org.junit.Test;
import static org.junit.Assert.*;
import java.lang.reflect.Array;
import java.util.Collection;
import java.util.LinkedList;
import java.util.List;
import org.apache.commons.collections4.collection.CompositeCollection;
import org.junit.BeforeClass;

public class CompositeCollectionEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.setLoggingForJUnit(); 
  } 


  //Test case number: 0
  /*
   * 3 covered goals:
   * 1 org.apache.commons.collections4.collection.CompositeCollection.getCollections()Ljava/util/List;: root-Branch
   * 2 org.apache.commons.collections4.collection.CompositeCollection.<init>(Ljava/util/Collection;Ljava/util/Collection;)V: root-Branch
   * 3 org.apache.commons.collections4.collection.CompositeCollection.addComposited(Ljava/util/Collection;Ljava/util/Collection;)V: root-Branch
   */

  @Test
  public void test0()  throws Throwable  {
		fr.inria.diversify.sosie.logger.LogWriter.writeTestStart(945,"org.apache.commons.collections4.collection.CompositeCollectionEvoSuiteTest.test0");
      CompositeCollection<Object> compositeCollection0 = new CompositeCollection<Object>((Collection<Object>) null, (Collection<Object>) null);
      List<Collection<Object>> list0 = compositeCollection0.getCollections();
      assertEquals(2, list0.size());
      assertNotNull(list0);
  }

  //Test case number: 1
  /*
   * 2 covered goals:
   * 1 org.apache.commons.collections4.collection.CompositeCollection.setMutator(Lorg/apache/commons/collections4/collection/CompositeCollection$CollectionMutator;)V: root-Branch
   * 2 org.apache.commons.collections4.collection.CompositeCollection.<init>()V: root-Branch
   */

  @Test
  public void test1()  throws Throwable  {
		fr.inria.diversify.sosie.logger.LogWriter.writeTestStart(946,"org.apache.commons.collections4.collection.CompositeCollectionEvoSuiteTest.test1");
      CompositeCollection<Integer> compositeCollection0 = new CompositeCollection<Integer>();
      compositeCollection0.setMutator((CompositeCollection.CollectionMutator<Integer>) null);
      assertEquals(true, compositeCollection0.isEmpty());
  }

  //Test case number: 2
  /*
   * 1 covered goal:
   * 1 org.apache.commons.collections4.collection.CompositeCollection.removeComposited(Ljava/util/Collection;)V: root-Branch
   */

  @Test
  public void test2()  throws Throwable  {
		fr.inria.diversify.sosie.logger.LogWriter.writeTestStart(957,"org.apache.commons.collections4.collection.CompositeCollectionEvoSuiteTest.test2");
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      CompositeCollection<Integer> compositeCollection0 = new CompositeCollection<Integer>((Collection<Integer>) linkedList0, (Collection<Integer>) linkedList0);
      compositeCollection0.removeComposited((Collection<Integer>) linkedList0);
      assertEquals(0, linkedList0.size());
  }

  //Test case number: 3
  /*
   * 3 covered goals:
   * 1 org.apache.commons.collections4.collection.CompositeCollection.isEmpty()Z: I9 Branch 2 IFEQ L116 - true
   * 2 org.apache.commons.collections4.collection.CompositeCollection.isEmpty()Z: I9 Branch 2 IFEQ L116 - false
   * 3 org.apache.commons.collections4.collection.CompositeCollection.isEmpty()Z: I18 Branch 3 IFGT L117 - true
   */

  @Test
  public void test3()  throws Throwable  {
		fr.inria.diversify.sosie.logger.LogWriter.writeTestStart(958,"org.apache.commons.collections4.collection.CompositeCollectionEvoSuiteTest.test3");
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      CompositeCollection<Integer> compositeCollection0 = new CompositeCollection<Integer>((Collection<Integer>) linkedList0, (Collection<Integer>) linkedList0);
      boolean boolean0 = compositeCollection0.isEmpty();
      assertEquals(true, boolean0);
  }

  //Test case number: 4
  /*
   * 2 covered goals:
   * 1 org.apache.commons.collections4.collection.CompositeCollection.isEmpty()Z: I18 Branch 3 IFGT L117 - false
   * 2 org.apache.commons.collections4.collection.CompositeCollection.isEmpty()Z: I9 Branch 2 IFEQ L116 - false
   */

  @Test
  public void test4()  throws Throwable  {
		fr.inria.diversify.sosie.logger.LogWriter.writeTestStart(959,"org.apache.commons.collections4.collection.CompositeCollectionEvoSuiteTest.test4");
      LinkedList<String> linkedList0 = new LinkedList<String>();
      linkedList0.add("9&p}u A");
      CompositeCollection<String> compositeCollection0 = new CompositeCollection<String>((Collection<String>) linkedList0, (Collection<String>) linkedList0);
      boolean boolean0 = compositeCollection0.isEmpty();
      assertEquals(2, compositeCollection0.size());
      assertEquals(false, boolean0);
  }

  //Test case number: 5
  /*
   * 5 covered goals:
   * 1 org.apache.commons.collections4.collection.CompositeCollection.contains(Ljava/lang/Object;)Z: I9 Branch 4 IFEQ L133 - false
   * 2 org.apache.commons.collections4.collection.CompositeCollection.contains(Ljava/lang/Object;)Z: I19 Branch 5 IFLE L134 - true
   * 3 org.apache.commons.collections4.collection.CompositeCollection.contains(Ljava/lang/Object;)Z: I9 Branch 4 IFEQ L133 - true
   * 4 org.apache.commons.collections4.collection.CompositeCollection.iterator()Ljava/util/Iterator;: I5 Branch 6 IFLE L152 - false
   * 5 org.apache.commons.collections4.collection.CompositeCollection.size()I: I13 Branch 1 IFEQ L102 - true
   */

  @Test
  public void test5()  throws Throwable  {
		fr.inria.diversify.sosie.logger.LogWriter.writeTestStart(960,"org.apache.commons.collections4.collection.CompositeCollectionEvoSuiteTest.test5");
      CompositeCollection<Integer> compositeCollection0 = new CompositeCollection<Integer>();
      CompositeCollection<Integer> compositeCollection1 = new CompositeCollection<Integer>((Collection<Integer>) compositeCollection0, (Collection<Integer>) compositeCollection0);
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      boolean boolean0 = compositeCollection1.contains((Object) linkedList0);
      assertEquals(0, compositeCollection0.size());
      assertEquals(false, boolean0);
  }

  //Test case number: 6
  /*
   * 9 covered goals:
   * 1 org.apache.commons.collections4.collection.CompositeCollection.contains(Ljava/lang/Object;)Z: I19 Branch 5 IFLE L134 - false
   * 2 org.apache.commons.collections4.collection.CompositeCollection.containsAll(Ljava/util/Collection;)Z: I8 Branch 15 IFEQ L255 - true
   * 3 org.apache.commons.collections4.collection.CompositeCollection.containsAll(Ljava/util/Collection;)Z: I8 Branch 15 IFEQ L255 - false
   * 4 org.apache.commons.collections4.collection.CompositeCollection.containsAll(Ljava/util/Collection;)Z: I17 Branch 16 IFNE L256 - true
   * 5 org.apache.commons.collections4.collection.CompositeCollection.contains(Ljava/lang/Object;)Z: I9 Branch 4 IFEQ L133 - false
   * 6 org.apache.commons.collections4.collection.CompositeCollection.addComposited([Ljava/util/Collection;)V: root-Branch
   * 7 org.apache.commons.collections4.collection.CompositeCollection.iterator()Ljava/util/Iterator;: I5 Branch 6 IFLE L152 - true
   * 8 org.apache.commons.collections4.collection.CompositeCollection.iterator()Ljava/util/Iterator;: I25 Branch 7 IFEQ L156 - true
   * 9 org.apache.commons.collections4.collection.CompositeCollection.iterator()Ljava/util/Iterator;: I25 Branch 7 IFEQ L156 - false
   */

  @Test
  public void test6()  throws Throwable  {
		fr.inria.diversify.sosie.logger.LogWriter.writeTestStart(961,"org.apache.commons.collections4.collection.CompositeCollectionEvoSuiteTest.test6");
      LinkedList<LinkedList<Integer>> linkedList0 = new LinkedList<LinkedList<Integer>>();
      CompositeCollection<LinkedList<Integer>> compositeCollection0 = new CompositeCollection<LinkedList<Integer>>();
      CompositeCollection<LinkedList<Integer>> compositeCollection1 = new CompositeCollection<LinkedList<Integer>>();
      Collection<LinkedList<Integer>>[] collectionArray0 = (Collection<LinkedList<Integer>>[]) Array.newInstance(Collection.class, 3);
      collectionArray0[0] = (Collection<LinkedList<Integer>>) linkedList0;
      collectionArray0[1] = (Collection<LinkedList<Integer>>) linkedList0;
      LinkedList<Integer> linkedList1 = new LinkedList<Integer>();
      linkedList0.addFirst(linkedList1);
      collectionArray0[2] = (Collection<LinkedList<Integer>>) compositeCollection1;
      compositeCollection0.addComposited(collectionArray0);
      boolean boolean0 = compositeCollection0.containsAll((Collection<?>) compositeCollection0);
      assertEquals(2, compositeCollection0.size());
      assertEquals(true, boolean0);
  }

  //Test case number: 7
  /*
   * 9 covered goals:
   * 1 org.apache.commons.collections4.collection.CompositeCollection.toArray()[Ljava/lang/Object;: I18 Branch 8 IFEQ L170 - false
   * 2 org.apache.commons.collections4.collection.CompositeCollection.toCollection()Ljava/util/Collection;: root-Branch
   * 3 org.apache.commons.collections4.collection.CompositeCollection.<init>([Ljava/util/Collection;)V: root-Branch
   * 4 org.apache.commons.collections4.collection.CompositeCollection.addComposited([Ljava/util/Collection;)V: root-Branch
   * 5 org.apache.commons.collections4.collection.CompositeCollection.iterator()Ljava/util/Iterator;: I5 Branch 6 IFLE L152 - true
   * 6 org.apache.commons.collections4.collection.CompositeCollection.iterator()Ljava/util/Iterator;: I25 Branch 7 IFEQ L156 - true
   * 7 org.apache.commons.collections4.collection.CompositeCollection.iterator()Ljava/util/Iterator;: I25 Branch 7 IFEQ L156 - false
   * 8 org.apache.commons.collections4.collection.CompositeCollection.size()I: I13 Branch 1 IFEQ L102 - false
   * 9 org.apache.commons.collections4.collection.CompositeCollection.toArray()[Ljava/lang/Object;: I18 Branch 8 IFEQ L170 - true
   */

  @Test
  public void test7()  throws Throwable  {
		fr.inria.diversify.sosie.logger.LogWriter.writeTestStart(962,"org.apache.commons.collections4.collection.CompositeCollectionEvoSuiteTest.test7");
      LinkedList<LinkedList<Integer>> linkedList0 = new LinkedList<LinkedList<Integer>>();
      CompositeCollection<LinkedList<Integer>> compositeCollection0 = new CompositeCollection<LinkedList<Integer>>();
      Collection<LinkedList<Integer>>[] collectionArray0 = (Collection<LinkedList<Integer>>[]) Array.newInstance(Collection.class, 3);
      collectionArray0[0] = (Collection<LinkedList<Integer>>) linkedList0;
      collectionArray0[1] = (Collection<LinkedList<Integer>>) linkedList0;
      LinkedList<Integer> linkedList1 = new LinkedList<Integer>();
      linkedList0.addFirst(linkedList1);
      collectionArray0[2] = (Collection<LinkedList<Integer>>) compositeCollection0;
      CompositeCollection<LinkedList<Integer>> compositeCollection1 = new CompositeCollection<LinkedList<Integer>>(collectionArray0);
      Collection<LinkedList<Integer>> collection0 = compositeCollection1.toCollection();
      assertNotNull(collection0);
      assertEquals(2, collection0.size());
  }

  //Test case number: 8
  /*
   * 3 covered goals:
   * 1 org.apache.commons.collections4.collection.CompositeCollection.toArray([Ljava/lang/Object;)[Ljava/lang/Object;: I14 Branch 9 IF_ICMPLT L188 - true
   * 2 org.apache.commons.collections4.collection.CompositeCollection.toArray([Ljava/lang/Object;)[Ljava/lang/Object;: I43 Branch 10 IFEQ L195 - false
   * 3 org.apache.commons.collections4.collection.CompositeCollection.toArray([Ljava/lang/Object;)[Ljava/lang/Object;: I56 Branch 11 IFEQ L196 - false
   */

  @Test
  public void test8()  throws Throwable  {
		fr.inria.diversify.sosie.logger.LogWriter.writeTestStart(963,"org.apache.commons.collections4.collection.CompositeCollectionEvoSuiteTest.test8");
      LinkedList<String> linkedList0 = new LinkedList<String>();
      linkedList0.add("");
      LinkedList<Object> linkedList1 = new LinkedList<Object>((Collection<?>) linkedList0);
      CompositeCollection<Object> compositeCollection0 = new CompositeCollection<Object>((Collection<Object>) linkedList1, (Collection<Object>) linkedList1);
      LinkedList<String>[] linkedListArray0 = (LinkedList<String>[]) Array.newInstance(LinkedList.class, 1);
      // Undeclared exception!
      try {
        compositeCollection0.toArray(linkedListArray0);
        fail("Expecting exception: ArrayStoreException");
      
      } catch(ArrayStoreException e) {
         //
         // java.lang.String
         //
      }
  }

  //Test case number: 9
  /*
   * 8 covered goals:
   * 1 org.apache.commons.collections4.collection.CompositeCollection.toArray([Ljava/lang/Object;)[Ljava/lang/Object;: I14 Branch 9 IF_ICMPLT L188 - false
   * 2 org.apache.commons.collections4.collection.CompositeCollection.toArray([Ljava/lang/Object;)[Ljava/lang/Object;: I43 Branch 10 IFEQ L195 - true
   * 3 org.apache.commons.collections4.collection.CompositeCollection.toArray([Ljava/lang/Object;)[Ljava/lang/Object;: I56 Branch 11 IFEQ L196 - true
   * 4 org.apache.commons.collections4.collection.CompositeCollection.toArray([Ljava/lang/Object;)[Ljava/lang/Object;: I78 Branch 12 IF_ICMPLE L200 - false
   * 5 org.apache.commons.collections4.collection.CompositeCollection.size()I: I13 Branch 1 IFEQ L102 - false
   * 6 org.apache.commons.collections4.collection.CompositeCollection.toArray([Ljava/lang/Object;)[Ljava/lang/Object;: I43 Branch 10 IFEQ L195 - false
   * 7 org.apache.commons.collections4.collection.CompositeCollection.addComposited(Ljava/util/Collection;)V: root-Branch
   * 8 org.apache.commons.collections4.collection.CompositeCollection.<init>(Ljava/util/Collection;)V: root-Branch
   */

  @Test
  public void test9()  throws Throwable  {
		fr.inria.diversify.sosie.logger.LogWriter.writeTestStart(964,"org.apache.commons.collections4.collection.CompositeCollectionEvoSuiteTest.test9");
      Collection<String>[] collectionArray0 = (Collection<String>[]) Array.newInstance(Collection.class, 8);
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      CompositeCollection<Object> compositeCollection0 = new CompositeCollection<Object>((Collection<Object>) linkedList0);
      Object[] objectArray0 = compositeCollection0.toArray((Object[]) collectionArray0);
      assertEquals(0, compositeCollection0.size());
      assertNotNull(objectArray0);
  }

  //Test case number: 10
  /*
   * 5 covered goals:
   * 1 org.apache.commons.collections4.collection.CompositeCollection.toArray([Ljava/lang/Object;)[Ljava/lang/Object;: I78 Branch 12 IF_ICMPLE L200 - true
   * 2 org.apache.commons.collections4.collection.CompositeCollection.iterator()Ljava/util/Iterator;: I5 Branch 6 IFLE L152 - false
   * 3 org.apache.commons.collections4.collection.CompositeCollection.toArray([Ljava/lang/Object;)[Ljava/lang/Object;: I14 Branch 9 IF_ICMPLT L188 - false
   * 4 org.apache.commons.collections4.collection.CompositeCollection.toArray([Ljava/lang/Object;)[Ljava/lang/Object;: I43 Branch 10 IFEQ L195 - true
   * 5 org.apache.commons.collections4.collection.CompositeCollection.toArray()[Ljava/lang/Object;: I18 Branch 8 IFEQ L170 - true
   */

  @Test
  public void test10()  throws Throwable  {
		fr.inria.diversify.sosie.logger.LogWriter.writeTestStart(947,"org.apache.commons.collections4.collection.CompositeCollectionEvoSuiteTest.test10");
      CompositeCollection<String> compositeCollection0 = new CompositeCollection<String>();
      Object[] objectArray0 = compositeCollection0.toArray();
      assertNotNull(objectArray0);
      
      CompositeCollection<Integer> compositeCollection1 = new CompositeCollection<Integer>();
      Object[] objectArray1 = compositeCollection1.toArray(objectArray0);
      assertEquals(0, compositeCollection0.size());
      assertSame(objectArray0, objectArray1);
      assertNotNull(objectArray1);
  }

  //Test case number: 11
  /*
   * 2 covered goals:
   * 1 org.apache.commons.collections4.collection.CompositeCollection.add(Ljava/lang/Object;)Z: I4 Branch 13 IFNONNULL L219 - false
   * 2 org.apache.commons.collections4.collection.CompositeCollection.size()I: I13 Branch 1 IFEQ L102 - true
   */

  @Test
  public void test11()  throws Throwable  {
		fr.inria.diversify.sosie.logger.LogWriter.writeTestStart(948,"org.apache.commons.collections4.collection.CompositeCollectionEvoSuiteTest.test11");
      CompositeCollection<Integer> compositeCollection0 = new CompositeCollection<Integer>();
      int int0 = compositeCollection0.size();
      assertEquals(0, int0);
      
      // Undeclared exception!
      try {
        compositeCollection0.add((Integer) 0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // add() is not supported on CompositeCollection without a CollectionMutator strategy
         //
      }
  }

  //Test case number: 12
  /*
   * 1 covered goal:
   * 1 org.apache.commons.collections4.collection.CompositeCollection.remove(Ljava/lang/Object;)Z: I4 Branch 14 IFNONNULL L238 - false
   */

  @Test
  public void test12()  throws Throwable  {
		fr.inria.diversify.sosie.logger.LogWriter.writeTestStart(949,"org.apache.commons.collections4.collection.CompositeCollectionEvoSuiteTest.test12");
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      CompositeCollection<Integer> compositeCollection0 = new CompositeCollection<Integer>((Collection<Integer>) linkedList0);
      // Undeclared exception!
      try {
        compositeCollection0.remove((Object) linkedList0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // remove() is not supported on CompositeCollection without a CollectionMutator strategy
         //
      }
  }

  //Test case number: 13
  /*
   * 3 covered goals:
   * 1 org.apache.commons.collections4.collection.CompositeCollection.containsAll(Ljava/util/Collection;)Z: I17 Branch 16 IFNE L256 - false
   * 2 org.apache.commons.collections4.collection.CompositeCollection.contains(Ljava/lang/Object;)Z: I9 Branch 4 IFEQ L133 - true
   * 3 org.apache.commons.collections4.collection.CompositeCollection.containsAll(Ljava/util/Collection;)Z: I8 Branch 15 IFEQ L255 - false
   */

  @Test
  public void test13()  throws Throwable  {
		fr.inria.diversify.sosie.logger.LogWriter.writeTestStart(950,"org.apache.commons.collections4.collection.CompositeCollectionEvoSuiteTest.test13");
      LinkedList<LinkedList<Integer>> linkedList0 = new LinkedList<LinkedList<Integer>>();
      LinkedList<Integer> linkedList1 = new LinkedList<Integer>();
      linkedList0.addFirst(linkedList1);
      CompositeCollection<Integer> compositeCollection0 = new CompositeCollection<Integer>();
      boolean boolean0 = compositeCollection0.containsAll((Collection<?>) linkedList0);
      assertEquals(false, boolean0);
  }

  //Test case number: 14
  /*
   * 1 covered goal:
   * 1 org.apache.commons.collections4.collection.CompositeCollection.addAll(Ljava/util/Collection;)Z: I4 Branch 17 IFNONNULL L276 - false
   */

  @Test
  public void test14()  throws Throwable  {
		fr.inria.diversify.sosie.logger.LogWriter.writeTestStart(951,"org.apache.commons.collections4.collection.CompositeCollectionEvoSuiteTest.test14");
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      CompositeCollection<Integer> compositeCollection0 = new CompositeCollection<Integer>((Collection<Integer>) linkedList0, (Collection<Integer>) linkedList0);
      // Undeclared exception!
      try {
        compositeCollection0.addAll((Collection<? extends Integer>) compositeCollection0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // addAll() is not supported on CompositeCollection without a CollectionMutator strategy
         //
      }
  }

  //Test case number: 15
  /*
   * 3 covered goals:
   * 1 org.apache.commons.collections4.collection.CompositeCollection.removeAll(Ljava/util/Collection;)Z: I4 Branch 18 IFNE L293 - true
   * 2 org.apache.commons.collections4.collection.CompositeCollection.removeAll(Ljava/util/Collection;)Z: I22 Branch 19 IFEQ L297 - true
   * 3 org.apache.commons.collections4.collection.CompositeCollection.removeAll(Ljava/util/Collection;)Z: I22 Branch 19 IFEQ L297 - false
   */

  @Test
  public void test15()  throws Throwable  {
		fr.inria.diversify.sosie.logger.LogWriter.writeTestStart(952,"org.apache.commons.collections4.collection.CompositeCollectionEvoSuiteTest.test15");
      LinkedList<LinkedList<String>> linkedList0 = new LinkedList<LinkedList<String>>();
      LinkedList<String> linkedList1 = new LinkedList<String>();
      linkedList1.add("}");
      CompositeCollection<LinkedList<String>> compositeCollection0 = new CompositeCollection<LinkedList<String>>((Collection<LinkedList<String>>) linkedList0, (Collection<LinkedList<String>>) linkedList0);
      boolean boolean0 = compositeCollection0.removeAll((Collection<?>) linkedList1);
      assertEquals(false, linkedList1.isEmpty());
      assertEquals(false, boolean0);
  }

  //Test case number: 16
  /*
   * 1 covered goal:
   * 1 org.apache.commons.collections4.collection.CompositeCollection.removeAll(Ljava/util/Collection;)Z: I4 Branch 18 IFNE L293 - false
   */

  @Test
  public void test16()  throws Throwable  {
		fr.inria.diversify.sosie.logger.LogWriter.writeTestStart(953,"org.apache.commons.collections4.collection.CompositeCollectionEvoSuiteTest.test16");
      CompositeCollection<Integer> compositeCollection0 = new CompositeCollection<Integer>();
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      boolean boolean0 = compositeCollection0.removeAll((Collection<?>) linkedList0);
      assertEquals(false, boolean0);
  }

  //Test case number: 17
  /*
   * 4 covered goals:
   * 1 org.apache.commons.collections4.collection.CompositeCollection.retainAll(Ljava/util/Collection;)Z: I13 Branch 20 IFEQ L315 - true
   * 2 org.apache.commons.collections4.collection.CompositeCollection.retainAll(Ljava/util/Collection;)Z: I13 Branch 20 IFEQ L315 - false
   * 3 org.apache.commons.collections4.collection.CompositeCollection.addComposited(Ljava/util/Collection;)V: root-Branch
   * 4 org.apache.commons.collections4.collection.CompositeCollection.<init>(Ljava/util/Collection;)V: root-Branch
   */

  @Test
  public void test17()  throws Throwable  {
		fr.inria.diversify.sosie.logger.LogWriter.writeTestStart(954,"org.apache.commons.collections4.collection.CompositeCollectionEvoSuiteTest.test17");
      Collection<Integer>[] collectionArray0 = (Collection<Integer>[]) Array.newInstance(Collection.class, 5);
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      CompositeCollection<Integer> compositeCollection0 = new CompositeCollection<Integer>((Collection<Integer>) linkedList0);
      boolean boolean0 = compositeCollection0.retainAll((Collection<?>) null);
      assertEquals(false, boolean0);
  }

  //Test case number: 18
  /*
   * 2 covered goals:
   * 1 org.apache.commons.collections4.collection.CompositeCollection.clear()V: I9 Branch 21 IFEQ L329 - true
   * 2 org.apache.commons.collections4.collection.CompositeCollection.<init>()V: root-Branch
   */

  @Test
  public void test18()  throws Throwable  {
		fr.inria.diversify.sosie.logger.LogWriter.writeTestStart(955,"org.apache.commons.collections4.collection.CompositeCollectionEvoSuiteTest.test18");
      CompositeCollection<LinkedList<String>> compositeCollection0 = new CompositeCollection<LinkedList<String>>();
      compositeCollection0.clear();
      assertEquals(true, compositeCollection0.isEmpty());
  }

  //Test case number: 19
  /*
   * 4 covered goals:
   * 1 org.apache.commons.collections4.collection.CompositeCollection.clear()V: I9 Branch 21 IFEQ L329 - false
   * 2 org.apache.commons.collections4.collection.CompositeCollection.<init>(Ljava/util/Collection;Ljava/util/Collection;)V: root-Branch
   * 3 org.apache.commons.collections4.collection.CompositeCollection.addComposited(Ljava/util/Collection;Ljava/util/Collection;)V: root-Branch
   * 4 org.apache.commons.collections4.collection.CompositeCollection.clear()V: I9 Branch 21 IFEQ L329 - true
   */

  @Test
  public void test19()  throws Throwable  {
		fr.inria.diversify.sosie.logger.LogWriter.writeTestStart(956,"org.apache.commons.collections4.collection.CompositeCollectionEvoSuiteTest.test19");
      LinkedList<LinkedList<String>> linkedList0 = new LinkedList<LinkedList<String>>();
      CompositeCollection<LinkedList<String>> compositeCollection0 = new CompositeCollection<LinkedList<String>>((Collection<LinkedList<String>>) linkedList0, (Collection<LinkedList<String>>) linkedList0);
      compositeCollection0.clear();
      assertEquals(true, compositeCollection0.isEmpty());
  }
}
