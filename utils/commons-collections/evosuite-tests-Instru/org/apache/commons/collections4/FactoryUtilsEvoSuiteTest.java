/*
 * This file was automatically generated by EvoSuite
 */

package org.apache.commons.collections4;

import org.junit.Test;
import static org.junit.Assert.*;
import java.lang.reflect.Array;
import org.apache.commons.collections4.Factory;
import org.apache.commons.collections4.FactoryUtils;
import org.junit.BeforeClass;

public class FactoryUtilsEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.setLoggingForJUnit(); 
  } 


  //Test case number: 0
  /*
   * 1 covered goal:
   * 1 org.apache.commons.collections4.FactoryUtils.instantiateFactory(Ljava/lang/Class;)Lorg/apache/commons/collections4/Factory;: root-Branch
   */

  @Test
  public void test0()  throws Throwable  {
		fr.inria.diversify.sosie.logger.LogWriter.writeTestStart(1319,"org.apache.commons.collections4.FactoryUtilsEvoSuiteTest.test0");
      Class<Integer> class0 = Integer.class;
      // Undeclared exception!
      try {
        FactoryUtils.instantiateFactory(class0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // InstantiateFactory: The constructor must exist and be public 
         //
      }
  }

  //Test case number: 1
  /*
   * 1 covered goal:
   * 1 org.apache.commons.collections4.FactoryUtils.exceptionFactory()Lorg/apache/commons/collections4/Factory;: root-Branch
   */

  @Test
  public void test1()  throws Throwable  {
		fr.inria.diversify.sosie.logger.LogWriter.writeTestStart(1320,"org.apache.commons.collections4.FactoryUtilsEvoSuiteTest.test1");
      Factory<Object> factory0 = FactoryUtils.exceptionFactory();
      assertNotNull(factory0);
  }

  //Test case number: 2
  /*
   * 1 covered goal:
   * 1 org.apache.commons.collections4.FactoryUtils.constantFactory(Ljava/lang/Object;)Lorg/apache/commons/collections4/Factory;: root-Branch
   */

  @Test
  public void test2()  throws Throwable  {
		fr.inria.diversify.sosie.logger.LogWriter.writeTestStart(1321,"org.apache.commons.collections4.FactoryUtilsEvoSuiteTest.test2");
      Factory<Integer> factory0 = FactoryUtils.constantFactory((Integer) null);
      assertNotNull(factory0);
  }

  //Test case number: 3
  /*
   * 1 covered goal:
   * 1 org.apache.commons.collections4.FactoryUtils.prototypeFactory(Ljava/lang/Object;)Lorg/apache/commons/collections4/Factory;: root-Branch
   */

  @Test
  public void test3()  throws Throwable  {
		fr.inria.diversify.sosie.logger.LogWriter.writeTestStart(1322,"org.apache.commons.collections4.FactoryUtilsEvoSuiteTest.test3");
      Object object0 = new Object();
      // Undeclared exception!
      try {
        FactoryUtils.prototypeFactory(object0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The prototype must be cloneable via a public clone method
         //
      }
  }

  //Test case number: 4
  /*
   * 1 covered goal:
   * 1 org.apache.commons.collections4.FactoryUtils.nullFactory()Lorg/apache/commons/collections4/Factory;: root-Branch
   */

  @Test
  public void test4()  throws Throwable  {
		fr.inria.diversify.sosie.logger.LogWriter.writeTestStart(1323,"org.apache.commons.collections4.FactoryUtilsEvoSuiteTest.test4");
      Factory<Object> factory0 = FactoryUtils.nullFactory();
      assertNotNull(factory0);
  }

  //Test case number: 5
  /*
   * 1 covered goal:
   * 1 org.apache.commons.collections4.FactoryUtils.instantiateFactory(Ljava/lang/Class;[Ljava/lang/Class;[Ljava/lang/Object;)Lorg/apache/commons/collections4/Factory;: root-Branch
   */

  @Test
  public void test5()  throws Throwable  {
		fr.inria.diversify.sosie.logger.LogWriter.writeTestStart(1324,"org.apache.commons.collections4.FactoryUtilsEvoSuiteTest.test5");
      Class<Integer> class0 = Integer.class;
      Class<Object>[] classArray0 = (Class<Object>[]) Array.newInstance(Class.class, 8);
      // Undeclared exception!
      try {
        FactoryUtils.instantiateFactory(class0, (Class<?>[]) classArray0, (Object[]) classArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // InstantiateFactory: The constructor must exist and be public 
         //
      }
  }
}
