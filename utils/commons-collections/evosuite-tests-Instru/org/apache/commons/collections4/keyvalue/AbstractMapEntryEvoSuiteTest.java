/*
 * This file was automatically generated by EvoSuite
 */

package org.apache.commons.collections4.keyvalue;

import org.junit.Test;
import static org.junit.Assert.*;
import java.util.AbstractMap;
import java.util.Map;
import org.apache.commons.collections4.KeyValue;
import org.apache.commons.collections4.keyvalue.DefaultKeyValue;
import org.apache.commons.collections4.keyvalue.DefaultMapEntry;
import org.apache.commons.collections4.keyvalue.UnmodifiableMapEntry;
import org.apache.commons.collections4.map.SingletonMap;
import org.junit.BeforeClass;

public class AbstractMapEntryEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.setLoggingForJUnit(); 
  } 


  //Test case number: 0
  /*
   * 5 covered goals:
   * 1 org.apache.commons.collections4.keyvalue.AbstractMapEntry.equals(Ljava/lang/Object;)Z: I4 Branch 1 IF_ACMPNE L66 - true
   * 2 org.apache.commons.collections4.keyvalue.AbstractMapEntry.equals(Ljava/lang/Object;)Z: I13 Branch 2 IFNE L69 - true
   * 3 org.apache.commons.collections4.keyvalue.AbstractMapEntry.equals(Ljava/lang/Object;)Z: I27 Branch 3 IFNONNULL L73 - true
   * 4 org.apache.commons.collections4.keyvalue.AbstractMapEntry.equals(Ljava/lang/Object;)Z: I38 Branch 5 IFEQ L73 - true
   * 5 org.apache.commons.collections4.keyvalue.AbstractMapEntry.<init>(Ljava/lang/Object;Ljava/lang/Object;)V: root-Branch
   */

  @Test
  public void test0()  throws Throwable  {
		fr.inria.diversify.sosie.logger.LogWriter.writeTestStart(424,"org.apache.commons.collections4.keyvalue.AbstractMapEntryEvoSuiteTest.test0");
      AbstractMap.SimpleImmutableEntry<Integer, Integer> abstractMap_SimpleImmutableEntry0 = new AbstractMap.SimpleImmutableEntry<Integer, Integer>((Integer) null, (Integer) null);
      DefaultMapEntry<AbstractMap.SimpleImmutableEntry<Integer, Integer>, String> defaultMapEntry0 = new DefaultMapEntry<AbstractMap.SimpleImmutableEntry<Integer, Integer>, String>(abstractMap_SimpleImmutableEntry0, "");
      DefaultKeyValue<Object, Integer> defaultKeyValue0 = new DefaultKeyValue<Object, Integer>();
      defaultKeyValue0.toString();
      AbstractMap.SimpleImmutableEntry<Integer, Object> abstractMap_SimpleImmutableEntry1 = new AbstractMap.SimpleImmutableEntry<Integer, Object>((Integer) null, (Object) "null=null");
      boolean boolean0 = defaultMapEntry0.equals((Object) abstractMap_SimpleImmutableEntry1);
      assertEquals(false, boolean0);
  }

  //Test case number: 1
  /*
   * 5 covered goals:
   * 1 org.apache.commons.collections4.keyvalue.AbstractMapEntry.equals(Ljava/lang/Object;)Z: I4 Branch 1 IF_ACMPNE L66 - false
   * 2 org.apache.commons.collections4.keyvalue.AbstractMapEntry.equals(Ljava/lang/Object;)Z: I27 Branch 3 IFNONNULL L73 - false
   * 3 org.apache.commons.collections4.keyvalue.AbstractMapEntry.equals(Ljava/lang/Object;)Z: I30 Branch 4 IFNONNULL L73 - false
   * 4 org.apache.commons.collections4.keyvalue.AbstractMapEntry.equals(Ljava/lang/Object;)Z: I42 Branch 6 IFNONNULL L73 - false
   * 5 org.apache.commons.collections4.keyvalue.AbstractMapEntry.equals(Ljava/lang/Object;)Z: I45 Branch 7 IFNONNULL L73 - false
   */

  @Test
  public void test1()  throws Throwable  {
		fr.inria.diversify.sosie.logger.LogWriter.writeTestStart(425,"org.apache.commons.collections4.keyvalue.AbstractMapEntryEvoSuiteTest.test1");
      DefaultKeyValue<String, Integer> defaultKeyValue0 = new DefaultKeyValue<String, Integer>("DefaultKeyValue may not contain itself as a key.", (Integer) null);
      DefaultMapEntry<String, Integer> defaultMapEntry0 = new DefaultMapEntry<String, Integer>((KeyValue<String, Integer>) defaultKeyValue0);
      defaultMapEntry0.getValue();
      DefaultMapEntry<Integer, AbstractMap.SimpleImmutableEntry<Integer, Integer>> defaultMapEntry1 = new DefaultMapEntry<Integer, AbstractMap.SimpleImmutableEntry<Integer, Integer>>((Integer) null, (AbstractMap.SimpleImmutableEntry<Integer, Integer>) null);
      AbstractMap.SimpleEntry<Integer, Integer> abstractMap_SimpleEntry0 = new AbstractMap.SimpleEntry<Integer, Integer>((Integer) null, (Integer) null);
      boolean boolean0 = defaultMapEntry1.equals((Object) abstractMap_SimpleEntry0);
      assertEquals(true, boolean0);
  }

  //Test case number: 2
  /*
   * 1 covered goal:
   * 1 org.apache.commons.collections4.keyvalue.AbstractMapEntry.equals(Ljava/lang/Object;)Z: I13 Branch 2 IFNE L69 - false
   */

  @Test
  public void test2()  throws Throwable  {
		fr.inria.diversify.sosie.logger.LogWriter.writeTestStart(426,"org.apache.commons.collections4.keyvalue.AbstractMapEntryEvoSuiteTest.test2");
      DefaultKeyValue<String, Integer> defaultKeyValue0 = new DefaultKeyValue<String, Integer>("DefaultKeyValue may not contain itself as a key.", (Integer) null);
      DefaultMapEntry<String, Integer> defaultMapEntry0 = new DefaultMapEntry<String, Integer>((KeyValue<String, Integer>) defaultKeyValue0);
      defaultMapEntry0.getValue();
      UnmodifiableMapEntry<Integer, String> unmodifiableMapEntry0 = new UnmodifiableMapEntry<Integer, String>((Integer) null, "DefaultKeyValue may not contain itself as a key.");
      unmodifiableMapEntry0.getValue();
      UnmodifiableMapEntry<Integer, Integer> unmodifiableMapEntry1 = new UnmodifiableMapEntry<Integer, Integer>((Integer) null, (Integer) null);
      boolean boolean0 = unmodifiableMapEntry1.equals((Object) "DefaultKeyValue may not contain itself as a key.");
      assertEquals(false, boolean0);
  }

  //Test case number: 3
  /*
   * 1 covered goal:
   * 1 org.apache.commons.collections4.keyvalue.AbstractMapEntry.equals(Ljava/lang/Object;)Z: I30 Branch 4 IFNONNULL L73 - true
   */

  @Test
  public void test3()  throws Throwable  {
		fr.inria.diversify.sosie.logger.LogWriter.writeTestStart(427,"org.apache.commons.collections4.keyvalue.AbstractMapEntryEvoSuiteTest.test3");
      DefaultKeyValue<Object, Integer> defaultKeyValue0 = new DefaultKeyValue<Object, Integer>();
      defaultKeyValue0.toString();
      UnmodifiableMapEntry<Integer, String> unmodifiableMapEntry0 = new UnmodifiableMapEntry<Integer, String>((Integer) null, "null=null");
      DefaultMapEntry<Integer, String> defaultMapEntry0 = new DefaultMapEntry<Integer, String>((Map.Entry<Integer, String>) unmodifiableMapEntry0);
      AbstractMap.SimpleEntry<Integer, String> abstractMap_SimpleEntry0 = new AbstractMap.SimpleEntry<Integer, String>((Map.Entry<? extends Integer, ? extends String>) unmodifiableMapEntry0);
      AbstractMap.SimpleImmutableEntry<AbstractMap.SimpleEntry<Integer, String>, Integer> abstractMap_SimpleImmutableEntry0 = new AbstractMap.SimpleImmutableEntry<AbstractMap.SimpleEntry<Integer, String>, Integer>(abstractMap_SimpleEntry0, (Integer) null);
      boolean boolean0 = defaultMapEntry0.equals((Object) abstractMap_SimpleImmutableEntry0);
      assertEquals(false, boolean0);
  }

  //Test case number: 4
  /*
   * 4 covered goals:
   * 1 org.apache.commons.collections4.keyvalue.AbstractMapEntry.equals(Ljava/lang/Object;)Z: I38 Branch 5 IFEQ L73 - false
   * 2 org.apache.commons.collections4.keyvalue.AbstractMapEntry.equals(Ljava/lang/Object;)Z: I42 Branch 6 IFNONNULL L73 - true
   * 3 org.apache.commons.collections4.keyvalue.AbstractMapEntry.equals(Ljava/lang/Object;)Z: I53 Branch 8 IFEQ L73 - false
   * 4 org.apache.commons.collections4.keyvalue.AbstractMapEntry.equals(Ljava/lang/Object;)Z: I4 Branch 1 IF_ACMPNE L66 - false
   */

  @Test
  public void test4()  throws Throwable  {
		fr.inria.diversify.sosie.logger.LogWriter.writeTestStart(428,"org.apache.commons.collections4.keyvalue.AbstractMapEntryEvoSuiteTest.test4");
      DefaultMapEntry<String, String> defaultMapEntry0 = new DefaultMapEntry<String, String>("QD", "QD");
      AbstractMap.SimpleEntry<String, String> abstractMap_SimpleEntry0 = new AbstractMap.SimpleEntry<String, String>((Map.Entry<? extends String, ? extends String>) defaultMapEntry0);
      boolean boolean0 = defaultMapEntry0.equals((Object) abstractMap_SimpleEntry0);
      assertEquals(true, boolean0);
  }

  //Test case number: 5
  /*
   * 4 covered goals:
   * 1 org.apache.commons.collections4.keyvalue.AbstractMapEntry.equals(Ljava/lang/Object;)Z: I45 Branch 7 IFNONNULL L73 - true
   * 2 org.apache.commons.collections4.keyvalue.AbstractMapEntry.equals(Ljava/lang/Object;)Z: I27 Branch 3 IFNONNULL L73 - false
   * 3 org.apache.commons.collections4.keyvalue.AbstractMapEntry.equals(Ljava/lang/Object;)Z: I30 Branch 4 IFNONNULL L73 - false
   * 4 org.apache.commons.collections4.keyvalue.AbstractMapEntry.equals(Ljava/lang/Object;)Z: I42 Branch 6 IFNONNULL L73 - false
   */

  @Test
  public void test5()  throws Throwable  {
		fr.inria.diversify.sosie.logger.LogWriter.writeTestStart(429,"org.apache.commons.collections4.keyvalue.AbstractMapEntryEvoSuiteTest.test5");
      DefaultKeyValue<String, Integer> defaultKeyValue0 = new DefaultKeyValue<String, Integer>("DefaultKeyValue may not contain itself as a key.", (Integer) null);
      DefaultMapEntry<String, Integer> defaultMapEntry0 = new DefaultMapEntry<String, Integer>((KeyValue<String, Integer>) defaultKeyValue0);
      defaultMapEntry0.getValue();
      UnmodifiableMapEntry<Integer, String> unmodifiableMapEntry0 = new UnmodifiableMapEntry<Integer, String>((Integer) null, "DefaultKeyValue may not contain itself as a key.");
      UnmodifiableMapEntry<Integer, Integer> unmodifiableMapEntry1 = new UnmodifiableMapEntry<Integer, Integer>((Integer) null, (Integer) null);
      AbstractMap.SimpleImmutableEntry<Integer, Object> abstractMap_SimpleImmutableEntry0 = new AbstractMap.SimpleImmutableEntry<Integer, Object>((Map.Entry<? extends Integer, ?>) unmodifiableMapEntry0);
      boolean boolean0 = unmodifiableMapEntry1.equals((Object) abstractMap_SimpleImmutableEntry0);
      assertEquals(false, boolean0);
  }

  //Test case number: 6
  /*
   * 7 covered goals:
   * 1 org.apache.commons.collections4.keyvalue.AbstractMapEntry.equals(Ljava/lang/Object;)Z: I53 Branch 8 IFEQ L73 - true
   * 2 org.apache.commons.collections4.keyvalue.AbstractMapEntry.setValue(Ljava/lang/Object;)Ljava/lang/Object;: root-Branch
   * 3 org.apache.commons.collections4.keyvalue.AbstractMapEntry.equals(Ljava/lang/Object;)Z: I4 Branch 1 IF_ACMPNE L66 - true
   * 4 org.apache.commons.collections4.keyvalue.AbstractMapEntry.equals(Ljava/lang/Object;)Z: I13 Branch 2 IFNE L69 - true
   * 5 org.apache.commons.collections4.keyvalue.AbstractMapEntry.equals(Ljava/lang/Object;)Z: I27 Branch 3 IFNONNULL L73 - true
   * 6 org.apache.commons.collections4.keyvalue.AbstractMapEntry.equals(Ljava/lang/Object;)Z: I38 Branch 5 IFEQ L73 - false
   * 7 org.apache.commons.collections4.keyvalue.AbstractMapEntry.equals(Ljava/lang/Object;)Z: I42 Branch 6 IFNONNULL L73 - true
   */

  @Test
  public void test6()  throws Throwable  {
		fr.inria.diversify.sosie.logger.LogWriter.writeTestStart(430,"org.apache.commons.collections4.keyvalue.AbstractMapEntryEvoSuiteTest.test6");
      AbstractMap.SimpleImmutableEntry<String, String> abstractMap_SimpleImmutableEntry0 = new AbstractMap.SimpleImmutableEntry<String, String>("T", "T");
      DefaultMapEntry<String, String> defaultMapEntry0 = new DefaultMapEntry<String, String>("", "");
      abstractMap_SimpleImmutableEntry0.getValue();
      AbstractMap.SimpleEntry<String, String> abstractMap_SimpleEntry0 = new AbstractMap.SimpleEntry<String, String>((Map.Entry<? extends String, ? extends String>) defaultMapEntry0);
      defaultMapEntry0.setValue("T");
      boolean boolean0 = defaultMapEntry0.equals((Object) abstractMap_SimpleEntry0);
      assertEquals(false, boolean0);
  }

  //Test case number: 7
  /*
   * 2 covered goals:
   * 1 org.apache.commons.collections4.keyvalue.AbstractMapEntry.hashCode()I: I4 Branch 9 IFNONNULL L87 - true
   * 2 org.apache.commons.collections4.keyvalue.AbstractMapEntry.hashCode()I: I14 Branch 10 IFNONNULL L87 - true
   */

  @Test
  public void test7()  throws Throwable  {
		fr.inria.diversify.sosie.logger.LogWriter.writeTestStart(431,"org.apache.commons.collections4.keyvalue.AbstractMapEntryEvoSuiteTest.test7");
      AbstractMap.SimpleImmutableEntry<String, String> abstractMap_SimpleImmutableEntry0 = new AbstractMap.SimpleImmutableEntry<String, String>("QD", "QD");
      UnmodifiableMapEntry<AbstractMap.SimpleImmutableEntry<String, String>, String> unmodifiableMapEntry0 = new UnmodifiableMapEntry<AbstractMap.SimpleImmutableEntry<String, String>, String>(abstractMap_SimpleImmutableEntry0, "QD");
      int int0 = unmodifiableMapEntry0.hashCode();
      assertEquals(2579, int0);
  }

  //Test case number: 8
  /*
   * 3 covered goals:
   * 1 org.apache.commons.collections4.keyvalue.AbstractMapEntry.hashCode()I: I4 Branch 9 IFNONNULL L87 - false
   * 2 org.apache.commons.collections4.keyvalue.AbstractMapEntry.hashCode()I: I14 Branch 10 IFNONNULL L87 - false
   * 3 org.apache.commons.collections4.keyvalue.AbstractMapEntry.<init>(Ljava/lang/Object;Ljava/lang/Object;)V: root-Branch
   */

  @Test
  public void test8()  throws Throwable  {
		fr.inria.diversify.sosie.logger.LogWriter.writeTestStart(432,"org.apache.commons.collections4.keyvalue.AbstractMapEntryEvoSuiteTest.test8");
      SingletonMap<AbstractMap.SimpleEntry<Integer, Integer>, Integer> singletonMap0 = new SingletonMap<AbstractMap.SimpleEntry<Integer, Integer>, Integer>();
      UnmodifiableMapEntry<AbstractMap.SimpleEntry<Integer, Integer>, Integer> unmodifiableMapEntry0 = new UnmodifiableMapEntry<AbstractMap.SimpleEntry<Integer, Integer>, Integer>((KeyValue<AbstractMap.SimpleEntry<Integer, Integer>, Integer>) singletonMap0);
      int int0 = unmodifiableMapEntry0.hashCode();
      assertEquals(0, int0);
  }
}
