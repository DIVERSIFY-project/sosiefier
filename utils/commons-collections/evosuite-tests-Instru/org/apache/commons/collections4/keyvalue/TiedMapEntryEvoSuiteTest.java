/*
 * This file was automatically generated by EvoSuite
 */

package org.apache.commons.collections4.keyvalue;

import org.junit.Test;
import static org.junit.Assert.*;
import java.util.AbstractMap;
import java.util.HashMap;
import java.util.Map;
import org.apache.commons.collections4.keyvalue.TiedMapEntry;
import org.junit.BeforeClass;

public class TiedMapEntryEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.setLoggingForJUnit(); 
  } 


  //Test case number: 0
  /*
   * 6 covered goals:
   * 1 org.apache.commons.collections4.keyvalue.TiedMapEntry.getValue()Ljava/lang/Object;: root-Branch
   * 2 org.apache.commons.collections4.keyvalue.TiedMapEntry.<init>(Ljava/util/Map;Ljava/lang/Object;)V: root-Branch
   * 3 org.apache.commons.collections4.keyvalue.TiedMapEntry.equals(Ljava/lang/Object;)Z: I4 Branch 2 IF_ACMPNE L100 - true
   * 4 org.apache.commons.collections4.keyvalue.TiedMapEntry.equals(Ljava/lang/Object;)Z: I13 Branch 3 IFNE L103 - true
   * 5 org.apache.commons.collections4.keyvalue.TiedMapEntry.equals(Ljava/lang/Object;)Z: I32 Branch 4 IFNONNULL L108 - false
   * 6 org.apache.commons.collections4.keyvalue.TiedMapEntry.equals(Ljava/lang/Object;)Z: I35 Branch 5 IFNONNULL L108 - true
   */

  @Test
  public void test0()  throws Throwable  {
		fr.inria.diversify.sosie.logger.LogWriter.writeTestStart(453,"org.apache.commons.collections4.keyvalue.TiedMapEntryEvoSuiteTest.test0");
      HashMap<AbstractMap.SimpleEntry<String, String>, String> hashMap0 = new HashMap<AbstractMap.SimpleEntry<String, String>, String>();
      AbstractMap.SimpleEntry<String, String> abstractMap_SimpleEntry0 = new AbstractMap.SimpleEntry<String, String>("Z&MK6A=$Fkk~-^j{I=", "Z&MK6A=$Fkk~-^j{I=");
      hashMap0.put(abstractMap_SimpleEntry0, "Z&MK6A=$Fkk~-^j{I=");
      HashMap<Object, Integer> hashMap1 = new HashMap<Object, Integer>();
      TiedMapEntry<Object, Integer> tiedMapEntry0 = new TiedMapEntry<Object, Integer>((Map<Object, Integer>) hashMap1, (Object) null);
      AbstractMap.SimpleEntry<String, String> abstractMap_SimpleEntry1 = new AbstractMap.SimpleEntry<String, String>("Z&MK6A=$Fkk~-^j{I=", "Z&MK6A=$Fkk~-^j{I=");
      boolean boolean0 = tiedMapEntry0.equals((Object) abstractMap_SimpleEntry1);
      assertEquals(false, boolean0);
  }

  //Test case number: 1
  /*
   * 2 covered goals:
   * 1 org.apache.commons.collections4.keyvalue.TiedMapEntry.toString()Ljava/lang/String;: root-Branch
   * 2 org.apache.commons.collections4.keyvalue.TiedMapEntry.getKey()Ljava/lang/Object;: root-Branch
   */

  @Test
  public void test1()  throws Throwable  {
		fr.inria.diversify.sosie.logger.LogWriter.writeTestStart(454,"org.apache.commons.collections4.keyvalue.TiedMapEntryEvoSuiteTest.test1");
      HashMap<Object, Integer> hashMap0 = new HashMap<Object, Integer>();
      Object object0 = new Object();
      TiedMapEntry<Object, Integer> tiedMapEntry0 = new TiedMapEntry<Object, Integer>((Map<Object, Integer>) hashMap0, object0);
      tiedMapEntry0.getValue();
      TiedMapEntry<Integer, AbstractMap.SimpleImmutableEntry<Integer, Integer>> tiedMapEntry1 = new TiedMapEntry<Integer, AbstractMap.SimpleImmutableEntry<Integer, Integer>>((Map<Integer, AbstractMap.SimpleImmutableEntry<Integer, Integer>>) null, (Integer) null);
      // Undeclared exception!
      try {
        tiedMapEntry1.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 2
  /*
   * 1 covered goal:
   * 1 org.apache.commons.collections4.keyvalue.TiedMapEntry.setValue(Ljava/lang/Object;)Ljava/lang/Object;: I4 Branch 1 IF_ACMPNE L84 - true
   */

  @Test
  public void test2()  throws Throwable  {
		fr.inria.diversify.sosie.logger.LogWriter.writeTestStart(455,"org.apache.commons.collections4.keyvalue.TiedMapEntryEvoSuiteTest.test2");
      HashMap<Object, Integer> hashMap0 = new HashMap<Object, Integer>();
      AbstractMap.SimpleImmutableEntry<Object, String> abstractMap_SimpleImmutableEntry0 = new AbstractMap.SimpleImmutableEntry<Object, String>((Object) hashMap0, "");
      abstractMap_SimpleImmutableEntry0.getValue();
      TiedMapEntry<Object, Object> tiedMapEntry0 = new TiedMapEntry<Object, Object>((Map<Object, Object>) null, (Object) hashMap0);
      // Undeclared exception!
      try {
        tiedMapEntry0.setValue((Object) "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 3
  /*
   * 5 covered goals:
   * 1 org.apache.commons.collections4.keyvalue.TiedMapEntry.equals(Ljava/lang/Object;)Z: I4 Branch 2 IF_ACMPNE L100 - false
   * 2 org.apache.commons.collections4.keyvalue.TiedMapEntry.equals(Ljava/lang/Object;)Z: I32 Branch 4 IFNONNULL L108 - true
   * 3 org.apache.commons.collections4.keyvalue.TiedMapEntry.equals(Ljava/lang/Object;)Z: I43 Branch 6 IFEQ L108 - false
   * 4 org.apache.commons.collections4.keyvalue.TiedMapEntry.equals(Ljava/lang/Object;)Z: I46 Branch 7 IFNONNULL L108 - false
   * 5 org.apache.commons.collections4.keyvalue.TiedMapEntry.equals(Ljava/lang/Object;)Z: I49 Branch 8 IFNONNULL L108 - false
   */

  @Test
  public void test3()  throws Throwable  {
		fr.inria.diversify.sosie.logger.LogWriter.writeTestStart(456,"org.apache.commons.collections4.keyvalue.TiedMapEntryEvoSuiteTest.test3");
      HashMap<String, AbstractMap.SimpleEntry<Integer, Object>> hashMap0 = new HashMap<String, AbstractMap.SimpleEntry<Integer, Object>>();
      TiedMapEntry<String, AbstractMap.SimpleEntry<Integer, Object>> tiedMapEntry0 = new TiedMapEntry<String, AbstractMap.SimpleEntry<Integer, Object>>((Map<String, AbstractMap.SimpleEntry<Integer, Object>>) hashMap0, "^e&/L1cK&NEZSye");
      AbstractMap.SimpleEntry<String, Object> abstractMap_SimpleEntry0 = new AbstractMap.SimpleEntry<String, Object>("^e&/L1cK&NEZSye", (Object) null);
      boolean boolean0 = tiedMapEntry0.equals((Object) abstractMap_SimpleEntry0);
      assertEquals(true, boolean0);
  }

  //Test case number: 4
  /*
   * 1 covered goal:
   * 1 org.apache.commons.collections4.keyvalue.TiedMapEntry.equals(Ljava/lang/Object;)Z: I13 Branch 3 IFNE L103 - false
   */

  @Test
  public void test4()  throws Throwable  {
		fr.inria.diversify.sosie.logger.LogWriter.writeTestStart(457,"org.apache.commons.collections4.keyvalue.TiedMapEntryEvoSuiteTest.test4");
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      TiedMapEntry<String, String> tiedMapEntry0 = new TiedMapEntry<String, String>((Map<String, String>) hashMap0, "^e&/L1cK&NEZSye");
      boolean boolean0 = tiedMapEntry0.equals((Object) "^e&/L1cK&NEZSye");
      assertEquals(false, boolean0);
  }

  //Test case number: 5
  /*
   * 3 covered goals:
   * 1 org.apache.commons.collections4.keyvalue.TiedMapEntry.equals(Ljava/lang/Object;)Z: I43 Branch 6 IFEQ L108 - true
   * 2 org.apache.commons.collections4.keyvalue.TiedMapEntry.hashCode()I: I9 Branch 10 IFNONNULL L123 - true
   * 3 org.apache.commons.collections4.keyvalue.TiedMapEntry.hashCode()I: I18 Branch 11 IFNONNULL L123 - false
   */

  @Test
  public void test5()  throws Throwable  {
		fr.inria.diversify.sosie.logger.LogWriter.writeTestStart(458,"org.apache.commons.collections4.keyvalue.TiedMapEntryEvoSuiteTest.test5");
      HashMap<String, AbstractMap.SimpleEntry<Integer, Object>> hashMap0 = new HashMap<String, AbstractMap.SimpleEntry<Integer, Object>>();
      TiedMapEntry<String, AbstractMap.SimpleEntry<Integer, Object>> tiedMapEntry0 = new TiedMapEntry<String, AbstractMap.SimpleEntry<Integer, Object>>((Map<String, AbstractMap.SimpleEntry<Integer, Object>>) hashMap0, "^e&/L1cK&NEZSye");
      int int0 = tiedMapEntry0.hashCode();
      assertEquals(180486149, int0);
      
      HashMap<AbstractMap.SimpleEntry<String, Integer>, Integer> hashMap1 = new HashMap<AbstractMap.SimpleEntry<String, Integer>, Integer>();
      AbstractMap.SimpleEntry<String, Integer> abstractMap_SimpleEntry0 = new AbstractMap.SimpleEntry<String, Integer>("^e&/L1cK&NEZSye", (Integer) 180486149);
      TiedMapEntry<AbstractMap.SimpleEntry<String, Integer>, Integer> tiedMapEntry1 = new TiedMapEntry<AbstractMap.SimpleEntry<String, Integer>, Integer>((Map<AbstractMap.SimpleEntry<String, Integer>, Integer>) hashMap1, abstractMap_SimpleEntry0);
      AbstractMap.SimpleEntry<Integer, String> abstractMap_SimpleEntry1 = new AbstractMap.SimpleEntry<Integer, String>((Integer) 180486149, "^e&/L1cK&NEZSye");
      boolean boolean0 = tiedMapEntry1.equals((Object) abstractMap_SimpleEntry1);
      assertEquals(false, boolean0);
  }

  //Test case number: 6
  /*
   * 2 covered goals:
   * 1 org.apache.commons.collections4.keyvalue.TiedMapEntry.equals(Ljava/lang/Object;)Z: I46 Branch 7 IFNONNULL L108 - true
   * 2 org.apache.commons.collections4.keyvalue.TiedMapEntry.equals(Ljava/lang/Object;)Z: I56 Branch 9 IFEQ L108 - true
   */

  @Test
  public void test6()  throws Throwable  {
		fr.inria.diversify.sosie.logger.LogWriter.writeTestStart(459,"org.apache.commons.collections4.keyvalue.TiedMapEntryEvoSuiteTest.test6");
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      TiedMapEntry<String, String> tiedMapEntry0 = new TiedMapEntry<String, String>((Map<String, String>) hashMap0, "^e&/L1cK&NEZSye");
      HashMap<String, AbstractMap.SimpleEntry<Integer, Object>> hashMap1 = new HashMap<String, AbstractMap.SimpleEntry<Integer, Object>>();
      TiedMapEntry<String, AbstractMap.SimpleEntry<Integer, Object>> tiedMapEntry1 = new TiedMapEntry<String, AbstractMap.SimpleEntry<Integer, Object>>((Map<String, AbstractMap.SimpleEntry<Integer, Object>>) hashMap1, "^e&/L1cK&NEZSye");
      tiedMapEntry1.hashCode();
      HashMap<String, AbstractMap.SimpleImmutableEntry<Integer, String>> hashMap2 = new HashMap<String, AbstractMap.SimpleImmutableEntry<Integer, String>>();
      TiedMapEntry<String, AbstractMap.SimpleImmutableEntry<Integer, String>> tiedMapEntry2 = new TiedMapEntry<String, AbstractMap.SimpleImmutableEntry<Integer, String>>((Map<String, AbstractMap.SimpleImmutableEntry<Integer, String>>) hashMap2, "^e&/L1cK&NEZSye");
      AbstractMap.SimpleImmutableEntry<Integer, String> abstractMap_SimpleImmutableEntry0 = new AbstractMap.SimpleImmutableEntry<Integer, String>((Integer) 180486149, "^e&/L1cK&NEZSye");
      hashMap2.put("^e&/L1cK&NEZSye", abstractMap_SimpleImmutableEntry0);
      AbstractMap.SimpleImmutableEntry<Object, Object> abstractMap_SimpleImmutableEntry1 = new AbstractMap.SimpleImmutableEntry<Object, Object>((Map.Entry<?, ?>) tiedMapEntry0);
      boolean boolean0 = tiedMapEntry2.equals((Object) abstractMap_SimpleImmutableEntry1);
      assertEquals("^e&/L1cK&NEZSye=180486149=^e&/L1cK&NEZSye", tiedMapEntry2.toString());
      assertEquals(false, boolean0);
  }

  //Test case number: 7
  /*
   * 6 covered goals:
   * 1 org.apache.commons.collections4.keyvalue.TiedMapEntry.equals(Ljava/lang/Object;)Z: I49 Branch 8 IFNONNULL L108 - true
   * 2 org.apache.commons.collections4.keyvalue.TiedMapEntry.equals(Ljava/lang/Object;)Z: I4 Branch 2 IF_ACMPNE L100 - true
   * 3 org.apache.commons.collections4.keyvalue.TiedMapEntry.equals(Ljava/lang/Object;)Z: I13 Branch 3 IFNE L103 - true
   * 4 org.apache.commons.collections4.keyvalue.TiedMapEntry.equals(Ljava/lang/Object;)Z: I32 Branch 4 IFNONNULL L108 - true
   * 5 org.apache.commons.collections4.keyvalue.TiedMapEntry.equals(Ljava/lang/Object;)Z: I43 Branch 6 IFEQ L108 - false
   * 6 org.apache.commons.collections4.keyvalue.TiedMapEntry.equals(Ljava/lang/Object;)Z: I46 Branch 7 IFNONNULL L108 - false
   */

  @Test
  public void test7()  throws Throwable  {
		fr.inria.diversify.sosie.logger.LogWriter.writeTestStart(460,"org.apache.commons.collections4.keyvalue.TiedMapEntryEvoSuiteTest.test7");
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      hashMap0.put("", "");
      TiedMapEntry<String, String> tiedMapEntry0 = new TiedMapEntry<String, String>((Map<String, String>) hashMap0, "");
      HashMap<String, AbstractMap.SimpleImmutableEntry<Integer, String>> hashMap1 = new HashMap<String, AbstractMap.SimpleImmutableEntry<Integer, String>>();
      TiedMapEntry<String, AbstractMap.SimpleImmutableEntry<Integer, String>> tiedMapEntry1 = new TiedMapEntry<String, AbstractMap.SimpleImmutableEntry<Integer, String>>((Map<String, AbstractMap.SimpleImmutableEntry<Integer, String>>) hashMap1, "");
      AbstractMap.SimpleImmutableEntry<Object, Object> abstractMap_SimpleImmutableEntry0 = new AbstractMap.SimpleImmutableEntry<Object, Object>((Map.Entry<?, ?>) tiedMapEntry0);
      boolean boolean0 = tiedMapEntry1.equals((Object) abstractMap_SimpleImmutableEntry0);
      assertEquals("=null", tiedMapEntry1.toString());
      assertEquals(false, boolean0);
  }

  //Test case number: 8
  /*
   * 2 covered goals:
   * 1 org.apache.commons.collections4.keyvalue.TiedMapEntry.hashCode()I: I9 Branch 10 IFNONNULL L123 - false
   * 2 org.apache.commons.collections4.keyvalue.TiedMapEntry.hashCode()I: I18 Branch 11 IFNONNULL L123 - false
   */

  @Test
  public void test8()  throws Throwable  {
		fr.inria.diversify.sosie.logger.LogWriter.writeTestStart(461,"org.apache.commons.collections4.keyvalue.TiedMapEntryEvoSuiteTest.test8");
      HashMap<Integer, String> hashMap0 = new HashMap<Integer, String>();
      TiedMapEntry<Integer, String> tiedMapEntry0 = new TiedMapEntry<Integer, String>((Map<Integer, String>) hashMap0, (Integer) null);
      int int0 = tiedMapEntry0.hashCode();
      assertEquals(0, int0);
  }

  //Test case number: 9
  /*
   * 5 covered goals:
   * 1 org.apache.commons.collections4.keyvalue.TiedMapEntry.hashCode()I: I18 Branch 11 IFNONNULL L123 - true
   * 2 org.apache.commons.collections4.keyvalue.TiedMapEntry.getValue()Ljava/lang/Object;: root-Branch
   * 3 org.apache.commons.collections4.keyvalue.TiedMapEntry.getKey()Ljava/lang/Object;: root-Branch
   * 4 org.apache.commons.collections4.keyvalue.TiedMapEntry.<init>(Ljava/util/Map;Ljava/lang/Object;)V: root-Branch
   * 5 org.apache.commons.collections4.keyvalue.TiedMapEntry.hashCode()I: I9 Branch 10 IFNONNULL L123 - true
   */

  @Test
  public void test9()  throws Throwable  {
		fr.inria.diversify.sosie.logger.LogWriter.writeTestStart(462,"org.apache.commons.collections4.keyvalue.TiedMapEntryEvoSuiteTest.test9");
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      hashMap0.put("", "");
      TiedMapEntry<String, String> tiedMapEntry0 = new TiedMapEntry<String, String>((Map<String, String>) hashMap0, "");
      tiedMapEntry0.hashCode();
      assertEquals("=", tiedMapEntry0.toString());
  }
}
