/*
 * This file was automatically generated by EvoSuite
 */

package org.apache.commons.collections4.map;

import org.junit.Test;
import static org.junit.Assert.*;
import org.apache.commons.collections4.OrderedMap;
import org.apache.commons.collections4.bidimap.DualTreeBidiMap;
import org.apache.commons.collections4.bidimap.TreeBidiMap;
import org.apache.commons.collections4.map.LRUMap;
import org.apache.commons.collections4.map.UnmodifiableOrderedMap;
import org.junit.BeforeClass;

public class AbstractOrderedMapDecoratorEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.setLoggingForJUnit(); 
  } 


  //Test case number: 0
  /*
   * 1 covered goal:
   * 1 org.apache.commons.collections4.map.AbstractOrderedMapDecorator.<init>(Lorg/apache/commons/collections4/OrderedMap;)V: root-Branch
   */

  @Test
  public void test0()  throws Throwable  {
		fr.inria.diversify.sosie.logger.LogWriter.writeTestStart(21,"org.apache.commons.collections4.map.AbstractOrderedMapDecoratorEvoSuiteTest.test0");
      DualTreeBidiMap<TreeBidiMap<Integer, Integer>, LRUMap<String, String>> dualTreeBidiMap0 = new DualTreeBidiMap<TreeBidiMap<Integer, Integer>, LRUMap<String, String>>();
      OrderedMap<TreeBidiMap<Integer, Integer>, LRUMap<String, String>> orderedMap0 = UnmodifiableOrderedMap.unmodifiableOrderedMap((OrderedMap<TreeBidiMap<Integer, Integer>, LRUMap<String, String>>) dualTreeBidiMap0);
      assertEquals(true, orderedMap0.isEmpty());
  }
}
