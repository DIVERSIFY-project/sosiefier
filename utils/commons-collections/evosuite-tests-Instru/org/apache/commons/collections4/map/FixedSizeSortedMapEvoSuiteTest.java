/*
 * This file was automatically generated by EvoSuite
 */

package org.apache.commons.collections4.map;

import org.junit.Test;
import static org.junit.Assert.*;
import java.util.AbstractMap;
import java.util.Collection;
import java.util.HashMap;
import java.util.Map;
import java.util.SortedMap;
import java.util.TreeMap;
import org.apache.commons.collections4.MapIterator;
import org.apache.commons.collections4.map.FixedSizeSortedMap;
import org.junit.BeforeClass;

public class FixedSizeSortedMapEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.setLoggingForJUnit(); 
  } 


  //Test case number: 0
  /*
   * 4 covered goals:
   * 1 org.apache.commons.collections4.map.FixedSizeSortedMap.getSortedMap()Ljava/util/SortedMap;: root-Branch
   * 2 org.apache.commons.collections4.map.FixedSizeSortedMap.<init>(Ljava/util/SortedMap;)V: root-Branch
   * 3 org.apache.commons.collections4.map.FixedSizeSortedMap.fixedSizeSortedMap(Ljava/util/SortedMap;)Lorg/apache/commons/collections4/map/FixedSizeSortedMap;: root-Branch
   * 4 org.apache.commons.collections4.map.FixedSizeSortedMap.subMap(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/SortedMap;: root-Branch
   */

  @Test
  public void test0()  throws Throwable  {
		fr.inria.diversify.sosie.logger.LogWriter.writeTestStart(77,"org.apache.commons.collections4.map.FixedSizeSortedMapEvoSuiteTest.test0");
      TreeMap<HashMap<String, Object>, HashMap<String, Integer>> treeMap0 = new TreeMap<HashMap<String, Object>, HashMap<String, Integer>>();
      FixedSizeSortedMap<HashMap<String, Object>, HashMap<String, Integer>> fixedSizeSortedMap0 = FixedSizeSortedMap.fixedSizeSortedMap((SortedMap<HashMap<String, Object>, HashMap<String, Integer>>) treeMap0);
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      // Undeclared exception!
      try {
        fixedSizeSortedMap0.subMap(hashMap0, hashMap0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.util.HashMap cannot be cast to java.lang.Comparable
         //
      }
  }

  //Test case number: 1
  /*
   * 1 covered goal:
   * 1 org.apache.commons.collections4.map.FixedSizeSortedMap.entrySet()Ljava/util/Set;: root-Branch
   */

  @Test
  public void test1()  throws Throwable  {
		fr.inria.diversify.sosie.logger.LogWriter.writeTestStart(78,"org.apache.commons.collections4.map.FixedSizeSortedMapEvoSuiteTest.test1");
      TreeMap<String, Object> treeMap0 = new TreeMap<String, Object>();
      FixedSizeSortedMap<String, Object> fixedSizeSortedMap0 = FixedSizeSortedMap.fixedSizeSortedMap((SortedMap<String, Object>) treeMap0);
      MapIterator<String, Object> mapIterator0 = fixedSizeSortedMap0.mapIterator();
      assertEquals(false, mapIterator0.hasNext());
  }

  //Test case number: 2
  /*
   * 1 covered goal:
   * 1 org.apache.commons.collections4.map.FixedSizeSortedMap.maxSize()I: root-Branch
   */

  @Test
  public void test2()  throws Throwable  {
		fr.inria.diversify.sosie.logger.LogWriter.writeTestStart(80,"org.apache.commons.collections4.map.FixedSizeSortedMapEvoSuiteTest.test2");
      TreeMap<TreeMap<Object, Integer>, AbstractMap.SimpleImmutableEntry<String, String>> treeMap0 = new TreeMap<TreeMap<Object, Integer>, AbstractMap.SimpleImmutableEntry<String, String>>();
      FixedSizeSortedMap<TreeMap<Object, Integer>, AbstractMap.SimpleImmutableEntry<String, String>> fixedSizeSortedMap0 = FixedSizeSortedMap.fixedSizeSortedMap((SortedMap<TreeMap<Object, Integer>, AbstractMap.SimpleImmutableEntry<String, String>>) treeMap0);
      int int0 = fixedSizeSortedMap0.maxSize();
      assertEquals(0, int0);
  }

  //Test case number: 3
  /*
   * 1 covered goal:
   * 1 org.apache.commons.collections4.map.FixedSizeSortedMap.headMap(Ljava/lang/Object;)Ljava/util/SortedMap;: root-Branch
   */

  @Test
  public void test3()  throws Throwable  {
		fr.inria.diversify.sosie.logger.LogWriter.writeTestStart(81,"org.apache.commons.collections4.map.FixedSizeSortedMapEvoSuiteTest.test3");
      TreeMap<String, HashMap<String, Integer>> treeMap0 = new TreeMap<String, HashMap<String, Integer>>();
      FixedSizeSortedMap<String, HashMap<String, Integer>> fixedSizeSortedMap0 = FixedSizeSortedMap.fixedSizeSortedMap((SortedMap<String, HashMap<String, Integer>>) treeMap0);
      String string0 = fixedSizeSortedMap0.previousKey("Map must not be null");
      assertNull(string0);
  }

  //Test case number: 4
  /*
   * 1 covered goal:
   * 1 org.apache.commons.collections4.map.FixedSizeSortedMap.clear()V: root-Branch
   */

  @Test
  public void test4()  throws Throwable  {
		fr.inria.diversify.sosie.logger.LogWriter.writeTestStart(82,"org.apache.commons.collections4.map.FixedSizeSortedMapEvoSuiteTest.test4");
      TreeMap<String, AbstractMap.SimpleImmutableEntry<Object, Integer>> treeMap0 = new TreeMap<String, AbstractMap.SimpleImmutableEntry<Object, Integer>>();
      FixedSizeSortedMap<String, AbstractMap.SimpleImmutableEntry<Object, Integer>> fixedSizeSortedMap0 = FixedSizeSortedMap.fixedSizeSortedMap((SortedMap<String, AbstractMap.SimpleImmutableEntry<Object, Integer>>) treeMap0);
      // Undeclared exception!
      try {
        fixedSizeSortedMap0.clear();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // Map is fixed size
         //
      }
  }

  //Test case number: 5
  /*
   * 1 covered goal:
   * 1 org.apache.commons.collections4.map.FixedSizeSortedMap.values()Ljava/util/Collection;: root-Branch
   */

  @Test
  public void test5()  throws Throwable  {
		fr.inria.diversify.sosie.logger.LogWriter.writeTestStart(83,"org.apache.commons.collections4.map.FixedSizeSortedMapEvoSuiteTest.test5");
      TreeMap<Integer, AbstractMap.SimpleImmutableEntry<String, Object>> treeMap0 = new TreeMap<Integer, AbstractMap.SimpleImmutableEntry<String, Object>>();
      FixedSizeSortedMap<Integer, AbstractMap.SimpleImmutableEntry<String, Object>> fixedSizeSortedMap0 = FixedSizeSortedMap.fixedSizeSortedMap((SortedMap<Integer, AbstractMap.SimpleImmutableEntry<String, Object>>) treeMap0);
      Collection<AbstractMap.SimpleImmutableEntry<String, Object>> collection0 = fixedSizeSortedMap0.values();
      assertEquals(true, collection0.isEmpty());
  }

  //Test case number: 6
  /*
   * 2 covered goals:
   * 1 org.apache.commons.collections4.map.FixedSizeSortedMap.keySet()Ljava/util/Set;: root-Branch
   * 2 org.apache.commons.collections4.map.FixedSizeSortedMap.putAll(Ljava/util/Map;)V: I7 Branch 2 IFEQ L127 - false
   */

  @Test
  public void test6()  throws Throwable  {
		fr.inria.diversify.sosie.logger.LogWriter.writeTestStart(84,"org.apache.commons.collections4.map.FixedSizeSortedMapEvoSuiteTest.test6");
      TreeMap<HashMap<Object, String>, Integer> treeMap0 = new TreeMap<HashMap<Object, String>, Integer>();
      FixedSizeSortedMap<HashMap<Object, String>, Integer> fixedSizeSortedMap0 = FixedSizeSortedMap.fixedSizeSortedMap((SortedMap<HashMap<Object, String>, Integer>) treeMap0);
      // Undeclared exception!
      try {
        fixedSizeSortedMap0.putAll((Map<? extends HashMap<Object, String>, ? extends Integer>) treeMap0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Cannot put new key/value pair - Map is fixed size
         //
      }
  }

  //Test case number: 7
  /*
   * 1 covered goal:
   * 1 org.apache.commons.collections4.map.FixedSizeSortedMap.isFull()Z: root-Branch
   */

  @Test
  public void test7()  throws Throwable  {
		fr.inria.diversify.sosie.logger.LogWriter.writeTestStart(85,"org.apache.commons.collections4.map.FixedSizeSortedMapEvoSuiteTest.test7");
      TreeMap<String, String> treeMap0 = new TreeMap<String, String>();
      FixedSizeSortedMap<String, String> fixedSizeSortedMap0 = FixedSizeSortedMap.fixedSizeSortedMap((SortedMap<String, String>) treeMap0);
      boolean boolean0 = fixedSizeSortedMap0.isFull();
      assertEquals(true, boolean0);
  }

  //Test case number: 8
  /*
   * 1 covered goal:
   * 1 org.apache.commons.collections4.map.FixedSizeSortedMap.remove(Ljava/lang/Object;)Ljava/lang/Object;: root-Branch
   */

  @Test
  public void test8()  throws Throwable  {
		fr.inria.diversify.sosie.logger.LogWriter.writeTestStart(86,"org.apache.commons.collections4.map.FixedSizeSortedMapEvoSuiteTest.test8");
      Object object0 = new Object();
      TreeMap<HashMap<Integer, String>, Object> treeMap0 = new TreeMap<HashMap<Integer, String>, Object>();
      FixedSizeSortedMap<HashMap<Integer, String>, Object> fixedSizeSortedMap0 = FixedSizeSortedMap.fixedSizeSortedMap((SortedMap<HashMap<Integer, String>, Object>) treeMap0);
      // Undeclared exception!
      try {
        fixedSizeSortedMap0.remove(object0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // Map is fixed size
         //
      }
  }

  //Test case number: 9
  /*
   * 2 covered goals:
   * 1 org.apache.commons.collections4.map.FixedSizeSortedMap.tailMap(Ljava/lang/Object;)Ljava/util/SortedMap;: root-Branch
   * 2 org.apache.commons.collections4.map.FixedSizeSortedMap.getSortedMap()Ljava/util/SortedMap;: root-Branch
   */

  @Test
  public void test9()  throws Throwable  {
		fr.inria.diversify.sosie.logger.LogWriter.writeTestStart(87,"org.apache.commons.collections4.map.FixedSizeSortedMapEvoSuiteTest.test9");
      TreeMap<String, AbstractMap.SimpleImmutableEntry<Integer, String>> treeMap0 = new TreeMap<String, AbstractMap.SimpleImmutableEntry<Integer, String>>();
      FixedSizeSortedMap<String, AbstractMap.SimpleImmutableEntry<Integer, String>> fixedSizeSortedMap0 = FixedSizeSortedMap.fixedSizeSortedMap((SortedMap<String, AbstractMap.SimpleImmutableEntry<Integer, String>>) treeMap0);
      SortedMap<String, AbstractMap.SimpleImmutableEntry<Integer, String>> sortedMap0 = fixedSizeSortedMap0.tailMap("Map is fixed size");
      assertEquals(0, sortedMap0.size());
  }

 }
