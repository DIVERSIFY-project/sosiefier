/*
 * This file was automatically generated by EvoSuite
 */

package org.apache.commons.collections4.map;

import org.junit.Test;
import static org.junit.Assert.*;
import java.lang.ref.PhantomReference;
import java.lang.ref.ReferenceQueue;
import java.lang.ref.SoftReference;
import java.lang.ref.WeakReference;
import java.util.HashMap;
import org.apache.commons.collections4.map.AbstractReferenceMap;
import org.apache.commons.collections4.map.ReferenceIdentityMap;
import org.junit.BeforeClass;

public class ReferenceIdentityMapEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.setLoggingForJUnit(); 
  } 


  //Test case number: 1
  /*
   * 1 covered goal:
   * 1 org.apache.commons.collections4.map.ReferenceIdentityMap.<init>(Lorg/apache/commons/collections4/map/AbstractReferenceMap$ReferenceStrength;Lorg/apache/commons/collections4/map/AbstractReferenceMap$ReferenceStrength;)V: root-Branch
   */

  @Test
  public void test1()  throws Throwable  {
		fr.inria.diversify.sosie.logger.LogWriter.writeTestStart(211,"org.apache.commons.collections4.map.ReferenceIdentityMapEvoSuiteTest.test1");
      AbstractReferenceMap.ReferenceStrength abstractReferenceMap_ReferenceStrength0 = AbstractReferenceMap.ReferenceStrength.HARD;
      ReferenceIdentityMap<Integer, Object> referenceIdentityMap0 = new ReferenceIdentityMap<Integer, Object>(abstractReferenceMap_ReferenceStrength0, abstractReferenceMap_ReferenceStrength0);
      assertEquals("{}", referenceIdentityMap0.toString());
  }

  //Test case number: 2
  /*
   * 1 covered goal:
   * 1 org.apache.commons.collections4.map.ReferenceIdentityMap.<init>()V: root-Branch
   */

  @Test
  public void test2()  throws Throwable  {
		fr.inria.diversify.sosie.logger.LogWriter.writeTestStart(212,"org.apache.commons.collections4.map.ReferenceIdentityMapEvoSuiteTest.test2");
      ReferenceIdentityMap<String, String> referenceIdentityMap0 = new ReferenceIdentityMap<String, String>();
      assertEquals(true, referenceIdentityMap0.isEmpty());
  }

  //Test case number: 3
  /*
   * 2 covered goals:
   * 1 org.apache.commons.collections4.map.ReferenceIdentityMap.isEqualKey(Ljava/lang/Object;Ljava/lang/Object;)Z: I5 Branch 1 IFEQ L205 - true
   * 2 org.apache.commons.collections4.map.ReferenceIdentityMap.isEqualKey(Ljava/lang/Object;Ljava/lang/Object;)Z: I18 Branch 2 IF_ACMPNE L206 - false
   */

  @Test
  public void test3()  throws Throwable  {
		fr.inria.diversify.sosie.logger.LogWriter.writeTestStart(213,"org.apache.commons.collections4.map.ReferenceIdentityMapEvoSuiteTest.test3");
      AbstractReferenceMap.ReferenceStrength abstractReferenceMap_ReferenceStrength0 = AbstractReferenceMap.ReferenceStrength.SOFT;
      ReferenceIdentityMap<SoftReference<Integer>, WeakReference<Integer>> referenceIdentityMap0 = new ReferenceIdentityMap<SoftReference<Integer>, WeakReference<Integer>>((AbstractReferenceMap.ReferenceStrength) abstractReferenceMap_ReferenceStrength0, (AbstractReferenceMap.ReferenceStrength) abstractReferenceMap_ReferenceStrength0, 61, (float) 61);
      SoftReference<Integer> softReference0 = new SoftReference<Integer>((Integer) 61);
      ReferenceQueue<Integer> referenceQueue0 = new ReferenceQueue<Integer>();
      WeakReference<Integer> weakReference0 = new WeakReference<Integer>((Integer) 61, (ReferenceQueue<? super Integer>) referenceQueue0);
      referenceIdentityMap0.put(softReference0, weakReference0);
      referenceIdentityMap0.put(softReference0, weakReference0);
      assertEquals(1, referenceIdentityMap0.size());
  }


  //Test case number: 5
  /*
   * 3 covered goals:
   * 1 org.apache.commons.collections4.map.ReferenceIdentityMap.isEqualValue(Ljava/lang/Object;Ljava/lang/Object;)Z: I4 Branch 3 IF_ACMPNE L220 - true
   * 2 org.apache.commons.collections4.map.ReferenceIdentityMap.<init>(Lorg/apache/commons/collections4/map/AbstractReferenceMap$ReferenceStrength;Lorg/apache/commons/collections4/map/AbstractReferenceMap$ReferenceStrength;IF)V: root-Branch
   * 3 org.apache.commons.collections4.map.ReferenceIdentityMap.hash(Ljava/lang/Object;)I: root-Branch
   */

  @Test
  public void test5()  throws Throwable  {
		fr.inria.diversify.sosie.logger.LogWriter.writeTestStart(215,"org.apache.commons.collections4.map.ReferenceIdentityMapEvoSuiteTest.test5");
      AbstractReferenceMap.ReferenceStrength abstractReferenceMap_ReferenceStrength0 = AbstractReferenceMap.ReferenceStrength.SOFT;
      ReferenceIdentityMap<SoftReference<Integer>, WeakReference<Integer>> referenceIdentityMap0 = new ReferenceIdentityMap<SoftReference<Integer>, WeakReference<Integer>>((AbstractReferenceMap.ReferenceStrength) abstractReferenceMap_ReferenceStrength0, (AbstractReferenceMap.ReferenceStrength) abstractReferenceMap_ReferenceStrength0, 61, (float) 61);
      SoftReference<Integer> softReference0 = new SoftReference<Integer>((Integer) 61);
      ReferenceQueue<Integer> referenceQueue0 = new ReferenceQueue<Integer>();
      WeakReference<Integer> weakReference0 = new WeakReference<Integer>((Integer) 61, (ReferenceQueue<? super Integer>) referenceQueue0);
      referenceIdentityMap0.put(softReference0, weakReference0);
      ReferenceQueue<Object> referenceQueue1 = new ReferenceQueue<Object>();
      PhantomReference<Integer> phantomReference0 = new PhantomReference<Integer>((Integer) 61, (ReferenceQueue<? super Integer>) referenceQueue1);
      boolean boolean0 = referenceIdentityMap0.containsValue((Object) phantomReference0);
      assertEquals(false, boolean0);
  }
}
