/*
 * This file was automatically generated by EvoSuite
 */

package org.apache.commons.collections4.map;

import org.junit.Test;
import static org.junit.Assert.*;
import java.util.Map;
import org.apache.commons.collections4.map.LRUMap;
import org.junit.BeforeClass;

public class LRUMapEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.setLoggingForJUnit(); 
  } 


  //Test case number: 0
  /*
   * 14 covered goals:
   * 1 org.apache.commons.collections4.map.LRUMap.removeLRU(Lorg/apache/commons/collections4/map/AbstractLinkedMap$LinkEntry;)Z: root-Branch
   * 2 org.apache.commons.collections4.map.LRUMap.addMapping(IILjava/lang/Object;Ljava/lang/Object;)V: I4 Branch 7 IFEQ L246 - false
   * 3 org.apache.commons.collections4.map.LRUMap.addMapping(IILjava/lang/Object;Ljava/lang/Object;)V: I19 Branch 8 IFEQ L249 - true
   * 4 org.apache.commons.collections4.map.LRUMap.addMapping(IILjava/lang/Object;Ljava/lang/Object;)V: I104 Branch 13 IFEQ L268 - false
   * 5 org.apache.commons.collections4.map.LRUMap.addMapping(IILjava/lang/Object;Ljava/lang/Object;)V: I108 Branch 14 IFNONNULL L269 - true
   * 6 org.apache.commons.collections4.map.LRUMap.reuseMapping(Lorg/apache/commons/collections4/map/AbstractLinkedMap$LinkEntry;IILjava/lang/Object;Ljava/lang/Object;)V: I29 Branch 15 IF_ACMPEQ L306 - true
   * 7 org.apache.commons.collections4.map.LRUMap.reuseMapping(Lorg/apache/commons/collections4/map/AbstractLinkedMap$LinkEntry;IILjava/lang/Object;Ljava/lang/Object;)V: I45 Branch 17 IFNONNULL L310 - true
   * 8 org.apache.commons.collections4.map.LRUMap.isFull()Z: I6 Branch 19 IF_ICMPLT L377 - false
   * 9 org.apache.commons.collections4.map.LRUMap.<init>(Ljava/util/Map;)V: root-Branch
   * 10 org.apache.commons.collections4.map.LRUMap.<init>(Ljava/util/Map;Z)V: root-Branch
   * 11 org.apache.commons.collections4.map.LRUMap.<init>(IF)V: root-Branch
   * 12 org.apache.commons.collections4.map.LRUMap.isFull()Z: I6 Branch 19 IF_ICMPLT L377 - true
   * 13 org.apache.commons.collections4.map.LRUMap.<init>(IFZ)V: I17 Branch 2 IF_ICMPGE L128 - true
   * 14 org.apache.commons.collections4.map.LRUMap.addMapping(IILjava/lang/Object;Ljava/lang/Object;)V: I4 Branch 7 IFEQ L246 - true
   */

  @Test
  public void test0()  throws Throwable  {
		fr.inria.diversify.sosie.logger.LogWriter.writeTestStart(122,"org.apache.commons.collections4.map.LRUMapEvoSuiteTest.test0");
      LRUMap<Object, Integer> lRUMap0 = new LRUMap<Object, Integer>(1721, 1721);
      Object object0 = new Object();
      lRUMap0.put(object0, (Integer) 1721);
      assertEquals(1, lRUMap0.size());
      
      LRUMap<Object, Integer> lRUMap1 = new LRUMap<Object, Integer>((Map<Object, Integer>) lRUMap0);
      lRUMap1.put((Object) null, (Integer) 3524608);
      assertEquals(1, lRUMap1.size());
  }

  //Test case number: 1
  /*
   * 2 covered goals:
   * 1 org.apache.commons.collections4.map.LRUMap.maxSize()I: root-Branch
   * 2 org.apache.commons.collections4.map.LRUMap.<init>(I)V: root-Branch
   */

  @Test
  public void test1()  throws Throwable  {
		fr.inria.diversify.sosie.logger.LogWriter.writeTestStart(123,"org.apache.commons.collections4.map.LRUMapEvoSuiteTest.test1");
      LRUMap<String, Integer> lRUMap0 = new LRUMap<String, Integer>(387);
      int int0 = lRUMap0.maxSize();
      assertEquals(false, lRUMap0.isScanUntilRemovable());
      assertEquals(387, int0);
  }

  //Test case number: 2
  /*
   * 2 covered goals:
   * 1 org.apache.commons.collections4.map.LRUMap.clone()Lorg/apache/commons/collections4/map/LRUMap;: root-Branch
   * 2 org.apache.commons.collections4.map.LRUMap.<init>()V: root-Branch
   */

  @Test
  public void test2()  throws Throwable  {
		fr.inria.diversify.sosie.logger.LogWriter.writeTestStart(124,"org.apache.commons.collections4.map.LRUMapEvoSuiteTest.test2");
      LRUMap<Integer, Integer> lRUMap0 = new LRUMap<Integer, Integer>();
      LRUMap<Integer, Integer> lRUMap1 = lRUMap0.clone();
      assertEquals(100, lRUMap0.maxSize());
      assertEquals(false, lRUMap0.isScanUntilRemovable());
      assertEquals(100, lRUMap1.maxSize());
  }

  //Test case number: 3
  /*
   * 2 covered goals:
   * 1 org.apache.commons.collections4.map.LRUMap.<init>(IFZ)V: I17 Branch 2 IF_ICMPGE L128 - false
   * 2 org.apache.commons.collections4.map.LRUMap.<init>(IZ)V: root-Branch
   */

  @Test
  public void test3()  throws Throwable  {
		fr.inria.diversify.sosie.logger.LogWriter.writeTestStart(125,"org.apache.commons.collections4.map.LRUMapEvoSuiteTest.test3");
      LRUMap<Object, String> lRUMap0 = new LRUMap<Object, String>();
      int int0 = lRUMap0.threshold;
      assertEquals(100, lRUMap0.maxSize());
      
      LRUMap<String, LRUMap<Integer, String>> lRUMap1 = new LRUMap<String, LRUMap<Integer, String>>(96, false);
      LRUMap<String, LRUMap<Integer, String>> lRUMap2 = null;
      try {
        lRUMap2 = new LRUMap<String, LRUMap<Integer, String>>((Map<String, LRUMap<Integer, String>>) lRUMap1, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // LRUMap max size must be greater than 0
         //
      }
  }

  //Test case number: 4
  /*
   * 3 covered goals:
   * 1 org.apache.commons.collections4.map.LRUMap.get(Ljava/lang/Object;)Ljava/lang/Object;: I9 Branch 3 IFNONNULL L177 - true
   * 2 org.apache.commons.collections4.map.LRUMap.moveToMRU(Lorg/apache/commons/collections4/map/AbstractLinkedMap$LinkEntry;)V: I6 Branch 4 IF_ACMPEQ L193 - true
   * 3 org.apache.commons.collections4.map.LRUMap.moveToMRU(Lorg/apache/commons/collections4/map/AbstractLinkedMap$LinkEntry;)V: I73 Branch 6 IF_ACMPNE L208 - true
   */

  @Test
  public void test4()  throws Throwable  {
		fr.inria.diversify.sosie.logger.LogWriter.writeTestStart(126,"org.apache.commons.collections4.map.LRUMapEvoSuiteTest.test4");
      LRUMap<String, String> lRUMap0 = new LRUMap<String, String>(1362, true);
      lRUMap0.put("`T", "`T");
      String string0 = lRUMap0.get((Object) "`T");
      assertEquals(true, lRUMap0.isScanUntilRemovable());
      assertEquals(1362, lRUMap0.maxSize());
      assertEquals(false, lRUMap0.isFull());
      assertNotNull(string0);
  }

  //Test case number: 5
  /*
   * 1 covered goal:
   * 1 org.apache.commons.collections4.map.LRUMap.get(Ljava/lang/Object;)Ljava/lang/Object;: I9 Branch 3 IFNONNULL L177 - false
   */

  @Test
  public void test5()  throws Throwable  {
		fr.inria.diversify.sosie.logger.LogWriter.writeTestStart(127,"org.apache.commons.collections4.map.LRUMapEvoSuiteTest.test5");
      LRUMap<String, Integer> lRUMap0 = new LRUMap<String, Integer>();
      lRUMap0.put("<cvnP$%J./s546", (Integer) 1743);
      assertEquals(1, lRUMap0.size());
      
      LRUMap<Object, LRUMap<Integer, Object>> lRUMap1 = new LRUMap<Object, LRUMap<Integer, Object>>(1743, 1743);
      lRUMap1.get((Object) null);
      assertEquals(false, lRUMap1.isScanUntilRemovable());
  }

  //Test case number: 6
  /*
   * 7 covered goals:
   * 1 org.apache.commons.collections4.map.LRUMap.moveToMRU(Lorg/apache/commons/collections4/map/AbstractLinkedMap$LinkEntry;)V: I6 Branch 4 IF_ACMPEQ L193 - false
   * 2 org.apache.commons.collections4.map.LRUMap.moveToMRU(Lorg/apache/commons/collections4/map/AbstractLinkedMap$LinkEntry;)V: I19 Branch 5 IFNONNULL L196 - true
   * 3 org.apache.commons.collections4.map.LRUMap.<init>()V: root-Branch
   * 4 org.apache.commons.collections4.map.LRUMap.<init>(IF)V: root-Branch
   * 5 org.apache.commons.collections4.map.LRUMap.updateEntry(Lorg/apache/commons/collections4/map/AbstractHashedMap$HashEntry;Ljava/lang/Object;)V: root-Branch
   * 6 org.apache.commons.collections4.map.LRUMap.isScanUntilRemovable()Z: root-Branch
   * 7 org.apache.commons.collections4.map.LRUMap.<init>(IZ)V: root-Branch
   */

  @Test
  public void test6()  throws Throwable  {
		fr.inria.diversify.sosie.logger.LogWriter.writeTestStart(128,"org.apache.commons.collections4.map.LRUMapEvoSuiteTest.test6");
      LRUMap<String, Integer> lRUMap0 = new LRUMap<String, Integer>();
      LRUMap<Object, Integer> lRUMap1 = new LRUMap<Object, Integer>(1721, 1721);
      lRUMap0.isScanUntilRemovable();
      LRUMap<Integer, Object> lRUMap2 = new LRUMap<Integer, Object>(3524608, false);
      lRUMap1.put((Object) lRUMap2, (Integer) 3524608);
      LRUMap<LRUMap<Integer, Object>, Object> lRUMap3 = new LRUMap<LRUMap<Integer, Object>, Object>(1721, (float) 1721, false);
      lRUMap1.put((Object) null, (Integer) 1721);
      lRUMap1.put((Object) lRUMap3, (Integer) 1721);
      assertEquals("{null=1721, {}=1721}", lRUMap1.toString());
  }

  //Test case number: 7
  /*
   * 15 covered goals:
   * 1 org.apache.commons.collections4.map.LRUMap.addMapping(IILjava/lang/Object;Ljava/lang/Object;)V: I19 Branch 8 IFEQ L249 - false
   * 2 org.apache.commons.collections4.map.LRUMap.addMapping(IILjava/lang/Object;Ljava/lang/Object;)V: I25 Branch 9 IF_ACMPEQ L250 - false
   * 3 org.apache.commons.collections4.map.LRUMap.addMapping(IILjava/lang/Object;Ljava/lang/Object;)V: I27 Branch 10 IFNULL L250 - false
   * 4 org.apache.commons.collections4.map.LRUMap.addMapping(IILjava/lang/Object;Ljava/lang/Object;)V: I33 Branch 11 IFEQ L251 - false
   * 5 org.apache.commons.collections4.map.LRUMap.addMapping(IILjava/lang/Object;Ljava/lang/Object;)V: I50 Branch 12 IFNONNULL L257 - true
   * 6 org.apache.commons.collections4.map.LRUMap.removeLRU(Lorg/apache/commons/collections4/map/AbstractLinkedMap$LinkEntry;)Z: root-Branch
   * 7 org.apache.commons.collections4.map.LRUMap.isFull()Z: I6 Branch 19 IF_ICMPLT L377 - true
   * 8 org.apache.commons.collections4.map.LRUMap.isFull()Z: I6 Branch 19 IF_ICMPLT L377 - false
   * 9 org.apache.commons.collections4.map.LRUMap.<init>(IFZ)V: I17 Branch 2 IF_ICMPGE L128 - true
   * 10 org.apache.commons.collections4.map.LRUMap.reuseMapping(Lorg/apache/commons/collections4/map/AbstractLinkedMap$LinkEntry;IILjava/lang/Object;Ljava/lang/Object;)V: I29 Branch 15 IF_ACMPEQ L306 - true
   * 11 org.apache.commons.collections4.map.LRUMap.reuseMapping(Lorg/apache/commons/collections4/map/AbstractLinkedMap$LinkEntry;IILjava/lang/Object;Ljava/lang/Object;)V: I45 Branch 17 IFNONNULL L310 - true
   * 12 org.apache.commons.collections4.map.LRUMap.addMapping(IILjava/lang/Object;Ljava/lang/Object;)V: I4 Branch 7 IFEQ L246 - true
   * 13 org.apache.commons.collections4.map.LRUMap.addMapping(IILjava/lang/Object;Ljava/lang/Object;)V: I4 Branch 7 IFEQ L246 - false
   * 14 org.apache.commons.collections4.map.LRUMap.addMapping(IILjava/lang/Object;Ljava/lang/Object;)V: I104 Branch 13 IFEQ L268 - false
   * 15 org.apache.commons.collections4.map.LRUMap.addMapping(IILjava/lang/Object;Ljava/lang/Object;)V: I108 Branch 14 IFNONNULL L269 - true
   */

  @Test
  public void test7()  throws Throwable  {
		fr.inria.diversify.sosie.logger.LogWriter.writeTestStart(129,"org.apache.commons.collections4.map.LRUMapEvoSuiteTest.test7");
      LRUMap<String, Integer> lRUMap0 = new LRUMap<String, Integer>(1, (float) 1, true);
      lRUMap0.put("", (Integer) 1);
      lRUMap0.put("Can't move header to MRU (please report this to dev@commons.apache.org)", (Integer) 1874);
      assertEquals(1, lRUMap0.size());
      assertEquals(1, lRUMap0.maxSize());
  }
}
