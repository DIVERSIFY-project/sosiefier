/*
 * This file was automatically generated by EvoSuite
 */

package org.apache.commons.collections4.iterators;

import org.junit.Test;
import static org.junit.Assert.*;
import java.util.LinkedList;
import java.util.List;
import java.util.NoSuchElementException;
import org.apache.commons.collections4.iterators.ReverseListIterator;
import org.junit.BeforeClass;

public class ReverseListIteratorEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.setLoggingForJUnit(); 
  } 


  //Test case number: 0
  /*
   * 2 covered goals:
   * 1 org.apache.commons.collections4.iterators.ReverseListIterator.previous()Ljava/lang/Object;: root-Branch
   * 2 org.apache.commons.collections4.iterators.ReverseListIterator.<init>(Ljava/util/List;)V: root-Branch
   */

  @Test
  public void test0()  throws Throwable  {
		fr.inria.diversify.sosie.logger.LogWriter.writeTestStart(622,"org.apache.commons.collections4.iterators.ReverseListIteratorEvoSuiteTest.test0");
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      ReverseListIterator<Integer> reverseListIterator0 = new ReverseListIterator<Integer>((List<Integer>) linkedList0);
      // Undeclared exception!
      try {
        reverseListIterator0.previous();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 1
  /*
   * 1 covered goal:
   * 1 org.apache.commons.collections4.iterators.ReverseListIterator.hasNext()Z: root-Branch
   */

  @Test
  public void test1()  throws Throwable  {
		fr.inria.diversify.sosie.logger.LogWriter.writeTestStart(623,"org.apache.commons.collections4.iterators.ReverseListIteratorEvoSuiteTest.test1");
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      ReverseListIterator<Object> reverseListIterator0 = new ReverseListIterator<Object>((List<Object>) linkedList0);
      boolean boolean0 = reverseListIterator0.hasNext();
      assertEquals(false, boolean0);
  }

  //Test case number: 2
  /*
   * 1 covered goal:
   * 1 org.apache.commons.collections4.iterators.ReverseListIterator.hasPrevious()Z: root-Branch
   */

  @Test
  public void test2()  throws Throwable  {
		fr.inria.diversify.sosie.logger.LogWriter.writeTestStart(625,"org.apache.commons.collections4.iterators.ReverseListIteratorEvoSuiteTest.test2");
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      ReverseListIterator<Object> reverseListIterator0 = new ReverseListIterator<Object>((List<Object>) linkedList0);
      boolean boolean0 = reverseListIterator0.hasPrevious();
      assertEquals(false, boolean0);
  }

  //Test case number: 3
  /*
   * 1 covered goal:
   * 1 org.apache.commons.collections4.iterators.ReverseListIterator.previousIndex()I: root-Branch
   */

  @Test
  public void test3()  throws Throwable  {
		fr.inria.diversify.sosie.logger.LogWriter.writeTestStart(626,"org.apache.commons.collections4.iterators.ReverseListIteratorEvoSuiteTest.test3");
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      ReverseListIterator<Integer> reverseListIterator0 = new ReverseListIterator<Integer>((List<Integer>) linkedList0);
      int int0 = reverseListIterator0.previousIndex();
      assertEquals(0, int0);
  }

  //Test case number: 4
  /*
   * 1 covered goal:
   * 1 org.apache.commons.collections4.iterators.ReverseListIterator.reset()V: root-Branch
   */

  @Test
  public void test4()  throws Throwable  {
		fr.inria.diversify.sosie.logger.LogWriter.writeTestStart(627,"org.apache.commons.collections4.iterators.ReverseListIteratorEvoSuiteTest.test4");
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      ReverseListIterator<Object> reverseListIterator0 = new ReverseListIterator<Object>((List<Object>) linkedList0);
      reverseListIterator0.reset();
      assertEquals(false, reverseListIterator0.hasNext());
  }

  //Test case number: 5
  /*
   * 1 covered goal:
   * 1 org.apache.commons.collections4.iterators.ReverseListIterator.next()Ljava/lang/Object;: root-Branch
   */

  @Test
  public void test5()  throws Throwable  {
		fr.inria.diversify.sosie.logger.LogWriter.writeTestStart(628,"org.apache.commons.collections4.iterators.ReverseListIteratorEvoSuiteTest.test5");
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      ReverseListIterator<Integer> reverseListIterator0 = new ReverseListIterator<Integer>((List<Integer>) linkedList0);
      // Undeclared exception!
      try {
        reverseListIterator0.next();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 6
  /*
   * 1 covered goal:
   * 1 org.apache.commons.collections4.iterators.ReverseListIterator.remove()V: I4 Branch 1 IFNE L128 - true
   */

  @Test
  public void test6()  throws Throwable  {
		fr.inria.diversify.sosie.logger.LogWriter.writeTestStart(629,"org.apache.commons.collections4.iterators.ReverseListIteratorEvoSuiteTest.test6");
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      ReverseListIterator<Integer> reverseListIterator0 = new ReverseListIterator<Integer>((List<Integer>) linkedList0);
      // Undeclared exception!
      try {
        reverseListIterator0.remove();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 7
  /*
   * 2 covered goals:
   * 1 org.apache.commons.collections4.iterators.ReverseListIterator.remove()V: I4 Branch 1 IFNE L128 - false
   * 2 org.apache.commons.collections4.iterators.ReverseListIterator.add(Ljava/lang/Object;)V: I4 Branch 3 IFNE L158 - true
   */

  @Test
  public void test7()  throws Throwable  {
		fr.inria.diversify.sosie.logger.LogWriter.writeTestStart(630,"org.apache.commons.collections4.iterators.ReverseListIteratorEvoSuiteTest.test7");
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      ReverseListIterator<Object> reverseListIterator0 = new ReverseListIterator<Object>((List<Object>) linkedList0);
      Object object0 = new Object();
      reverseListIterator0.add(object0);
      // Undeclared exception!
      try {
        reverseListIterator0.remove();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Cannot remove from list until next() or previous() called
         //
      }
  }

  //Test case number: 8
  /*
   * 2 covered goals:
   * 1 org.apache.commons.collections4.iterators.ReverseListIterator.set(Ljava/lang/Object;)V: I4 Branch 2 IFNE L142 - true
   * 2 org.apache.commons.collections4.iterators.ReverseListIterator.nextIndex()I: root-Branch
   */

  @Test
  public void test8()  throws Throwable  {
		fr.inria.diversify.sosie.logger.LogWriter.writeTestStart(631,"org.apache.commons.collections4.iterators.ReverseListIteratorEvoSuiteTest.test8");
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      ReverseListIterator<Object> reverseListIterator0 = new ReverseListIterator<Object>((List<Object>) linkedList0);
      int int0 = reverseListIterator0.nextIndex();
      assertEquals((-1), int0);
      
      LinkedList<Integer> linkedList1 = new LinkedList<Integer>();
      ReverseListIterator<Integer> reverseListIterator1 = new ReverseListIterator<Integer>((List<Integer>) linkedList1);
      // Undeclared exception!
      try {
        reverseListIterator1.set((Integer) (-1));
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 9
  /*
   * 1 covered goal:
   * 1 org.apache.commons.collections4.iterators.ReverseListIterator.set(Ljava/lang/Object;)V: I4 Branch 2 IFNE L142 - false
   */

  @Test
  public void test9()  throws Throwable  {
		fr.inria.diversify.sosie.logger.LogWriter.writeTestStart(632,"org.apache.commons.collections4.iterators.ReverseListIteratorEvoSuiteTest.test9");
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      ReverseListIterator<Object> reverseListIterator0 = new ReverseListIterator<Object>((List<Object>) linkedList0);
      reverseListIterator0.add((Object) "");
      // Undeclared exception!
      try {
        reverseListIterator0.set((Object) linkedList0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Cannot set to list until next() or previous() called
         //
      }
  }

  //Test case number: 10
  /*
   * 3 covered goals:
   * 1 org.apache.commons.collections4.iterators.ReverseListIterator.add(Ljava/lang/Object;)V: I4 Branch 3 IFNE L158 - false
   * 2 org.apache.commons.collections4.iterators.ReverseListIterator.<init>(Ljava/util/List;)V: root-Branch
   * 3 org.apache.commons.collections4.iterators.ReverseListIterator.add(Ljava/lang/Object;)V: I4 Branch 3 IFNE L158 - true
   */

  @Test
  public void test10()  throws Throwable  {
		fr.inria.diversify.sosie.logger.LogWriter.writeTestStart(624,"org.apache.commons.collections4.iterators.ReverseListIteratorEvoSuiteTest.test10");
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      ReverseListIterator<Object> reverseListIterator0 = new ReverseListIterator<Object>((List<Object>) linkedList0);
      reverseListIterator0.add((Object) "FO{o~DN9kM");
      // Undeclared exception!
      try {
        reverseListIterator0.add((Object) "FO{o~DN9kM");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Cannot add to list until next() or previous() called
         //
      }
  }
}
