/*
 * This file was automatically generated by EvoSuite
 */

package org.apache.commons.collections4;

import org.junit.Test;
import static org.junit.Assert.*;
import java.lang.reflect.Array;
import java.util.Collection;
import java.util.HashMap;
import java.util.LinkedList;
import java.util.Map;
import org.apache.commons.collections4.Closure;
import org.apache.commons.collections4.ClosureUtils;
import org.apache.commons.collections4.Predicate;
import org.apache.commons.collections4.functors.ExceptionClosure;
import org.apache.commons.collections4.functors.InstanceofPredicate;
import org.apache.commons.collections4.functors.NOPClosure;
import org.apache.commons.collections4.functors.NullPredicate;
import org.apache.commons.collections4.functors.OnePredicate;
import org.apache.commons.collections4.functors.TruePredicate;
import org.junit.BeforeClass;

public class ClosureUtilsEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.setLoggingForJUnit(); 
  } 


  //Test case number: 0
  /*
   * 1 covered goal:
   * 1 org.apache.commons.collections4.ClosureUtils.chainedClosure(Ljava/util/Collection;)Lorg/apache/commons/collections4/Closure;: root-Branch
   */

  @Test
  public void test0()  throws Throwable  {
		fr.inria.diversify.sosie.logger.LogWriter.writeTestStart(1292,"org.apache.commons.collections4.ClosureUtilsEvoSuiteTest.test0");
      LinkedList<Closure<TruePredicate<Object>>> linkedList0 = new LinkedList<Closure<TruePredicate<Object>>>();
      Closure<TruePredicate<Object>> closure0 = ClosureUtils.chainedClosure((Collection<Closure<TruePredicate<Object>>>) linkedList0);
      assertNotNull(closure0);
  }

  //Test case number: 1
  /*
   * 2 covered goals:
   * 1 org.apache.commons.collections4.ClosureUtils.invokerClosure(Ljava/lang/String;[Ljava/lang/Class;[Ljava/lang/Object;)Lorg/apache/commons/collections4/Closure;: root-Branch
   * 2 org.apache.commons.collections4.ClosureUtils.asClosure(Lorg/apache/commons/collections4/Transformer;)Lorg/apache/commons/collections4/Closure;: root-Branch
   */

  @Test
  public void test1()  throws Throwable  {
		fr.inria.diversify.sosie.logger.LogWriter.writeTestStart(1293,"org.apache.commons.collections4.ClosureUtilsEvoSuiteTest.test1");
      Class<NullPredicate<Object>>[] classArray0 = (Class<NullPredicate<Object>>[]) Array.newInstance(Class.class, 4);
      Closure<NOPClosure<InstanceofPredicate>> closure0 = ClosureUtils.invokerClosure("InstantiateTransformer: The constructor must exist and be public ", (Class<?>[]) classArray0, (Object[]) classArray0);
      assertNotNull(closure0);
  }

  //Test case number: 2
  /*
   * 1 covered goal:
   * 1 org.apache.commons.collections4.ClosureUtils.exceptionClosure()Lorg/apache/commons/collections4/Closure;: root-Branch
   */

  @Test
  public void test2()  throws Throwable  {
		fr.inria.diversify.sosie.logger.LogWriter.writeTestStart(1294,"org.apache.commons.collections4.ClosureUtilsEvoSuiteTest.test2");
      Closure<OnePredicate<InstanceofPredicate>> closure0 = ClosureUtils.exceptionClosure();
      assertNotNull(closure0);
  }

  //Test case number: 3
  /*
   * 1 covered goal:
   * 1 org.apache.commons.collections4.ClosureUtils.switchClosure(Ljava/util/Map;)Lorg/apache/commons/collections4/Closure;: root-Branch
   */

  @Test
  public void test3()  throws Throwable  {
		fr.inria.diversify.sosie.logger.LogWriter.writeTestStart(1295,"org.apache.commons.collections4.ClosureUtilsEvoSuiteTest.test3");
      HashMap<Predicate<ExceptionClosure<Integer>>, Closure<ExceptionClosure<Integer>>> hashMap0 = new HashMap<Predicate<ExceptionClosure<Integer>>, Closure<ExceptionClosure<Integer>>>();
      Closure<ExceptionClosure<Integer>> closure0 = ClosureUtils.switchClosure((Map<Predicate<ExceptionClosure<Integer>>, Closure<ExceptionClosure<Integer>>>) hashMap0);
      assertNotNull(closure0);
  }
}
