/*
 * This file was automatically generated by EvoSuite
 */

package org.apache.commons.collections4.list;

import org.junit.Test;
import static org.junit.Assert.*;
import java.util.LinkedList;
import java.util.List;
import org.apache.commons.collections4.Factory;
import org.apache.commons.collections4.FunctorException;
import org.apache.commons.collections4.functors.ConstantFactory;
import org.apache.commons.collections4.functors.ExceptionFactory;
import org.apache.commons.collections4.functors.InstantiateFactory;
import org.apache.commons.collections4.list.LazyList;
import org.junit.BeforeClass;

public class LazyListEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.setLoggingForJUnit(); 
  } 


  //Test case number: 0
  /*
   * 3 covered goals:
   * 1 org.apache.commons.collections4.list.LazyList.subList(II)Ljava/util/List;: root-Branch
   * 2 org.apache.commons.collections4.list.LazyList.lazyList(Ljava/util/List;Lorg/apache/commons/collections4/Factory;)Lorg/apache/commons/collections4/list/LazyList;: root-Branch
   * 3 org.apache.commons.collections4.list.LazyList.<init>(Ljava/util/List;Lorg/apache/commons/collections4/Factory;)V: I8 Branch 1 IFNONNULL L92 - true
   */

  @Test
  public void test0()  throws Throwable  {
		fr.inria.diversify.sosie.logger.LogWriter.writeTestStart(350,"org.apache.commons.collections4.list.LazyListEvoSuiteTest.test0");
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      Class<Object> class0 = Object.class;
      InstantiateFactory<Object> instantiateFactory0 = new InstantiateFactory<Object>(class0);
      LazyList<Object> lazyList0 = LazyList.lazyList((List<Object>) linkedList0, (Factory<?>) instantiateFactory0);
      // Undeclared exception!
      try {
        lazyList0.subList(974, 974);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // toIndex = 974
         //
      }
  }

  //Test case number: 1
  /*
   * 1 covered goal:
   * 1 org.apache.commons.collections4.list.LazyList.<init>(Ljava/util/List;Lorg/apache/commons/collections4/Factory;)V: I8 Branch 1 IFNONNULL L92 - false
   */

  @Test
  public void test1()  throws Throwable  {
		fr.inria.diversify.sosie.logger.LogWriter.writeTestStart(351,"org.apache.commons.collections4.list.LazyListEvoSuiteTest.test1");
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      // Undeclared exception!
      try {
        LazyList.lazyList((List<Object>) linkedList0, (Factory<?>) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Factory must not be null
         //
      }
  }

  //Test case number: 2
  /*
   * 3 covered goals:
   * 1 org.apache.commons.collections4.list.LazyList.get(I)Ljava/lang/Object;: I10 Branch 2 IF_ICMPGE L113 - true
   * 2 org.apache.commons.collections4.list.LazyList.get(I)Ljava/lang/Object;: I51 Branch 4 IF_ICMPGE L126 - true
   * 3 org.apache.commons.collections4.list.LazyList.get(I)Ljava/lang/Object;: I51 Branch 4 IF_ICMPGE L126 - false
   */

  @Test
  public void test2()  throws Throwable  {
		fr.inria.diversify.sosie.logger.LogWriter.writeTestStart(352,"org.apache.commons.collections4.list.LazyListEvoSuiteTest.test2");
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      ConstantFactory<String> constantFactory0 = new ConstantFactory<String>("5cHs@2p#Z+hrx");
      LazyList<Object> lazyList0 = LazyList.lazyList((List<Object>) linkedList0, (Factory<?>) constantFactory0);
      lazyList0.get(1);
      assertEquals(2, linkedList0.size());
      assertEquals(2, lazyList0.size());
  }

  //Test case number: 3
  /*
   * 2 covered goals:
   * 1 org.apache.commons.collections4.list.LazyList.get(I)Ljava/lang/Object;: I10 Branch 2 IF_ICMPGE L113 - false
   * 2 org.apache.commons.collections4.list.LazyList.get(I)Ljava/lang/Object;: I21 Branch 3 IFNONNULL L116 - true
   */

  @Test
  public void test3()  throws Throwable  {
		fr.inria.diversify.sosie.logger.LogWriter.writeTestStart(353,"org.apache.commons.collections4.list.LazyListEvoSuiteTest.test3");
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      linkedList0.add((Object) linkedList0);
      Factory<Object> factory0 = ExceptionFactory.INSTANCE;
      LazyList<Object> lazyList0 = LazyList.lazyList((List<Object>) linkedList0, (Factory<?>) factory0);
      LinkedList<?> linkedList1 = (LinkedList<?>)lazyList0.get(0);
      assertEquals(false, linkedList1.isEmpty());
  }

  //Test case number: 4
  /*
   * 4 covered goals:
   * 1 org.apache.commons.collections4.list.LazyList.get(I)Ljava/lang/Object;: I21 Branch 3 IFNONNULL L116 - false
   * 2 org.apache.commons.collections4.list.LazyList.lazyList(Ljava/util/List;Lorg/apache/commons/collections4/Factory;)Lorg/apache/commons/collections4/list/LazyList;: root-Branch
   * 3 org.apache.commons.collections4.list.LazyList.get(I)Ljava/lang/Object;: I10 Branch 2 IF_ICMPGE L113 - false
   * 4 org.apache.commons.collections4.list.LazyList.<init>(Ljava/util/List;Lorg/apache/commons/collections4/Factory;)V: I8 Branch 1 IFNONNULL L92 - true
   */

  @Test
  public void test4()  throws Throwable  {
		fr.inria.diversify.sosie.logger.LogWriter.writeTestStart(354,"org.apache.commons.collections4.list.LazyListEvoSuiteTest.test4");
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      linkedList0.add((Object) null);
      Factory<Object> factory0 = ExceptionFactory.INSTANCE;
      LazyList<Object> lazyList0 = LazyList.lazyList((List<Object>) linkedList0, (Factory<?>) factory0);
      // Undeclared exception!
      try {
        lazyList0.get(0);
        fail("Expecting exception: FunctorException");
      
      } catch(FunctorException e) {
         //
         // ExceptionFactory invoked
         //
      }
  }
}
