/*
 * This file was automatically generated by EvoSuite
 */

package org.apache.commons.collections4.list;

import org.junit.Test;
import static org.junit.Assert.*;
import java.util.Collection;
import java.util.Iterator;
import java.util.LinkedList;
import java.util.List;
import java.util.ListIterator;
import org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap;
import org.apache.commons.collections4.collection.UnmodifiableCollection;
import org.apache.commons.collections4.iterators.UnmodifiableIterator;
import org.apache.commons.collections4.keyvalue.UnmodifiableMapEntry;
import org.apache.commons.collections4.list.UnmodifiableList;
import org.apache.commons.collections4.map.UnmodifiableOrderedMap;
import org.apache.commons.collections4.set.UnmodifiableSet;
import org.junit.BeforeClass;

public class UnmodifiableListEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.setLoggingForJUnit(); 
  } 


  //Test case number: 0
  /*
   * 2 covered goals:
   * 1 org.apache.commons.collections4.list.UnmodifiableList.addAll(Ljava/util/Collection;)Z: root-Branch
   * 2 org.apache.commons.collections4.list.UnmodifiableList.<init>(Ljava/util/List;)V: root-Branch
   */

  @Test
  public void test0()  throws Throwable  {
		fr.inria.diversify.sosie.logger.LogWriter.writeTestStart(412,"org.apache.commons.collections4.list.UnmodifiableListEvoSuiteTest.test0");
      LinkedList<UnmodifiableIterator<String>> linkedList0 = new LinkedList<UnmodifiableIterator<String>>();
      UnmodifiableList<UnmodifiableIterator<String>> unmodifiableList0 = new UnmodifiableList<UnmodifiableIterator<String>>((List<UnmodifiableIterator<String>>) linkedList0);
      // Undeclared exception!
      try {
        unmodifiableList0.addAll((Collection<? extends UnmodifiableIterator<String>>) linkedList0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 1
  /*
   * 1 covered goal:
   * 1 org.apache.commons.collections4.list.UnmodifiableList.retainAll(Ljava/util/Collection;)Z: root-Branch
   */

  @Test
  public void test1()  throws Throwable  {
		fr.inria.diversify.sosie.logger.LogWriter.writeTestStart(413,"org.apache.commons.collections4.list.UnmodifiableListEvoSuiteTest.test1");
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      LinkedList<UnmodifiableCollection<Object>> linkedList1 = new LinkedList<UnmodifiableCollection<Object>>();
      UnmodifiableList<UnmodifiableCollection<Object>> unmodifiableList0 = new UnmodifiableList<UnmodifiableCollection<Object>>((List<UnmodifiableCollection<Object>>) linkedList1);
      // Undeclared exception!
      try {
        unmodifiableList0.retainAll((Collection<?>) linkedList0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 2
  /*
   * 1 covered goal:
   * 1 org.apache.commons.collections4.list.UnmodifiableList.add(ILjava/lang/Object;)V: root-Branch
   */

  @Test
  public void test2()  throws Throwable  {
		fr.inria.diversify.sosie.logger.LogWriter.writeTestStart(414,"org.apache.commons.collections4.list.UnmodifiableListEvoSuiteTest.test2");
      LinkedList<String> linkedList0 = new LinkedList<String>();
      LinkedList<UnmodifiableList<String>> linkedList1 = new LinkedList<UnmodifiableList<String>>();
      UnmodifiableList<UnmodifiableList<String>> unmodifiableList0 = new UnmodifiableList<UnmodifiableList<String>>((List<UnmodifiableList<String>>) linkedList1);
      UnmodifiableList<String> unmodifiableList1 = new UnmodifiableList<String>((List<String>) linkedList0);
      // Undeclared exception!
      try {
        unmodifiableList0.add(16, unmodifiableList1);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 3
  /*
   * 1 covered goal:
   * 1 org.apache.commons.collections4.list.UnmodifiableList.subList(II)Ljava/util/List;: root-Branch
   */

  @Test
  public void test3()  throws Throwable  {
		fr.inria.diversify.sosie.logger.LogWriter.writeTestStart(415,"org.apache.commons.collections4.list.UnmodifiableListEvoSuiteTest.test3");
      LinkedList<UnmodifiableMapEntry<Object, String>> linkedList0 = new LinkedList<UnmodifiableMapEntry<Object, String>>();
      UnmodifiableList<UnmodifiableMapEntry<Object, String>> unmodifiableList0 = new UnmodifiableList<UnmodifiableMapEntry<Object, String>>((List<UnmodifiableMapEntry<Object, String>>) linkedList0);
      // Undeclared exception!
      try {
        unmodifiableList0.subList(1958, 1958);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // toIndex = 1958
         //
      }
  }

  //Test case number: 4
  /*
   * 1 covered goal:
   * 1 org.apache.commons.collections4.list.UnmodifiableList.listIterator()Ljava/util/ListIterator;: root-Branch
   */

  @Test
  public void test4()  throws Throwable  {
		fr.inria.diversify.sosie.logger.LogWriter.writeTestStart(416,"org.apache.commons.collections4.list.UnmodifiableListEvoSuiteTest.test4");
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      UnmodifiableList<Integer> unmodifiableList0 = new UnmodifiableList<Integer>((List<Integer>) linkedList0);
      ListIterator<Integer> listIterator0 = unmodifiableList0.listIterator();
      assertEquals(false, listIterator0.hasNext());
  }

  //Test case number: 5
  /*
   * 1 covered goal:
   * 1 org.apache.commons.collections4.list.UnmodifiableList.iterator()Ljava/util/Iterator;: root-Branch
   */

  @Test
  public void test5()  throws Throwable  {
		fr.inria.diversify.sosie.logger.LogWriter.writeTestStart(417,"org.apache.commons.collections4.list.UnmodifiableListEvoSuiteTest.test5");
      LinkedList<UnmodifiableCollection<Object>> linkedList0 = new LinkedList<UnmodifiableCollection<Object>>();
      UnmodifiableList<UnmodifiableCollection<Object>> unmodifiableList0 = new UnmodifiableList<UnmodifiableCollection<Object>>((List<UnmodifiableCollection<Object>>) linkedList0);
      Iterator<UnmodifiableCollection<Object>> iterator0 = unmodifiableList0.iterator();
      assertEquals(false, iterator0.hasNext());
  }

  //Test case number: 6
  /*
   * 1 covered goal:
   * 1 org.apache.commons.collections4.list.UnmodifiableList.removeAll(Ljava/util/Collection;)Z: root-Branch
   */

  @Test
  public void test6()  throws Throwable  {
		fr.inria.diversify.sosie.logger.LogWriter.writeTestStart(418,"org.apache.commons.collections4.list.UnmodifiableListEvoSuiteTest.test6");
      LinkedList<UnmodifiableSortedBidiMap<Object, Integer>> linkedList0 = new LinkedList<UnmodifiableSortedBidiMap<Object, Integer>>();
      UnmodifiableList<UnmodifiableSortedBidiMap<Object, Integer>> unmodifiableList0 = new UnmodifiableList<UnmodifiableSortedBidiMap<Object, Integer>>((List<UnmodifiableSortedBidiMap<Object, Integer>>) linkedList0);
      // Undeclared exception!
      try {
        unmodifiableList0.removeAll((Collection<?>) linkedList0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 7
  /*
   * 1 covered goal:
   * 1 org.apache.commons.collections4.list.UnmodifiableList.clear()V: root-Branch
   */

  @Test
  public void test7()  throws Throwable  {
		fr.inria.diversify.sosie.logger.LogWriter.writeTestStart(419,"org.apache.commons.collections4.list.UnmodifiableListEvoSuiteTest.test7");
      LinkedList<UnmodifiableSet<Integer>> linkedList0 = new LinkedList<UnmodifiableSet<Integer>>();
      UnmodifiableList<UnmodifiableSet<Integer>> unmodifiableList0 = new UnmodifiableList<UnmodifiableSet<Integer>>((List<UnmodifiableSet<Integer>>) linkedList0);
      // Undeclared exception!
      try {
        unmodifiableList0.clear();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 8
  /*
   * 1 covered goal:
   * 1 org.apache.commons.collections4.list.UnmodifiableList.remove(I)Ljava/lang/Object;: root-Branch
   */

  @Test
  public void test8()  throws Throwable  {
		fr.inria.diversify.sosie.logger.LogWriter.writeTestStart(420,"org.apache.commons.collections4.list.UnmodifiableListEvoSuiteTest.test8");
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      UnmodifiableList<Object> unmodifiableList0 = new UnmodifiableList<Object>((List<Object>) linkedList0);
      // Undeclared exception!
      try {
        unmodifiableList0.remove((-1316));
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 9
  /*
   * 3 covered goals:
   * 1 org.apache.commons.collections4.list.UnmodifiableList.unmodifiableList(Ljava/util/List;)Ljava/util/List;: I4 Branch 1 IFEQ L55 - false
   * 2 org.apache.commons.collections4.list.UnmodifiableList.<init>(Ljava/util/List;)V: root-Branch
   * 3 org.apache.commons.collections4.list.UnmodifiableList.unmodifiableList(Ljava/util/List;)Ljava/util/List;: I4 Branch 1 IFEQ L55 - true
   */

  @Test
  public void test9()  throws Throwable  {
		fr.inria.diversify.sosie.logger.LogWriter.writeTestStart(421,"org.apache.commons.collections4.list.UnmodifiableListEvoSuiteTest.test9");
      LinkedList<UnmodifiableOrderedMap<Object, Object>> linkedList0 = new LinkedList<UnmodifiableOrderedMap<Object, Object>>();
      List<UnmodifiableOrderedMap<Object, Object>> list0 = UnmodifiableList.unmodifiableList((List<UnmodifiableOrderedMap<Object, Object>>) linkedList0);
      List<UnmodifiableOrderedMap<Object, Object>> list1 = UnmodifiableList.unmodifiableList(list0);
      assertEquals(0, list1.size());
  }
}
