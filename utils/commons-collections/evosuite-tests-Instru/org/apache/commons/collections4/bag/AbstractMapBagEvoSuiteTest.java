/*
 * This file was automatically generated by EvoSuite
 */

package org.apache.commons.collections4.bag;

import org.junit.Test;
import static org.junit.Assert.*;
import java.util.Collection;
import java.util.Set;
import org.apache.commons.collections4.bag.HashBag;
import org.apache.commons.collections4.bag.TransformedBag;
import org.apache.commons.collections4.bag.TreeBag;
import org.junit.BeforeClass;

public class AbstractMapBagEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.setLoggingForJUnit(); 
  } 


  //Test case number: 0
  /*
   * 2 covered goals:
   * 1 org.apache.commons.collections4.bag.AbstractMapBag.contains(Ljava/lang/Object;)Z: root-Branch
   * 2 org.apache.commons.collections4.bag.AbstractMapBag.<init>(Ljava/util/Map;)V: root-Branch
   */

  @Test
  public void test0()  throws Throwable  {
		fr.inria.diversify.sosie.logger.LogWriter.writeTestStart(1067,"org.apache.commons.collections4.bag.AbstractMapBagEvoSuiteTest.test0");
      TreeBag<String> treeBag0 = new TreeBag<String>();
      Object object0 = new Object();
      boolean boolean0 = treeBag0.contains(object0);
      assertEquals(true, boolean0);
  }

  //Test case number: 1
  /*
   * 1 covered goal:
   * 1 org.apache.commons.collections4.bag.AbstractMapBag.clear()V: root-Branch
   */

  @Test
  public void test1()  throws Throwable  {
		fr.inria.diversify.sosie.logger.LogWriter.writeTestStart(1068,"org.apache.commons.collections4.bag.AbstractMapBagEvoSuiteTest.test1");
      TreeBag<HashBag<Integer>> treeBag0 = new TreeBag<HashBag<Integer>>();
      treeBag0.clear();
      assertEquals(0, treeBag0.size());
  }

  //Test case number: 2
  /*
   * 25 covered goals:
   * 1 org.apache.commons.collections4.bag.AbstractMapBag.getCount(Ljava/lang/Object;)I: I11 Branch 10 IFNULL L111 - true
   * 2 org.apache.commons.collections4.bag.AbstractMapBag.getCount(Ljava/lang/Object;)I: I11 Branch 10 IFNULL L111 - false
   * 3 org.apache.commons.collections4.bag.AbstractMapBag$BagIterator.hasNext()Z: I8 Branch 2 IFEQ L197 - false
   * 4 org.apache.commons.collections4.bag.AbstractMapBag$BagIterator.next()Ljava/lang/Object;: I7 Branch 3 IF_ICMPEQ L202 - true
   * 5 org.apache.commons.collections4.bag.AbstractMapBag$BagIterator.next()Ljava/lang/Object;: I18 Branch 4 IFNE L205 - false
   * 6 org.apache.commons.collections4.bag.AbstractMapBag.addAll(Ljava/util/Collection;)Z: I13 Branch 16 IFEQ L275 - false
   * 7 org.apache.commons.collections4.bag.AbstractMapBag.addAll(Ljava/util/Collection;)Z: I24 Branch 17 IFNE L277 - false
   * 8 org.apache.commons.collections4.bag.AbstractMapBag.addAll(Ljava/util/Collection;)Z: I26 Branch 18 IFEQ L277 - false
   * 9 org.apache.commons.collections4.bag.AbstractMapBag.retainAll(Lorg/apache/commons/collections4/Bag;)Z: I20 Branch 28 IFEQ L380 - false
   * 10 org.apache.commons.collections4.bag.AbstractMapBag.retainAll(Lorg/apache/commons/collections4/Bag;)Z: I42 Branch 29 IF_ICMPGT L384 - true
   * 11 org.apache.commons.collections4.bag.AbstractMapBag.isEmpty()Z: root-Branch
   * 12 org.apache.commons.collections4.bag.AbstractMapBag.retainAll(Ljava/util/Collection;)Z: I4 Branch 27 IFEQ L362 - false
   * 13 org.apache.commons.collections4.bag.AbstractMapBag.retainAll(Lorg/apache/commons/collections4/Bag;)Z: I20 Branch 28 IFEQ L380 - true
   * 14 org.apache.commons.collections4.bag.AbstractMapBag.retainAll(Lorg/apache/commons/collections4/Bag;)Z: I70 Branch 31 IFNE L390 - true
   * 15 org.apache.commons.collections4.bag.AbstractMapBag.add(Ljava/lang/Object;)Z: root-Branch
   * 16 org.apache.commons.collections4.bag.AbstractMapBag.getMap()Ljava/util/Map;: root-Branch
   * 17 org.apache.commons.collections4.bag.AbstractMapBag.iterator()Ljava/util/Iterator;: root-Branch
   * 18 org.apache.commons.collections4.bag.AbstractMapBag.add(Ljava/lang/Object;I)Z: I11 Branch 14 IFLE L253 - false
   * 19 org.apache.commons.collections4.bag.AbstractMapBag.add(Ljava/lang/Object;I)Z: I31 Branch 15 IFNONNULL L256 - false
   * 20 org.apache.commons.collections4.bag.AbstractMapBag.uniqueSet()Ljava/util/Set;: I4 Branch 38 IFNONNULL L488 - false
   * 21 org.apache.commons.collections4.bag.AbstractMapBag.addAll(Ljava/util/Collection;)Z: I13 Branch 16 IFEQ L275 - true
   * 22 org.apache.commons.collections4.bag.AbstractMapBag$MutableInteger.<init>(I)V: root-Branch
   * 23 org.apache.commons.collections4.bag.AbstractMapBag$BagIterator.<init>(Lorg/apache/commons/collections4/bag/AbstractMapBag;)V: root-Branch
   * 24 org.apache.commons.collections4.bag.AbstractMapBag$BagIterator.hasNext()Z: I4 Branch 1 IFGT L197 - false
   * 25 org.apache.commons.collections4.bag.AbstractMapBag$BagIterator.hasNext()Z: I8 Branch 2 IFEQ L197 - true
   */

  @Test
  public void test2()  throws Throwable  {
		fr.inria.diversify.sosie.logger.LogWriter.writeTestStart(1069,"org.apache.commons.collections4.bag.AbstractMapBagEvoSuiteTest.test2");
      TreeBag<HashBag<Integer>> treeBag0 = new TreeBag<HashBag<Integer>>();
      TreeBag<String> treeBag1 = new TreeBag<String>();
      treeBag1.add("[]");
      HashBag<Object> hashBag0 = new HashBag<Object>((Collection<?>) treeBag1);
      boolean boolean0 = hashBag0.retainAll((Collection<?>) treeBag0);
      assertEquals(1, treeBag1.size());
      assertEquals(false, boolean0);
  }

  //Test case number: 3
  /*
   * 2 covered goals:
   * 1 org.apache.commons.collections4.bag.AbstractMapBag.containsAll(Ljava/util/Collection;)Z: I4 Branch 11 IFEQ L136 - false
   * 2 org.apache.commons.collections4.bag.AbstractMapBag.containsAll(Lorg/apache/commons/collections4/Bag;)Z: I10 Branch 12 IFEQ L151 - true
   */

  @Test
  public void test3()  throws Throwable  {
		fr.inria.diversify.sosie.logger.LogWriter.writeTestStart(1070,"org.apache.commons.collections4.bag.AbstractMapBagEvoSuiteTest.test3");
      HashBag<Integer> hashBag0 = new HashBag<Integer>();
      HashBag<TreeBag<Integer>> hashBag1 = new HashBag<TreeBag<Integer>>();
      boolean boolean0 = hashBag0.containsAll((Collection<?>) hashBag1);
      assertEquals(true, boolean0);
  }

  //Test case number: 4
  /*
   * 7 covered goals:
   * 1 org.apache.commons.collections4.bag.AbstractMapBag.toArray()[Ljava/lang/Object;: I21 Branch 32 IFEQ L436 - false
   * 2 org.apache.commons.collections4.bag.AbstractMapBag.toArray()[Ljava/lang/Object;: I35 Branch 33 IFLE L438 - true
   * 3 org.apache.commons.collections4.bag.AbstractMapBag.toArray()[Ljava/lang/Object;: I35 Branch 33 IFLE L438 - false
   * 4 org.apache.commons.collections4.bag.AbstractMapBag.getMap()Ljava/util/Map;: root-Branch
   * 5 org.apache.commons.collections4.bag.AbstractMapBag.getCount(Ljava/lang/Object;)I: I11 Branch 10 IFNULL L111 - false
   * 6 org.apache.commons.collections4.bag.AbstractMapBag.toArray()[Ljava/lang/Object;: I21 Branch 32 IFEQ L436 - true
   * 7 org.apache.commons.collections4.bag.AbstractMapBag.size()I: root-Branch
   */

  @Test
  public void test4()  throws Throwable  {
		fr.inria.diversify.sosie.logger.LogWriter.writeTestStart(1071,"org.apache.commons.collections4.bag.AbstractMapBagEvoSuiteTest.test4");
      TreeBag<String> treeBag0 = new TreeBag<String>();
      treeBag0.add("[]");
      HashBag<Object> hashBag0 = new HashBag<Object>((Collection<?>) treeBag0);
      hashBag0.toArray();
      assertEquals(true, treeBag0.isEmpty());
      assertEquals("[1:[]]", treeBag0.toString());
  }

  //Test case number: 5
  /*
   * 7 covered goals:
   * 1 org.apache.commons.collections4.bag.AbstractMapBag.equals(Ljava/lang/Object;)Z: I4 Branch 41 IF_ACMPNE L539 - false
   * 2 org.apache.commons.collections4.bag.AbstractMapBag.equals(Ljava/lang/Object;)Z: I13 Branch 42 IFNE L542 - true
   * 3 org.apache.commons.collections4.bag.AbstractMapBag.equals(Ljava/lang/Object;)Z: I29 Branch 43 IF_ICMPEQ L546 - true
   * 4 org.apache.commons.collections4.bag.AbstractMapBag.equals(Ljava/lang/Object;)Z: I44 Branch 44 IFEQ L549 - true
   * 5 org.apache.commons.collections4.bag.AbstractMapBag.add(Ljava/lang/Object;I)Z: I31 Branch 15 IFNONNULL L256 - true
   * 6 org.apache.commons.collections4.bag.AbstractMapBag.uniqueSet()Ljava/util/Set;: I4 Branch 38 IFNONNULL L488 - false
   * 7 org.apache.commons.collections4.bag.AbstractMapBag.hashCode()I: I14 Branch 46 IFEQ L569 - true
   */

  @Test
  public void test5()  throws Throwable  {
		fr.inria.diversify.sosie.logger.LogWriter.writeTestStart(1072,"org.apache.commons.collections4.bag.AbstractMapBagEvoSuiteTest.test5");
      HashBag<Integer> hashBag0 = new HashBag<Integer>();
      HashBag<HashBag<Integer>> hashBag1 = new HashBag<HashBag<Integer>>();
      Set<Integer> set0 = hashBag0.uniqueSet();
      HashBag<Integer> hashBag2 = new HashBag<Integer>((Collection<? extends Integer>) set0);
      hashBag1.add(hashBag2);
      boolean boolean0 = hashBag1.add(hashBag0);
      assertEquals(true, hashBag1.isEmpty());
      assertEquals(false, boolean0);
  }

  //Test case number: 6
  /*
   * 18 covered goals:
   * 1 org.apache.commons.collections4.bag.AbstractMapBag.hashCode()I: I14 Branch 46 IFEQ L569 - false
   * 2 org.apache.commons.collections4.bag.AbstractMapBag.hashCode()I: I34 Branch 47 IFNONNULL L572 - true
   * 3 org.apache.commons.collections4.bag.AbstractMapBag.add(Ljava/lang/Object;)Z: root-Branch
   * 4 org.apache.commons.collections4.bag.AbstractMapBag.iterator()Ljava/util/Iterator;: root-Branch
   * 5 org.apache.commons.collections4.bag.AbstractMapBag.add(Ljava/lang/Object;I)Z: I11 Branch 14 IFLE L253 - false
   * 6 org.apache.commons.collections4.bag.AbstractMapBag.add(Ljava/lang/Object;I)Z: I31 Branch 15 IFNONNULL L256 - false
   * 7 org.apache.commons.collections4.bag.AbstractMapBag.hashCode()I: I14 Branch 46 IFEQ L569 - true
   * 8 org.apache.commons.collections4.bag.AbstractMapBag.addAll(Ljava/util/Collection;)Z: I13 Branch 16 IFEQ L275 - true
   * 9 org.apache.commons.collections4.bag.AbstractMapBag.addAll(Ljava/util/Collection;)Z: I13 Branch 16 IFEQ L275 - false
   * 10 org.apache.commons.collections4.bag.AbstractMapBag.addAll(Ljava/util/Collection;)Z: I24 Branch 17 IFNE L277 - false
   * 11 org.apache.commons.collections4.bag.AbstractMapBag.addAll(Ljava/util/Collection;)Z: I26 Branch 18 IFEQ L277 - false
   * 12 org.apache.commons.collections4.bag.AbstractMapBag$MutableInteger.<init>(I)V: root-Branch
   * 13 org.apache.commons.collections4.bag.AbstractMapBag$BagIterator.<init>(Lorg/apache/commons/collections4/bag/AbstractMapBag;)V: root-Branch
   * 14 org.apache.commons.collections4.bag.AbstractMapBag$BagIterator.hasNext()Z: I4 Branch 1 IFGT L197 - false
   * 15 org.apache.commons.collections4.bag.AbstractMapBag$BagIterator.hasNext()Z: I8 Branch 2 IFEQ L197 - true
   * 16 org.apache.commons.collections4.bag.AbstractMapBag$BagIterator.hasNext()Z: I8 Branch 2 IFEQ L197 - false
   * 17 org.apache.commons.collections4.bag.AbstractMapBag$BagIterator.next()Ljava/lang/Object;: I7 Branch 3 IF_ICMPEQ L202 - true
   * 18 org.apache.commons.collections4.bag.AbstractMapBag$BagIterator.next()Ljava/lang/Object;: I18 Branch 4 IFNE L205 - false
   */

  @Test
  public void test6()  throws Throwable  {
		fr.inria.diversify.sosie.logger.LogWriter.writeTestStart(1073,"org.apache.commons.collections4.bag.AbstractMapBagEvoSuiteTest.test6");
      HashBag<HashBag<Object>> hashBag0 = new HashBag<HashBag<Object>>();
      HashBag<Object> hashBag1 = new HashBag<Object>((Collection<?>) hashBag0);
      hashBag0.add(hashBag1);
      HashBag<Object> hashBag2 = new HashBag<Object>((Collection<?>) hashBag0);
      boolean boolean0 = hashBag0.add(hashBag2);
      assertEquals(true, hashBag0.isEmpty());
      assertEquals(true, boolean0);
  }

  //Test case number: 7
  /*
   * 3 covered goals:
   * 1 org.apache.commons.collections4.bag.AbstractMapBag.toString()Ljava/lang/String;: I4 Branch 48 IFNE L584 - false
   * 2 org.apache.commons.collections4.bag.AbstractMapBag.<init>(Ljava/util/Map;)V: root-Branch
   * 3 org.apache.commons.collections4.bag.AbstractMapBag.size()I: root-Branch
   */

  @Test
  public void test7()  throws Throwable  {
		fr.inria.diversify.sosie.logger.LogWriter.writeTestStart(1074,"org.apache.commons.collections4.bag.AbstractMapBagEvoSuiteTest.test7");
      TreeBag<TransformedBag<Object>> treeBag0 = new TreeBag<TransformedBag<Object>>();
      String string0 = treeBag0.toString();
      assertEquals(0, treeBag0.size());
      assertEquals("[]", string0);
  }
}
