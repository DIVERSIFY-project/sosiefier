/*
 * This file was automatically generated by EvoSuite
 */

package org.apache.commons.collections4.bidimap;

import org.junit.Test;
import static org.junit.Assert.*;
import java.util.Map;
import org.apache.commons.collections4.BidiMap;
import org.apache.commons.collections4.bidimap.DualLinkedHashBidiMap;
import org.junit.BeforeClass;

public class DualLinkedHashBidiMapEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.setLoggingForJUnit(); 
  } 


  //Test case number: 0
  /*
   * 3 covered goals:
   * 1 org.apache.commons.collections4.bidimap.DualLinkedHashBidiMap.<init>(Ljava/util/Map;Ljava/util/Map;Lorg/apache/commons/collections4/BidiMap;)V: root-Branch
   * 2 org.apache.commons.collections4.bidimap.DualLinkedHashBidiMap.createBidiMap(Ljava/util/Map;Ljava/util/Map;Lorg/apache/commons/collections4/BidiMap;)Lorg/apache/commons/collections4/BidiMap;: root-Branch
   * 3 org.apache.commons.collections4.bidimap.DualLinkedHashBidiMap.<init>()V: root-Branch
   */

  @Test
  public void test0()  throws Throwable  {
		fr.inria.diversify.sosie.logger.LogWriter.writeTestStart(1029,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapEvoSuiteTest.test0");
      DualLinkedHashBidiMap<Object, Integer> dualLinkedHashBidiMap0 = new DualLinkedHashBidiMap<Object, Integer>();
      BidiMap<Integer, Object> bidiMap0 = dualLinkedHashBidiMap0.inverseBidiMap();
      assertEquals(0, bidiMap0.size());
  }

  //Test case number: 1
  /*
   * 1 covered goal:
   * 1 org.apache.commons.collections4.bidimap.DualLinkedHashBidiMap.<init>(Ljava/util/Map;)V: root-Branch
   */

  @Test
  public void test1()  throws Throwable  {
		fr.inria.diversify.sosie.logger.LogWriter.writeTestStart(1030,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapEvoSuiteTest.test1");
      DualLinkedHashBidiMap<Integer, Object> dualLinkedHashBidiMap0 = null;
      try {
        dualLinkedHashBidiMap0 = new DualLinkedHashBidiMap<Integer, Object>((Map<Integer, Object>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}
