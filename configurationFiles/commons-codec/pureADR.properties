project=../commons-codec
result=fse/sosie/commons-codec/codec
jacoco=configurationFiles/commons-codec/fse.exec
coverage.class=org.apache.commons.codec.binary.Base64
javaVersion=6
nbRun=10
timeOut=-1
runner=simple
transformation.type=pureadr
transformation.subtype=true
gitRepository=repo
amplifiedTestDir=configurationFiles/commons-codec/ap
compare.originalLog=../log/commons-codec
compare.filter=configurationFiles/commons-codec/codec-filter
copy.sosie.sources.to=tmpDir/sosie
pureMethods=org.apache.commons.codec.Charsets.toCharset(java.lang.String) org.apache.commons.codec.Charsets.toCharset(java.nio.charset.Charset) org.apache.commons.codec.DecoderException.DecoderException() org.apache.commons.codec.DecoderException.DecoderException(java.lang.String) org.apache.commons.codec.EncoderException.EncoderException() org.apache.commons.codec.EncoderException.EncoderException(java.lang.String) org.apache.commons.codec.StringEncoderComparator.StringEncoderComparator() org.apache.commons.codec.binary.Base32.Base32() org.apache.commons.codec.binary.Base32.Base32(boolean) org.apache.commons.codec.binary.Base32.Base32(boolean,byte) org.apache.commons.codec.binary.Base32.Base32(byte) org.apache.commons.codec.binary.Base32.Base32(int) org.apache.commons.codec.binary.Base32.Base32(int,byte[]) org.apache.commons.codec.binary.Base32.Base32(int,byte[],boolean) org.apache.commons.codec.binary.Base32.Base32(int,byte[],boolean,byte) org.apache.commons.codec.binary.Base32.isInAlphabet(byte) org.apache.commons.codec.binary.Base64.Base64() org.apache.commons.codec.binary.Base64.Base64(boolean) org.apache.commons.codec.binary.Base64.Base64(int) org.apache.commons.codec.binary.Base64.Base64(int,byte[]) org.apache.commons.codec.binary.Base64.Base64(int,byte[],boolean) org.apache.commons.codec.binary.Base64.decodeBase64(byte[]) org.apache.commons.codec.binary.Base64.decodeBase64(java.lang.String) org.apache.commons.codec.binary.Base64.encodeBase64(byte[]) org.apache.commons.codec.binary.Base64.encodeBase64(byte[],boolean) org.apache.commons.codec.binary.Base64.encodeBase64(byte[],boolean,boolean) org.apache.commons.codec.binary.Base64.encodeBase64(byte[],boolean,boolean,int) org.apache.commons.codec.binary.Base64.encodeBase64Chunked(byte[]) org.apache.commons.codec.binary.Base64.encodeBase64String(byte[]) org.apache.commons.codec.binary.Base64.encodeBase64URLSafe(byte[]) org.apache.commons.codec.binary.Base64.encodeBase64URLSafeString(byte[]) org.apache.commons.codec.binary.Base64.isArrayByteBase64(byte[]) org.apache.commons.codec.binary.Base64.isBase64(byte) org.apache.commons.codec.binary.Base64.isBase64(byte[]) org.apache.commons.codec.binary.Base64.isBase64(java.lang.String) org.apache.commons.codec.binary.Base64.isInAlphabet(byte) org.apache.commons.codec.binary.Base64.isUrlSafe() org.apache.commons.codec.binary.BaseNCodec$Context.Context() org.apache.commons.codec.binary.BaseNCodec$Context.toString() org.apache.commons.codec.binary.BaseNCodec.BaseNCodec(int,int,int,int) org.apache.commons.codec.binary.BaseNCodec.BaseNCodec(int,int,int,int,byte) org.apache.commons.codec.binary.BaseNCodec.available(org.apache.commons.codec.binary.BaseNCodec.Context) org.apache.commons.codec.binary.BaseNCodec.containsAlphabetOrPad(byte[]) org.apache.commons.codec.binary.BaseNCodec.decode(byte[]) org.apache.commons.codec.binary.BaseNCodec.decode(java.lang.Object) org.apache.commons.codec.binary.BaseNCodec.decode(java.lang.String) org.apache.commons.codec.binary.BaseNCodec.encode(byte[]) org.apache.commons.codec.binary.BaseNCodec.encode(byte[],int,int) org.apache.commons.codec.binary.BaseNCodec.encode(java.lang.Object) org.apache.commons.codec.binary.BaseNCodec.encodeAsString(byte[]) org.apache.commons.codec.binary.BaseNCodec.encodeToString(byte[]) org.apache.commons.codec.binary.BaseNCodec.getDefaultBufferSize() org.apache.commons.codec.binary.BaseNCodec.getEncodedLength(byte[]) org.apache.commons.codec.binary.BaseNCodec.hasData(org.apache.commons.codec.binary.BaseNCodec.Context) org.apache.commons.codec.binary.BaseNCodec.isInAlphabet(byte) org.apache.commons.codec.binary.BaseNCodec.isInAlphabet(byte[],boolean) org.apache.commons.codec.binary.BaseNCodec.isInAlphabet(java.lang.String) org.apache.commons.codec.binary.BaseNCodec.isWhiteSpace(byte) org.apache.commons.codec.binary.BaseNCodecInputStream.available() org.apache.commons.codec.binary.BaseNCodecInputStream.mark(int) org.apache.commons.codec.binary.BaseNCodecInputStream.markSupported() org.apache.commons.codec.binary.BaseNCodecInputStream.reset() org.apache.commons.codec.binary.BinaryCodec.decode(byte[]) org.apache.commons.codec.binary.BinaryCodec.decode(java.lang.Object) org.apache.commons.codec.binary.BinaryCodec.encode(byte[]) org.apache.commons.codec.binary.BinaryCodec.encode(java.lang.Object) org.apache.commons.codec.binary.BinaryCodec.fromAscii(byte[]) org.apache.commons.codec.binary.BinaryCodec.fromAscii(char[]) org.apache.commons.codec.binary.BinaryCodec.isEmpty(byte[]) org.apache.commons.codec.binary.BinaryCodec.toAsciiBytes(byte[]) org.apache.commons.codec.binary.BinaryCodec.toAsciiChars(byte[]) org.apache.commons.codec.binary.BinaryCodec.toAsciiString(byte[]) org.apache.commons.codec.binary.BinaryCodec.toByteArray(java.lang.String) org.apache.commons.codec.binary.CharSequenceUtils.regionMatches(java.lang.CharSequence,boolean,int,java.lang.CharSequence,int,int) org.apache.commons.codec.binary.Hex.Hex(java.lang.String) org.apache.commons.codec.binary.Hex.decodeHex(char[]) org.apache.commons.codec.binary.Hex.decodeHex(java.lang.String) org.apache.commons.codec.binary.Hex.encodeHex(byte[]) org.apache.commons.codec.binary.Hex.encodeHex(byte[],boolean) org.apache.commons.codec.binary.Hex.encodeHex(byte[],char[]) org.apache.commons.codec.binary.Hex.encodeHexString(byte[]) org.apache.commons.codec.binary.Hex.encodeHexString(byte[],boolean) org.apache.commons.codec.binary.Hex.getCharset() org.apache.commons.codec.binary.Hex.toDigit(char,int) org.apache.commons.codec.binary.Hex.toString() org.apache.commons.codec.binary.StringUtils.equals(java.lang.CharSequence,java.lang.CharSequence) org.apache.commons.codec.binary.StringUtils.getBytesUnchecked(java.lang.String,java.lang.String) org.apache.commons.codec.binary.StringUtils.newIllegalStateException(java.lang.String,java.io.UnsupportedEncodingException) org.apache.commons.codec.binary.StringUtils.newString(byte[],java.lang.String) org.apache.commons.codec.cli.Digest.main(java.lang.String[]) org.apache.commons.codec.cli.Digest.println(java.lang.String,byte[]) org.apache.commons.codec.cli.Digest.run(java.lang.String,java.lang.String) org.apache.commons.codec.cli.Digest.run(java.lang.String[]) org.apache.commons.codec.cli.Digest.toString() org.apache.commons.codec.digest.B64.getRandomSalt(int) org.apache.commons.codec.digest.Crypt.crypt(java.lang.String) org.apache.commons.codec.digest.DigestUtils.DigestUtils() org.apache.commons.codec.digest.DigestUtils.DigestUtils(java.lang.String) org.apache.commons.codec.digest.DigestUtils.getDigest(java.lang.String) org.apache.commons.codec.digest.DigestUtils.getDigest(java.lang.String,java.security.MessageDigest) org.apache.commons.codec.digest.DigestUtils.getMd2Digest() org.apache.commons.codec.digest.DigestUtils.getMd5Digest() org.apache.commons.codec.digest.DigestUtils.getMessageDigest() org.apache.commons.codec.digest.DigestUtils.getSha1Digest() org.apache.commons.codec.digest.DigestUtils.getSha256Digest() org.apache.commons.codec.digest.DigestUtils.getSha384Digest() org.apache.commons.codec.digest.DigestUtils.getSha512Digest() org.apache.commons.codec.digest.DigestUtils.getShaDigest() org.apache.commons.codec.digest.DigestUtils.isAvailable(java.lang.String) org.apache.commons.codec.digest.DigestUtils.md2(java.lang.String) org.apache.commons.codec.digest.DigestUtils.md2Hex(java.lang.String) org.apache.commons.codec.digest.DigestUtils.md5(java.lang.String) org.apache.commons.codec.digest.DigestUtils.md5Hex(java.lang.String) org.apache.commons.codec.digest.DigestUtils.sha(java.lang.String) org.apache.commons.codec.digest.DigestUtils.sha1(java.lang.String) org.apache.commons.codec.digest.DigestUtils.sha1Hex(java.lang.String) org.apache.commons.codec.digest.DigestUtils.sha256(java.lang.String) org.apache.commons.codec.digest.DigestUtils.sha256Hex(java.lang.String) org.apache.commons.codec.digest.DigestUtils.sha384(java.lang.String) org.apache.commons.codec.digest.DigestUtils.sha384Hex(java.lang.String) org.apache.commons.codec.digest.DigestUtils.sha512(java.lang.String) org.apache.commons.codec.digest.DigestUtils.sha512Hex(java.lang.String) org.apache.commons.codec.digest.DigestUtils.shaHex(java.lang.String) org.apache.commons.codec.digest.HmacAlgorithms.HmacAlgorithms(java.lang.String) org.apache.commons.codec.digest.HmacAlgorithms.getName() org.apache.commons.codec.digest.HmacAlgorithms.toString() org.apache.commons.codec.digest.HmacUtils.HmacUtils() org.apache.commons.codec.digest.HmacUtils.HmacUtils(java.lang.String,java.lang.String) org.apache.commons.codec.digest.HmacUtils.HmacUtils(org.apache.commons.codec.digest.HmacAlgorithms,java.lang.String) org.apache.commons.codec.digest.HmacUtils.hmacMd5(java.lang.String,java.lang.String) org.apache.commons.codec.digest.HmacUtils.hmacMd5Hex(java.lang.String,java.lang.String) org.apache.commons.codec.digest.HmacUtils.hmacSha1(java.lang.String,java.lang.String) org.apache.commons.codec.digest.HmacUtils.hmacSha1Hex(java.lang.String,java.lang.String) org.apache.commons.codec.digest.HmacUtils.hmacSha256(java.lang.String,java.lang.String) org.apache.commons.codec.digest.HmacUtils.hmacSha256Hex(java.lang.String,java.lang.String) org.apache.commons.codec.digest.HmacUtils.hmacSha384(java.lang.String,java.lang.String) org.apache.commons.codec.digest.HmacUtils.hmacSha384Hex(java.lang.String,java.lang.String) org.apache.commons.codec.digest.HmacUtils.hmacSha512(java.lang.String,java.lang.String) org.apache.commons.codec.digest.HmacUtils.hmacSha512Hex(java.lang.String,java.lang.String) org.apache.commons.codec.digest.HmacUtils.isAvailable(java.lang.String) org.apache.commons.codec.digest.HmacUtils.isAvailable(org.apache.commons.codec.digest.HmacAlgorithms) org.apache.commons.codec.digest.MessageDigestAlgorithms.MessageDigestAlgorithms() org.apache.commons.codec.digest.MessageDigestAlgorithms.values() org.apache.commons.codec.digest.PureJavaCrc32.PureJavaCrc32() org.apache.commons.codec.digest.PureJavaCrc32.getValue() org.apache.commons.codec.digest.PureJavaCrc32C.PureJavaCrc32C() org.apache.commons.codec.digest.PureJavaCrc32C.getValue() org.apache.commons.codec.digest.UnixCrypt.body(int[],int,int) org.apache.commons.codec.digest.UnixCrypt.byteToUnsigned(byte) org.apache.commons.codec.digest.UnixCrypt.crypt(byte[]) org.apache.commons.codec.digest.UnixCrypt.crypt(byte[],java.lang.String) org.apache.commons.codec.digest.UnixCrypt.dEncrypt(int,int,int,int,int,int[]) org.apache.commons.codec.digest.UnixCrypt.desSetKey(byte[]) org.apache.commons.codec.digest.UnixCrypt.fourBytesToInt(byte[],int) org.apache.commons.codec.digest.UnixCrypt.hPermOp(int,int,int) org.apache.commons.codec.language.AbstractCaverphone.AbstractCaverphone() org.apache.commons.codec.language.Caverphone.Caverphone() org.apache.commons.codec.language.Caverphone.caverphone(java.lang.String) org.apache.commons.codec.language.Caverphone.encode(java.lang.Object) org.apache.commons.codec.language.Caverphone.encode(java.lang.String) org.apache.commons.codec.language.Caverphone.isCaverphoneEqual(java.lang.String,java.lang.String) org.apache.commons.codec.language.ColognePhonetic$CologneBuffer.CologneBuffer(int) org.apache.commons.codec.language.ColognePhonetic$CologneBuffer.copyData(int,int) org.apache.commons.codec.language.ColognePhonetic$CologneBuffer.length() org.apache.commons.codec.language.ColognePhonetic$CologneBuffer.toString() org.apache.commons.codec.language.ColognePhonetic$CologneInputBuffer.copyData(int,int) org.apache.commons.codec.language.ColognePhonetic$CologneInputBuffer.getNextChar() org.apache.commons.codec.language.ColognePhonetic$CologneInputBuffer.getNextPos() org.apache.commons.codec.language.ColognePhonetic$CologneOutputBuffer.CologneOutputBuffer(int) org.apache.commons.codec.language.ColognePhonetic$CologneOutputBuffer.copyData(int,int) org.apache.commons.codec.language.ColognePhonetic.arrayContains(char[],char) org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String) org.apache.commons.codec.language.ColognePhonetic.encode(java.lang.String) org.apache.commons.codec.language.ColognePhonetic.isEncodeEqual(java.lang.String,java.lang.String) org.apache.commons.codec.language.DaitchMokotoffSoundex$1.compare(org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule,org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule) org.apache.commons.codec.language.DaitchMokotoffSoundex$Branch.Branch() org.apache.commons.codec.language.DaitchMokotoffSoundex$Branch.equals(java.lang.Object) org.apache.commons.codec.language.DaitchMokotoffSoundex$Branch.hashCode() org.apache.commons.codec.language.DaitchMokotoffSoundex$Branch.toString() org.apache.commons.codec.language.DaitchMokotoffSoundex$Rule.Rule(java.lang.String,java.lang.String,java.lang.String,java.lang.String) org.apache.commons.codec.language.DaitchMokotoffSoundex$Rule.getPatternLength() org.apache.commons.codec.language.DaitchMokotoffSoundex$Rule.getReplacements(java.lang.String,boolean) org.apache.commons.codec.language.DaitchMokotoffSoundex$Rule.isVowel(char) org.apache.commons.codec.language.DaitchMokotoffSoundex$Rule.matches(java.lang.String) org.apache.commons.codec.language.DaitchMokotoffSoundex$Rule.toString() org.apache.commons.codec.language.DaitchMokotoffSoundex.DaitchMokotoffSoundex() org.apache.commons.codec.language.DaitchMokotoffSoundex.DaitchMokotoffSoundex(boolean) org.apache.commons.codec.language.DaitchMokotoffSoundex.encode(java.lang.Object) org.apache.commons.codec.language.DaitchMokotoffSoundex.encode(java.lang.String) org.apache.commons.codec.language.DaitchMokotoffSoundex.soundex(java.lang.String) org.apache.commons.codec.language.DaitchMokotoffSoundex.stripQuotes(java.lang.String) org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult.DoubleMetaphoneResult(int) org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult.getAlternate() org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult.getPrimary() org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult.isComplete() org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphone() org.apache.commons.codec.language.DoubleMetaphone.charAt(java.lang.String,int) org.apache.commons.codec.language.DoubleMetaphone.conditionC0(java.lang.String,int) org.apache.commons.codec.language.DoubleMetaphone.conditionCH0(java.lang.String,int) org.apache.commons.codec.language.DoubleMetaphone.conditionCH1(java.lang.String,int) org.apache.commons.codec.language.DoubleMetaphone.conditionL0(java.lang.String,int) org.apache.commons.codec.language.DoubleMetaphone.conditionM0(java.lang.String,int) org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String,int,int,java.lang.String...) org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String) org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean) org.apache.commons.codec.language.DoubleMetaphone.encode(java.lang.Object) org.apache.commons.codec.language.DoubleMetaphone.encode(java.lang.String) org.apache.commons.codec.language.DoubleMetaphone.getMaxCodeLen() org.apache.commons.codec.language.DoubleMetaphone.isDoubleMetaphoneEqual(java.lang.String,java.lang.String) org.apache.commons.codec.language.DoubleMetaphone.isDoubleMetaphoneEqual(java.lang.String,java.lang.String,boolean) org.apache.commons.codec.language.DoubleMetaphone.isSilentStart(java.lang.String) org.apache.commons.codec.language.DoubleMetaphone.isSlavoGermanic(java.lang.String) org.apache.commons.codec.language.DoubleMetaphone.isVowel(char) org.apache.commons.codec.language.MatchRatingApproachEncoder.encode(java.lang.Object) org.apache.commons.codec.language.MatchRatingApproachEncoder.encode(java.lang.String) org.apache.commons.codec.language.MatchRatingApproachEncoder.getFirst3Last3(java.lang.String) org.apache.commons.codec.language.MatchRatingApproachEncoder.getMinRating(int) org.apache.commons.codec.language.MatchRatingApproachEncoder.isEncodeEquals(java.lang.String,java.lang.String) org.apache.commons.codec.language.MatchRatingApproachEncoder.isVowel(java.lang.String) org.apache.commons.codec.language.MatchRatingApproachEncoder.leftToRightThenRightToLeftProcessing(java.lang.String,java.lang.String) org.apache.commons.codec.language.MatchRatingApproachEncoder.removeAccents(java.lang.String) org.apache.commons.codec.language.MatchRatingApproachEncoder.removeVowels(java.lang.String) org.apache.commons.codec.language.Metaphone.Metaphone() org.apache.commons.codec.language.Metaphone.encode(java.lang.Object) org.apache.commons.codec.language.Metaphone.encode(java.lang.String) org.apache.commons.codec.language.Metaphone.getMaxCodeLen() org.apache.commons.codec.language.Metaphone.isLastChar(int,int) org.apache.commons.codec.language.Metaphone.isMetaphoneEqual(java.lang.String,java.lang.String) org.apache.commons.codec.language.Metaphone.isNextChar(java.lang.StringBuilder,int,char) org.apache.commons.codec.language.Metaphone.isPreviousChar(java.lang.StringBuilder,int,char) org.apache.commons.codec.language.Metaphone.isVowel(java.lang.StringBuilder,int) org.apache.commons.codec.language.Metaphone.regionMatch(java.lang.StringBuilder,int,java.lang.String) org.apache.commons.codec.language.Nysiis.Nysiis() org.apache.commons.codec.language.Nysiis.Nysiis(boolean) org.apache.commons.codec.language.Nysiis.encode(java.lang.Object) org.apache.commons.codec.language.Nysiis.encode(java.lang.String) org.apache.commons.codec.language.Nysiis.isStrict() org.apache.commons.codec.language.Nysiis.isVowel(char) org.apache.commons.codec.language.Nysiis.transcodeRemaining(char,char,char,char) org.apache.commons.codec.language.RefinedSoundex.RefinedSoundex(char[]) org.apache.commons.codec.language.RefinedSoundex.RefinedSoundex(java.lang.String) org.apache.commons.codec.language.RefinedSoundex.encode(java.lang.Object) org.apache.commons.codec.language.RefinedSoundex.encode(java.lang.String) org.apache.commons.codec.language.RefinedSoundex.getMappingCode(char) org.apache.commons.codec.language.RefinedSoundex.soundex(java.lang.String) org.apache.commons.codec.language.Soundex.Soundex(char[]) org.apache.commons.codec.language.Soundex.Soundex(java.lang.String) org.apache.commons.codec.language.Soundex.encode(java.lang.Object) org.apache.commons.codec.language.Soundex.encode(java.lang.String) org.apache.commons.codec.language.Soundex.getMaxLength() org.apache.commons.codec.language.Soundex.getSoundexMapping() org.apache.commons.codec.language.Soundex.map(char) org.apache.commons.codec.language.Soundex.soundex(java.lang.String) org.apache.commons.codec.language.SoundexUtils.differenceEncoded(java.lang.String,java.lang.String) org.apache.commons.codec.language.bm.BeiderMorseEncoder.encode(java.lang.Object) org.apache.commons.codec.language.bm.BeiderMorseEncoder.encode(java.lang.String) org.apache.commons.codec.language.bm.BeiderMorseEncoder.getNameType() org.apache.commons.codec.language.bm.BeiderMorseEncoder.getRuleType() org.apache.commons.codec.language.bm.BeiderMorseEncoder.isConcat() org.apache.commons.codec.language.bm.Lang.Lang(java.util.List<org.apache.commons.codec.language.bm.Lang.LangRule>,org.apache.commons.codec.language.bm.Languages) org.apache.commons.codec.language.bm.Languages$1.contains(java.lang.String) org.apache.commons.codec.language.bm.Languages$1.getAny() org.apache.commons.codec.language.bm.Languages$1.isEmpty() org.apache.commons.codec.language.bm.Languages$1.isSingleton() org.apache.commons.codec.language.bm.Languages$1.merge(org.apache.commons.codec.language.bm.Languages.LanguageSet) org.apache.commons.codec.language.bm.Languages$1.restrictTo(org.apache.commons.codec.language.bm.Languages.LanguageSet) org.apache.commons.codec.language.bm.Languages$1.toString() org.apache.commons.codec.language.bm.Languages$2.contains(java.lang.String) org.apache.commons.codec.language.bm.Languages$2.getAny() org.apache.commons.codec.language.bm.Languages$2.isEmpty() org.apache.commons.codec.language.bm.Languages$2.isSingleton() org.apache.commons.codec.language.bm.Languages$2.merge(org.apache.commons.codec.language.bm.Languages.LanguageSet) org.apache.commons.codec.language.bm.Languages$2.restrictTo(org.apache.commons.codec.language.bm.Languages.LanguageSet) org.apache.commons.codec.language.bm.Languages$2.toString() org.apache.commons.codec.language.bm.Languages$LanguageSet.contains(java.lang.String) org.apache.commons.codec.language.bm.Languages$LanguageSet.from(java.util.Set<java.lang.String>) org.apache.commons.codec.language.bm.Languages$LanguageSet.getAny() org.apache.commons.codec.language.bm.Languages$LanguageSet.isEmpty() org.apache.commons.codec.language.bm.Languages$LanguageSet.isSingleton() org.apache.commons.codec.language.bm.Languages$LanguageSet.merge(org.apache.commons.codec.language.bm.Languages.LanguageSet) org.apache.commons.codec.language.bm.Languages$LanguageSet.restrictTo(org.apache.commons.codec.language.bm.Languages.LanguageSet) org.apache.commons.codec.language.bm.Languages$SomeLanguages.SomeLanguages(java.util.Set<java.lang.String>) org.apache.commons.codec.language.bm.Languages$SomeLanguages.contains(java.lang.String) org.apache.commons.codec.language.bm.Languages$SomeLanguages.getAny() org.apache.commons.codec.language.bm.Languages$SomeLanguages.getLanguages() org.apache.commons.codec.language.bm.Languages$SomeLanguages.isEmpty() org.apache.commons.codec.language.bm.Languages$SomeLanguages.isSingleton() org.apache.commons.codec.language.bm.Languages$SomeLanguages.merge(org.apache.commons.codec.language.bm.Languages.LanguageSet) org.apache.commons.codec.language.bm.Languages$SomeLanguages.restrictTo(org.apache.commons.codec.language.bm.Languages.LanguageSet) org.apache.commons.codec.language.bm.Languages$SomeLanguages.toString() org.apache.commons.codec.language.bm.Languages.Languages(java.util.Set<java.lang.String>) org.apache.commons.codec.language.bm.Languages.getLanguages() org.apache.commons.codec.language.bm.Languages.langResourceName(org.apache.commons.codec.language.bm.NameType) org.apache.commons.codec.language.bm.NameType.NameType(java.lang.String) org.apache.commons.codec.language.bm.NameType.getName() org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder.PhonemeBuilder(org.apache.commons.codec.language.bm.Rule.Phoneme) org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder.empty(org.apache.commons.codec.language.bm.Languages.LanguageSet) org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder.getPhonemes() org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder.makeString() org.apache.commons.codec.language.bm.PhoneticEngine$RulesApplication.getI() org.apache.commons.codec.language.bm.PhoneticEngine$RulesApplication.getPhonemeBuilder() org.apache.commons.codec.language.bm.PhoneticEngine$RulesApplication.isFound() org.apache.commons.codec.language.bm.PhoneticEngine.PhoneticEngine(org.apache.commons.codec.language.bm.NameType,org.apache.commons.codec.language.bm.RuleType,boolean) org.apache.commons.codec.language.bm.PhoneticEngine.PhoneticEngine(org.apache.commons.codec.language.bm.NameType,org.apache.commons.codec.language.bm.RuleType,boolean,int) org.apache.commons.codec.language.bm.PhoneticEngine.getLang() org.apache.commons.codec.language.bm.PhoneticEngine.getMaxPhonemes() org.apache.commons.codec.language.bm.PhoneticEngine.getNameType() org.apache.commons.codec.language.bm.PhoneticEngine.getRuleType() org.apache.commons.codec.language.bm.PhoneticEngine.isConcat() org.apache.commons.codec.language.bm.PhoneticEngine.join(java.lang.Iterable<java.lang.String>,java.lang.String) org.apache.commons.codec.language.bm.Rule$1.isMatch(java.lang.CharSequence) org.apache.commons.codec.language.bm.Rule$2.(java.lang.String,java.lang.String,java.lang.String,org.apache.commons.codec.language.bm.Rule.PhonemeExpr) org.apache.commons.codec.language.bm.Rule$2.toString() org.apache.commons.codec.language.bm.Rule$3.isMatch(java.lang.CharSequence) org.apache.commons.codec.language.bm.Rule$4.isMatch(java.lang.CharSequence) org.apache.commons.codec.language.bm.Rule$5.isMatch(java.lang.CharSequence) org.apache.commons.codec.language.bm.Rule$6.isMatch(java.lang.CharSequence) org.apache.commons.codec.language.bm.Rule$7.isMatch(java.lang.CharSequence) org.apache.commons.codec.language.bm.Rule$8.isMatch(java.lang.CharSequence) org.apache.commons.codec.language.bm.Rule$9.isMatch(java.lang.CharSequence) org.apache.commons.codec.language.bm.Rule$Phoneme$1.compare(org.apache.commons.codec.language.bm.Rule.Phoneme,org.apache.commons.codec.language.bm.Rule.Phoneme) org.apache.commons.codec.language.bm.Rule$Phoneme.Phoneme(java.lang.CharSequence,org.apache.commons.codec.language.bm.Languages.LanguageSet) org.apache.commons.codec.language.bm.Rule$Phoneme.Phoneme(org.apache.commons.codec.language.bm.Rule.Phoneme,org.apache.commons.codec.language.bm.Rule.Phoneme) org.apache.commons.codec.language.bm.Rule$Phoneme.Phoneme(org.apache.commons.codec.language.bm.Rule.Phoneme,org.apache.commons.codec.language.bm.Rule.Phoneme,org.apache.commons.codec.language.bm.Languages.LanguageSet) org.apache.commons.codec.language.bm.Rule$Phoneme.getLanguages() org.apache.commons.codec.language.bm.Rule$Phoneme.getPhonemeText() org.apache.commons.codec.language.bm.Rule$Phoneme.join(org.apache.commons.codec.language.bm.Rule.Phoneme) org.apache.commons.codec.language.bm.Rule$Phoneme.mergeWithLanguage(org.apache.commons.codec.language.bm.Languages.LanguageSet) org.apache.commons.codec.language.bm.Rule$Phoneme.toString() org.apache.commons.codec.language.bm.Rule$PhonemeList.PhonemeList(java.util.List<org.apache.commons.codec.language.bm.Rule.Phoneme>) org.apache.commons.codec.language.bm.Rule$PhonemeList.getPhonemes() org.apache.commons.codec.language.bm.Rule.contains(java.lang.CharSequence,char) org.apache.commons.codec.language.bm.Rule.createResourceName(org.apache.commons.codec.language.bm.NameType,org.apache.commons.codec.language.bm.RuleType,java.lang.String) org.apache.commons.codec.language.bm.Rule.endsWith(java.lang.CharSequence,java.lang.CharSequence) org.apache.commons.codec.language.bm.Rule.getInstance(org.apache.commons.codec.language.bm.NameType,org.apache.commons.codec.language.bm.RuleType,java.lang.String) org.apache.commons.codec.language.bm.Rule.getInstance(org.apache.commons.codec.language.bm.NameType,org.apache.commons.codec.language.bm.RuleType,org.apache.commons.codec.language.bm.Languages.LanguageSet) org.apache.commons.codec.language.bm.Rule.getInstanceMap(org.apache.commons.codec.language.bm.NameType,org.apache.commons.codec.language.bm.RuleType,org.apache.commons.codec.language.bm.Languages.LanguageSet) org.apache.commons.codec.language.bm.Rule.getLContext() org.apache.commons.codec.language.bm.Rule.getPattern() org.apache.commons.codec.language.bm.Rule.getPhoneme() org.apache.commons.codec.language.bm.Rule.getRContext() org.apache.commons.codec.language.bm.Rule.parsePhoneme(java.lang.String) org.apache.commons.codec.language.bm.Rule.parsePhonemeExpr(java.lang.String) org.apache.commons.codec.language.bm.Rule.pattern(java.lang.String) org.apache.commons.codec.language.bm.Rule.startsWith(java.lang.CharSequence,java.lang.CharSequence) org.apache.commons.codec.language.bm.Rule.stripQuotes(java.lang.String) org.apache.commons.codec.language.bm.RuleType.RuleType(java.lang.String) org.apache.commons.codec.language.bm.RuleType.getName() org.apache.commons.codec.net.BCodec.BCodec(java.lang.String) org.apache.commons.codec.net.BCodec.decode(java.lang.Object) org.apache.commons.codec.net.BCodec.decode(java.lang.String) org.apache.commons.codec.net.BCodec.doDecoding(byte[]) org.apache.commons.codec.net.BCodec.doEncoding(byte[]) org.apache.commons.codec.net.BCodec.encode(java.lang.String,java.lang.String) org.apache.commons.codec.net.BCodec.getCharset() org.apache.commons.codec.net.BCodec.getEncoding() org.apache.commons.codec.net.QCodec.QCodec(java.lang.String) org.apache.commons.codec.net.QCodec.decode(java.lang.Object) org.apache.commons.codec.net.QCodec.decode(java.lang.String) org.apache.commons.codec.net.QCodec.doDecoding(byte[]) org.apache.commons.codec.net.QCodec.encode(java.lang.String,java.lang.String) org.apache.commons.codec.net.QCodec.getCharset() org.apache.commons.codec.net.QCodec.getEncoding() org.apache.commons.codec.net.QCodec.isEncodeBlanks() org.apache.commons.codec.net.QuotedPrintableCodec.QuotedPrintableCodec(java.lang.String) org.apache.commons.codec.net.QuotedPrintableCodec.decode(byte[]) org.apache.commons.codec.net.QuotedPrintableCodec.decode(java.lang.String,java.lang.String) org.apache.commons.codec.net.QuotedPrintableCodec.decodeQuotedPrintable(byte[]) org.apache.commons.codec.net.QuotedPrintableCodec.encode(java.lang.String,java.lang.String) org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(java.util.BitSet,byte[]) org.apache.commons.codec.net.QuotedPrintableCodec.getCharset() org.apache.commons.codec.net.QuotedPrintableCodec.getUnsignedOctet(int,byte[]) org.apache.commons.codec.net.QuotedPrintableCodec.isWhitespace(int) org.apache.commons.codec.net.RFC1522Codec.decodeText(java.lang.String) org.apache.commons.codec.net.RFC1522Codec.doDecoding(byte[]) org.apache.commons.codec.net.RFC1522Codec.encodeText(java.lang.String,java.lang.String) org.apache.commons.codec.net.RFC1522Codec.getEncoding() org.apache.commons.codec.net.URLCodec.URLCodec() org.apache.commons.codec.net.URLCodec.URLCodec(java.lang.String) org.apache.commons.codec.net.URLCodec.decode(byte[]) org.apache.commons.codec.net.URLCodec.decode(java.lang.Object) org.apache.commons.codec.net.URLCodec.decode(java.lang.String) org.apache.commons.codec.net.URLCodec.decode(java.lang.String,java.lang.String) org.apache.commons.codec.net.URLCodec.decodeUrl(byte[]) org.apache.commons.codec.net.URLCodec.encode(java.lang.Object) org.apache.commons.codec.net.URLCodec.encode(java.lang.String) org.apache.commons.codec.net.URLCodec.encode(java.lang.String,java.lang.String) org.apache.commons.codec.net.URLCodec.getDefaultCharset() org.apache.commons.codec.net.URLCodec.getEncoding() org.apache.commons.codec.net.Utils.digit16(byte)
