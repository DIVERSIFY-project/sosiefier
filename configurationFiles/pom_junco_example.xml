<?xml version="1.0" encoding="UTF-8"?>
<!--
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <parent>
    <groupId>org.apache.commons</groupId>
    <artifactId>commons-parent</artifactId>
    <version>32</version>
  </parent>
  <modelVersion>4.0.0</modelVersion>
  <groupId>org.apache.commons</groupId>
  <artifactId>commons-collections4</artifactId>
  <version>4.0</version>
  <name>Apache Commons Collections</name>

  <dependencies>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.11</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.easymock</groupId>
      <artifactId>easymock</artifactId>
      <version>3.2</version>
      <scope>test</scope>
    </dependency>
    
    <dependency>
        <groupId>fr.inria.juncoprovider</groupId>
        <artifactId>junco-provider</artifactId>
        <version>0.1</version>
    </dependency>

  </dependencies>

  <distributionManagement>
    <site>
      <id>apache.website</id>
      <name>Apache Commons Site</name>
      <url>${commons.deployment.protocol}://people.apache.org/www/commons.apache.org/${commons.componentid}</url>
    </site>
  </distributionManagement>

  <properties>
      <jacoco.it.execution.data.file>${project.build.directory}/coverage-reports/jacoco-it.exec
      </jacoco.it.execution.data.file>
      <jacoco.ut.execution.data.file>${project.build.directory}/coverage-reports/jacoco-ut.exec
      </jacoco.ut.execution.data.file>
      <jacoco.address>localhost</jacoco.address>
      <jacoco.port>6300</jacoco.port>

  <jdk.version>1.7</jdk.version>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <maven.compiler.source>1.7</maven.compiler.source>
    <maven.compiler.target>1.7</maven.compiler.target>
    
    <!--
       This is also  used to generate download_xxx file name.
       To override this when generating the download page:
       
       mvn commons:download-page -Dcommons.componentid=collections
       
       The above seems to change the download page name but not any other
       properties that depend on the componentid.
    -->
    <commons.componentid>collections4</commons.componentid>

    <!-- Current 4.x release series -->
    <commons.release.version>4.0</commons.release.version>
    <commons.release.desc>(Java 5.0+)</commons.release.desc>
    
    <!-- Previous 3.x release series -->
    <commons.release.2.version>3.2.1</commons.release.2.version>
    <commons.release.2.desc>(Requires Java 1.2 or later)</commons.release.2.desc>
    <!-- Override generated name -->
    <commons.release.2.name>commons-collections-${commons.release.2.version}</commons.release.2.name>
    
    <commons.jira.id>COLLECTIONS</commons.jira.id>
    <commons.jira.pid>12310465</commons.jira.pid>
    <!-- The RC version used in the staging repository URL. -->
    <commons.rc.version>RC5</commons.rc.version>
    <checkstyle.version>2.9.1</checkstyle.version>
    
    <commons.site.path>collections</commons.site.path>
    <commons.scmPubUrl>https://svn.apache.org/repos/infra/websites/production/commons/content/proper/commons-collections</commons.scmPubUrl>
    <commons.scmPubCheckoutDirectory>site-content</commons.scmPubCheckoutDirectory>
    
    <!-- Override javadoc plugin version due to a vulnerability of the generated javadoc
         see http://jira.codehaus.org/browse/MJAVADOC-370, remove after update to CP 32   -->
    <commons.javadoc.version>2.9.1</commons.javadoc.version>    
  </properties>


  <build>
    <plugins>
        <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-compiler-plugin</artifactId>
            <version>3.1</version>
            <configuration>
                <source>${maven.compiler.source}</source>
                <target>${maven.compiler.target}</target>
                <useIncrementalCompilation>false</useIncrementalCompilation>
            </configuration>
        </plugin>
        
        <plugin>
            <groupId>org.jacoco</groupId>
            <artifactId>jacoco-maven-plugin</artifactId>
            <version>0.7.1.201405082137</version>
            <executions>
                <!--
                 Prepares the property pointing to the JaCoCo runtime agent which
                 is passed as VM argument when the Surefire Maven plugin is executed.
                 -->
                <execution>
                    <id>pre-unit-test</id>
                    <goals> <goal>prepare-agent</goal> </goals>
                    <configuration>
                        <!--
                         Sets the name of the property containing the settings
                         for JaCoCo runtime agent.
                         -->
                        <propertyName>surefireArgLine</propertyName>
                        <!-- This is needed in order to Junco connecto to Jacoco-->
                        <output>tcpserver</output>
                    </configuration>
                </execution>
            </executions>
        </plugin>

        
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        
        <!-- Force use Junco provider -->
        <dependencies>
            <dependency>
                <groupId>fr.inria.juncoprovider</groupId>
                <artifactId>junco-provider</artifactId>
                <version>0.1</version>
            </dependency>
        </dependencies>
        
          <configuration>
              <!-- Properties of the Junco provier -->
              <properties>
                  <property>
                      <name>html:report</name>
                      <value>false</value>
                  </property>
                  <property>
                      <name>transplant:file</name>
                      <value>${basedir}/transplant.json</value>
                  </property>
                  <property>
                      <name>classes:dir</name>
                      <value>${basedir}/classes2/</value>
                  </property>
            
                  <property>
                      <name>stopAtFirstFailure</name>
                      <value>true</value>
                  </property>
                  <property>
                      <name>alwaysResetCoverageInformation</name>
                      <value>false</value>
                  </property>
              </properties>
              <!-- Sets the VM argument line used when unit tests are run. -->
              <argLine>${surefireArgLine}</argLine>
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-assembly-plugin</artifactId>
        <configuration>
          <descriptors>
            <descriptor>src/main/assembly/bin.xml</descriptor>
            <descriptor>src/main/assembly/src.xml</descriptor>
          </descriptors>
          <tarLongFileMode>gnu</tarLongFileMode>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-scm-publish-plugin</artifactId>
        <configuration>
          <ignorePathsToDelete>
            <ignorePathToDelete>javadocs</ignorePathToDelete>
          </ignorePathsToDelete>
        </configuration>
      </plugin>
    </plugins>
  </build>
</project>
